APCIterator::current (PECL apc >= 3.1.1) Get current item
APCIterator::getTotalCount (PECL apc >= 3.1.1) Get total count
APCIterator::getTotalHits (PECL apc >= 3.1.1) Get total cache hits
APCIterator::getTotalSize (PECL apc >= 3.1.1) Get total cache size
APCIterator::key (PECL apc >= 3.1.1) Get iterator key
APCIterator::next (PECL apc >= 3.1.1) Move pointer to next item
APCIterator::rewind (PECL apc >= 3.1.1) Rewinds iterator
APCIterator::valid (PECL apc >= 3.1.1) Checks if current position is valid
APCUIterator::current (PECL apcu >= 5.0.0) Get current item
APCUIterator::getTotalCount (PECL apcu >= 5.0.0) Get total count
APCUIterator::getTotalHits (PECL apcu >= 5.0.0) Get total cache hits
APCUIterator::getTotalSize (PECL apcu >= 5.0.0) Get total cache size
APCUIterator::key (PECL apcu >= 5.0.0) Get iterator key
APCUIterator::next (PECL apcu >= 5.0.0) Move pointer to next item
APCUIterator::rewind (PECL apcu >= 5.0.0) Rewinds iterator
APCUIterator::valid (PECL apcu >= 5.0.0) Checks if current position is valid
AppendIterator::append (PHP 5 >= 5.1.0, PHP 7) Appends an iterator
AppendIterator::current (PHP 5 >= 5.1.0, PHP 7) Gets the current value
AppendIterator::getArrayIterator (PHP 5 >= 5.2.0, PHP 7) Gets the ArrayIterator
AppendIterator::getInnerIterator (PHP 5 >= 5.1.0, PHP 7) Gets the inner iterator
AppendIterator::getIteratorIndex (PHP 5 >= 5.2.0, PHP 7) Gets an index of iterators
AppendIterator::key (PHP 5 >= 5.1.0, PHP 7) Gets the current key
AppendIterator::next (PHP 5 >= 5.1.0, PHP 7) Moves to the next element
AppendIterator::rewind (PHP 5 >= 5.1.0, PHP 7) Rewinds the Iterator
AppendIterator::valid (PHP 5 >= 5.1.0, PHP 7) Checks validity of the current element
ArrayAccess::offsetExists (PHP 5, PHP 7) Whether an offset exists
ArrayAccess::offsetGet (PHP 5, PHP 7) Offset to retrieve
ArrayAccess::offsetSet (PHP 5, PHP 7) Assign a value to the specified offset
ArrayAccess::offsetUnset (PHP 5, PHP 7) Unset an offset
ArrayIterator::append (PHP 5, PHP 7) Append an element
ArrayIterator::asort (PHP 5 >= 5.2.0, PHP 7) Sort array by values
ArrayIterator::count (PHP 5, PHP 7) Count elements
ArrayIterator::current (PHP 5, PHP 7) Return current array entry
ArrayIterator::getArrayCopy (PHP 5, PHP 7) Get array copy
ArrayIterator::getFlags (PHP 5 >= 5.1.0, PHP 7) Get behavior flags
ArrayIterator::key (PHP 5, PHP 7) Return current array key
ArrayIterator::ksort (PHP 5 >= 5.2.0, PHP 7) Sort array by keys
ArrayIterator::natcasesort (PHP 5 >= 5.2.0, PHP 7) Sort an array naturally, case insensitive
ArrayIterator::natsort (PHP 5 >= 5.2.0, PHP 7) Sort an array naturally
ArrayIterator::next (PHP 5, PHP 7) Move to next entry
ArrayIterator::offsetExists (PHP 5, PHP 7) Check if offset exists
ArrayIterator::offsetGet (PHP 5, PHP 7) Get value for an offset
ArrayIterator::offsetSet (PHP 5, PHP 7) Set value for an offset
ArrayIterator::offsetUnset (PHP 5, PHP 7) Unset value for an offset
ArrayIterator::rewind (PHP 5, PHP 7) Rewind array back to the start
ArrayIterator::seek (PHP 5, PHP 7) Seek to position
ArrayIterator::serialize (PHP 5 >= 5.3.0, PHP 7) Serialize
ArrayIterator::setFlags (PHP 5 >= 5.1.0, PHP 7) Set behaviour flags
ArrayIterator::uasort (PHP 5 >= 5.2.0, PHP 7) Sort with a user-defined comparison function and maintain index association
ArrayIterator::uksort (PHP 5 >= 5.2.0, PHP 7) Sort by keys using a user-defined comparison function
ArrayIterator::unserialize (PHP 5 >= 5.3.0, PHP 7) Unserialize
ArrayIterator::valid (PHP 5, PHP 7) Check whether array contains more entries
ArrayObject::append (PHP 5, PHP 7) Appends the value
ArrayObject::asort (PHP 5 >= 5.2.0, PHP 7) Sort the entries by value
ArrayObject::count (PHP 5, PHP 7) Get the number of public properties in the ArrayObject
ArrayObject::exchangeArray (PHP 5 >= 5.1.0, PHP 7) Exchange the array for another one
ArrayObject::getArrayCopy (PHP 5, PHP 7) Creates a copy of the ArrayObject
ArrayObject::getFlags (PHP 5 >= 5.1.0, PHP 7) Gets the behavior flags
ArrayObject::getIterator (PHP 5, PHP 7) Create a new iterator from an ArrayObject instance
ArrayObject::getIteratorClass (PHP 5 >= 5.1.0, PHP 7) Gets the iterator classname for the ArrayObject
ArrayObject::ksort (PHP 5 >= 5.2.0, PHP 7) Sort the entries by key
ArrayObject::natcasesort (PHP 5 >= 5.2.0, PHP 7) Sort an array using a case insensitive "natural order" algorithm
ArrayObject::natsort (PHP 5 >= 5.2.0, PHP 7) Sort entries using a "natural order" algorithm
ArrayObject::offsetExists (PHP 5, PHP 7) Returns whether the requested index exists
ArrayObject::offsetGet (PHP 5, PHP 7) Returns the value at the specified index
ArrayObject::offsetSet (PHP 5, PHP 7) Sets the value at the specified index to newval
ArrayObject::offsetUnset (PHP 5, PHP 7) Unsets the value at the specified index
ArrayObject::serialize (PHP 5 >= 5.3.0, PHP 7) Serialize an ArrayObject
ArrayObject::setFlags (PHP 5 >= 5.1.0, PHP 7) Sets the behavior flags
ArrayObject::setIteratorClass (PHP 5 >= 5.1.0, PHP 7) Sets the iterator classname for the ArrayObject
ArrayObject::uasort (PHP 5 >= 5.2.0, PHP 7) Sort the entries with a user-defined comparison function and maintain key association
ArrayObject::uksort (PHP 5 >= 5.2.0, PHP 7) Sort the entries by keys using a user-defined comparison function
ArrayObject::unserialize (PHP 5 >= 5.3.0, PHP 7) Unserialize an ArrayObject
CachingIterator::count (PHP 5 >= 5.2.2, PHP 7) The number of elements in the iterator
CachingIterator::current (PHP 5, PHP 7) Return the current element
CachingIterator::getCache (PHP 5 >= 5.2.0, PHP 7) Retrieve the contents of the cache
CachingIterator::getFlags (PHP 5 >= 5.2.0, PHP 7) Get flags used
CachingIterator::getInnerIterator (PHP 5, PHP 7) Returns the inner iterator
CachingIterator::hasNext (PHP 5, PHP 7) Check whether the inner iterator has a valid next element
CachingIterator::key (PHP 5, PHP 7) Return the key for the current element
CachingIterator::next (PHP 5, PHP 7) Move the iterator forward
CachingIterator::offsetExists (PHP 5 >= 5.2.0, PHP 7) The offsetExists purpose
CachingIterator::offsetGet (PHP 5 >= 5.2.0, PHP 7) The offsetGet purpose
CachingIterator::offsetSet (PHP 5 >= 5.2.0, PHP 7) The offsetSet purpose
CachingIterator::offsetUnset (PHP 5 >= 5.2.0, PHP 7) The offsetUnset purpose
CachingIterator::rewind (PHP 5, PHP 7) Rewind the iterator
CachingIterator::setFlags (PHP 5 >= 5.2.0, PHP 7) The setFlags purpose
CachingIterator::valid (PHP 5, PHP 7) Check whether the current element is valid
Cairo::availableFonts (PECL cairo >= 0.1.0) Retrieves the availables font types
Cairo::availableSurfaces (PECL cairo >= 0.1.0) Retrieves all available surfaces
Cairo::statusToString (PECL cairo >= 0.1.0) Retrieves the current status as string
Cairo::version (PECL cairo >= 0.1.0) Retrieves cairo's library version
Cairo::versionString (PECL cairo >= 0.1.0) Retrieves cairo version as string
CairoContext::appendPath (PECL cairo >= 0.1.0) Appends a path to current path
CairoContext::arc (PECL cairo >= 0.1.0) Adds a circular arc
CairoContext::arcNegative (PECL cairo >= 0.1.0) Adds a negative arc
CairoContext::clip (PECL cairo >= 0.1.0) Establishes a new clip region
CairoContext::clipExtents (PECL cairo >= 0.1.0) Computes the area inside the current clip
CairoContext::clipPreserve (PECL cairo >= 0.1.0) Establishes a new clip region from the current clip
CairoContext::clipRectangleList (PECL cairo >= 0.1.0) Retrieves the current clip as a list of rectangles
CairoContext::closePath (PECL cairo >= 0.1.0) Closes the current path
CairoContext::copyPage (PECL cairo >= 0.1.0) Emits the current page
CairoContext::copyPath (PECL cairo >= 0.1.0) Creates a copy of the current path
CairoContext::copyPathFlat (PECL cairo >= 0.1.0) Gets a flattened copy of the current path
CairoContext::curveTo (PECL cairo >= 0.1.0) Adds a curve
CairoContext::deviceToUser (PECL cairo >= 0.1.0) Transform a coordinate
CairoContext::deviceToUserDistance (PECL cairo >= 0.1.0) Transform a distance
CairoContext::fill (PECL cairo >= 0.1.0) Fills the current path
CairoContext::fillExtents (PECL cairo >= 0.1.0) Computes the filled area
CairoContext::fillPreserve (PECL cairo >= 0.1.0) Fills and preserve the current path
CairoContext::fontExtents (PECL cairo >= 0.1.0) Get the font extents
CairoContext::getAntialias (PECL cairo >= 0.1.0) Retrieves the current antialias mode
CairoContext::getCurrentPoint (PECL cairo >= 0.1.0) The getCurrentPoint purpose
CairoContext::getDash (PECL cairo >= 0.1.0) The getDash purpose
CairoContext::getDashCount (PECL cairo >= 0.1.0) The getDashCount purpose
CairoContext::getFillRule (PECL cairo >= 0.1.0) The getFillRule purpose
CairoContext::getFontFace (PECL cairo >= 0.1.0) The getFontFace purpose
CairoContext::getFontMatrix (PECL cairo >= 0.1.0) The getFontMatrix purpose
CairoContext::getFontOptions (PECL cairo >= 0.1.0) The getFontOptions purpose
CairoContext::getGroupTarget (PECL cairo >= 0.1.0) The getGroupTarget purpose
CairoContext::getLineCap (PECL cairo >= 0.1.0) The getLineCap purpose
CairoContext::getLineJoin (PECL cairo >= 0.1.0) The getLineJoin purpose
CairoContext::getLineWidth (PECL cairo >= 0.1.0) The getLineWidth purpose
CairoContext::getMatrix (PECL cairo >= 0.1.0) The getMatrix purpose
CairoContext::getMiterLimit (PECL cairo >= 0.1.0) The getMiterLimit purpose
CairoContext::getOperator (PECL cairo >= 0.1.0) The getOperator purpose
CairoContext::getScaledFont (PECL cairo >= 0.1.0) The getScaledFont purpose
CairoContext::getSource (PECL cairo >= 0.1.0) The getSource purpose
CairoContext::getTarget (PECL cairo >= 0.1.0) The getTarget purpose
CairoContext::getTolerance (PECL cairo >= 0.1.0) The getTolerance purpose
CairoContext::glyphPath (PECL cairo >= 0.1.0) The glyphPath purpose
CairoContext::hasCurrentPoint (PECL cairo >= 0.1.0) The hasCurrentPoint purpose
CairoContext::identityMatrix (PECL cairo >= 0.1.0) The identityMatrix purpose
CairoContext::inFill (PECL cairo >= 0.1.0) The inFill purpose
CairoContext::inStroke (PECL cairo >= 0.1.0) The inStroke purpose
CairoContext::lineTo (PECL cairo >= 0.1.0) The lineTo purpose
CairoContext::mask (PECL cairo >= 0.1.0) The mask purpose
CairoContext::maskSurface (PECL cairo >= 0.1.0) The maskSurface purpose
CairoContext::moveTo (PECL cairo >= 0.1.0) The moveTo purpose
CairoContext::newPath (PECL cairo >= 0.1.0) The newPath purpose
CairoContext::newSubPath (PECL cairo >= 0.1.0) The newSubPath purpose
CairoContext::paint (PECL cairo >= 0.1.0) The paint purpose
CairoContext::paintWithAlpha (PECL cairo >= 0.1.0) The paintWithAlpha purpose
CairoContext::pathExtents (PECL cairo >= 0.1.0) The pathExtents purpose
CairoContext::popGroup (PECL cairo >= 0.1.0) The popGroup purpose
CairoContext::popGroupToSource (PECL cairo >= 0.1.0) The popGroupToSource purpose
CairoContext::pushGroup (PECL cairo >= 0.1.0) The pushGroup purpose
CairoContext::pushGroupWithContent (PECL cairo >= 0.1.0) The pushGroupWithContent purpose
CairoContext::rectangle (PECL cairo >= 0.1.0) The rectangle purpose
CairoContext::relCurveTo (PECL cairo >= 0.1.0) The relCurveTo purpose
CairoContext::relLineTo (PECL cairo >= 0.1.0) The relLineTo purpose
CairoContext::relMoveTo (PECL cairo >= 0.1.0) The relMoveTo purpose
CairoContext::resetClip (PECL cairo >= 0.1.0) The resetClip purpose
CairoContext::restore (PECL cairo >= 0.1.0) The restore purpose
CairoContext::rotate (PECL cairo >= 0.1.0) The rotate purpose
CairoContext::save (PECL cairo >= 0.1.0) The save purpose
CairoContext::scale (PECL cairo >= 0.1.0) The scale purpose
CairoContext::selectFontFace (PECL cairo >= 0.1.0) The selectFontFace purpose
CairoContext::setAntialias (PECL cairo >= 0.1.0) The setAntialias purpose
CairoContext::setDash (PECL cairo >= 0.1.0) The setDash purpose
CairoContext::setFillRule (PECL cairo >= 0.1.0) The setFillRule purpose
CairoContext::setFontFace (PECL cairo >= 0.1.0) The setFontFace purpose
CairoContext::setFontMatrix (PECL cairo >= 0.1.0) The setFontMatrix purpose
CairoContext::setFontOptions (PECL cairo >= 0.1.0) The setFontOptions purpose
CairoContext::setFontSize (PECL cairo >= 0.1.0) The setFontSize purpose
CairoContext::setLineCap (PECL cairo >= 0.1.0) The setLineCap purpose
CairoContext::setLineJoin (PECL cairo >= 0.1.0) The setLineJoin purpose
CairoContext::setLineWidth (PECL cairo >= 0.1.0) The setLineWidth purpose
CairoContext::setMatrix (PECL cairo >= 0.1.0) The setMatrix purpose
CairoContext::setMiterLimit (PECL cairo >= 0.1.0) The setMiterLimit purpose
CairoContext::setOperator (PECL cairo >= 0.1.0) The setOperator purpose
CairoContext::setScaledFont (PECL cairo >= 0.1.0) The setScaledFont purpose
CairoContext::setSource (PECL cairo >= 0.1.0) The setSource purpose
CairoContext::setSourceRGB (PECL cairo >= 0.1.0) The setSourceRGB purpose
CairoContext::setSourceRGBA (PECL cairo >= 0.1.0) The setSourceRGBA purpose
CairoContext::setSourceSurface (PECL cairo >= 0.1.0) The setSourceSurface purpose
CairoContext::setTolerance (PECL cairo >= 0.1.0) The setTolerance purpose
CairoContext::showPage (PECL cairo >= 0.1.0) The showPage purpose
CairoContext::showText (PECL cairo >= 0.1.0) The showText purpose
CairoContext::status (PECL cairo >= 0.1.0) The status purpose
CairoContext::stroke (PECL cairo >= 0.1.0) The stroke purpose
CairoContext::strokeExtents (PECL cairo >= 0.1.0) The strokeExtents purpose
CairoContext::strokePreserve (PECL cairo >= 0.1.0) The strokePreserve purpose
CairoContext::textExtents (PECL cairo >= 0.1.0) The textExtents purpose
CairoContext::textPath (PECL cairo >= 0.1.0) The textPath purpose
CairoContext::transform (PECL cairo >= 0.1.0) The transform purpose
CairoContext::translate (PECL cairo >= 0.1.0) The translate purpose
CairoContext::userToDevice (PECL cairo >= 0.1.0) The userToDevice purpose
CairoContext::userToDeviceDistance (PECL cairo >= 0.1.0) The userToDeviceDistance purpose
CairoFontFace::getType (PECL cairo >= 0.1.0) Retrieves the font face type
CairoFontFace::status (PECL cairo >= 0.1.0) Check for CairoFontFace errors
CairoFontOptions::equal (PECL cairo >= 0.1.0) The equal purpose
CairoFontOptions::getAntialias (PECL cairo >= 0.1.0) The getAntialias purpose
CairoFontOptions::getHintMetrics (PECL cairo >= 0.1.0) The getHintMetrics purpose
CairoFontOptions::getHintStyle (PECL cairo >= 0.1.0) The getHintStyle purpose
CairoFontOptions::getSubpixelOrder (PECL cairo >= 0.1.0) The getSubpixelOrder purpose
CairoFontOptions::hash (PECL cairo >= 0.1.0) The hash purpose
CairoFontOptions::merge (PECL cairo >= 0.1.0) The merge purpose
CairoFontOptions::setAntialias (PECL cairo >= 0.1.0) The setAntialias purpose
CairoFontOptions::setHintMetrics (PECL cairo >= 0.1.0) The setHintMetrics purpose
CairoFontOptions::setHintStyle (PECL cairo >= 0.1.0) The setHintStyle purpose
CairoFontOptions::setSubpixelOrder (PECL cairo >= 0.1.0) The setSubpixelOrder purpose
CairoFontOptions::status (PECL cairo >= 0.1.0) The status purpose
CairoFormat::strideForWidth (PECL cairo >= 0.1.0) Provides an appropriate stride to use
CairoGradientPattern::addColorStopRgb (PECL cairo >= 0.1.0) The addColorStopRgb purpose
CairoGradientPattern::addColorStopRgba (PECL cairo >= 0.1.0) The addColorStopRgba purpose
CairoGradientPattern::getColorStopCount (PECL cairo >= 0.1.0) The getColorStopCount purpose
CairoGradientPattern::getColorStopRgba (PECL cairo >= 0.1.0) The getColorStopRgba purpose
CairoGradientPattern::getExtend (PECL cairo >= 0.1.0) The getExtend purpose
CairoGradientPattern::setExtend (PECL cairo >= 0.1.0) The setExtend purpose
CairoImageSurface::createForData (PECL cairo >= 0.1.0) The createForData purpose
CairoImageSurface::createFromPng (PECL cairo >= 0.1.0) Creates a new CairoImageSurface form a png image file
CairoImageSurface::getData (PECL cairo >= 0.1.0) Gets the image data as string
CairoImageSurface::getFormat (PECL cairo >= 0.1.0) Get the image format
CairoImageSurface::getHeight (PECL cairo >= 0.1.0) Retrieves the height of the CairoImageSurface
CairoImageSurface::getStride (PECL cairo >= 0.1.0) The getStride purpose
CairoImageSurface::getWidth (PECL cairo >= 0.1.0) Retrieves the width of the CairoImageSurface
CairoLinearGradient::getPoints (PECL cairo >= 0.1.0) The getPoints purpose
CairoMatrix::initIdentity (PECL cairo >= 0.1.0) Creates a new identity matrix
CairoMatrix::initRotate (PECL cairo >= 0.1.0) Creates a new rotated matrix
CairoMatrix::initScale (PECL cairo >= 0.1.0) Creates a new scaling matrix
CairoMatrix::initTranslate (PECL cairo >= 0.1.0) Creates a new translation matrix
CairoMatrix::invert (PECL cairo >= 0.1.0) The invert purpose
CairoMatrix::multiply (PECL cairo >= 0.1.0) The multiply purpose
CairoMatrix::rotate (PECL cairo >= 0.1.0) The rotate purpose
CairoMatrix::scale (PECL cairo >= 0.1.0) Applies scaling to a matrix
CairoMatrix::transformDistance (PECL cairo >= 0.1.0) The transformDistance purpose
CairoMatrix::transformPoint (PECL cairo >= 0.1.0) The transformPoint purpose
CairoMatrix::translate (PECL cairo >= 0.1.0) The translate purpose
CairoPattern::getMatrix (PECL cairo >= 0.1.0) The getMatrix purpose
CairoPattern::getType (PECL cairo >= 0.1.0) The getType purpose
CairoPattern::setMatrix (PECL cairo >= 0.1.0) The setMatrix purpose
CairoPattern::status (PECL cairo >= 0.1.0) The status purpose
CairoPdfSurface::setSize (PECL cairo >= 0.1.0) The setSize purpose
CairoPsSurface::dscBeginPageSetup (PECL cairo >= 0.1.0) The dscBeginPageSetup purpose
CairoPsSurface::dscBeginSetup (PECL cairo >= 0.1.0) The dscBeginSetup purpose
CairoPsSurface::dscComment (PECL cairo >= 0.1.0) The dscComment purpose
CairoPsSurface::getEps (PECL cairo >= 0.1.0) The getEps purpose
CairoPsSurface::getLevels (PECL cairo >= 0.1.0) The getLevels purpose
CairoPsSurface::levelToString (PECL cairo >= 0.1.0) The levelToString purpose
CairoPsSurface::restrictToLevel (PECL cairo >= 0.1.0) The restrictToLevel purpose
CairoPsSurface::setEps (PECL cairo >= 0.1.0) The setEps purpose
CairoPsSurface::setSize (PECL cairo >= 0.1.0) The setSize purpose
CairoRadialGradient::getCircles (PECL cairo >= 0.1.0) The getCircles purpose
CairoScaledFont::extents (PECL cairo >= 0.1.0) The extents purpose
CairoScaledFont::getCtm (PECL cairo >= 0.1.0) The getCtm purpose
CairoScaledFont::getFontFace (PECL cairo >= 0.1.0) The getFontFace purpose
CairoScaledFont::getFontMatrix (PECL cairo >= 0.1.0) The getFontMatrix purpose
CairoScaledFont::getFontOptions (PECL cairo >= 0.1.0) The getFontOptions purpose
CairoScaledFont::getScaleMatrix (PECL cairo >= 0.1.0) The getScaleMatrix purpose
CairoScaledFont::getType (PECL cairo >= 0.1.0) The getType purpose
CairoScaledFont::glyphExtents (PECL cairo >= 0.1.0) The glyphExtents purpose
CairoScaledFont::status (PECL cairo >= 0.1.0) The status purpose
CairoScaledFont::textExtents (PECL cairo >= 0.1.0) The textExtents purpose
CairoSolidPattern::getRgba (PECL cairo >= 0.1.0) The getRgba purpose
CairoSurface::copyPage (PECL cairo >= 0.1.0) The copyPage purpose
CairoSurface::createSimilar (PECL cairo >= 0.1.0) The createSimilar purpose
CairoSurface::finish (PECL cairo >= 0.1.0) The finish purpose
CairoSurface::flush (PECL cairo >= 0.1.0) The flush purpose
CairoSurface::getContent (PECL cairo >= 0.1.0) The getContent purpose
CairoSurface::getDeviceOffset (PECL cairo >= 0.1.0) The getDeviceOffset purpose
CairoSurface::getFontOptions (PECL cairo >= 0.1.0) The getFontOptions purpose
CairoSurface::getType (PECL cairo >= 0.1.0) The getType purpose
CairoSurface::markDirty (PECL cairo >= 0.1.0) The markDirty purpose
CairoSurface::markDirtyRectangle (PECL cairo >= 0.1.0) The markDirtyRectangle purpose
CairoSurface::setDeviceOffset (PECL cairo >= 0.1.0) The setDeviceOffset purpose
CairoSurface::setFallbackResolution (PECL cairo >= 0.1.0) The setFallbackResolution purpose
CairoSurface::showPage (PECL cairo >= 0.1.0) The showPage purpose
CairoSurface::status (PECL cairo >= 0.1.0) The status purpose
CairoSurface::writeToPng (PECL cairo >= 0.1.0) The writeToPng purpose
CairoSurfacePattern::getExtend (PECL cairo >= 0.1.0) The getExtend purpose
CairoSurfacePattern::getFilter (PECL cairo >= 0.1.0) The getFilter purpose
CairoSurfacePattern::getSurface (PECL cairo >= 0.1.0) The getSurface purpose
CairoSurfacePattern::setExtend (PECL cairo >= 0.1.0) The setExtend purpose
CairoSurfacePattern::setFilter (PECL cairo >= 0.1.0) The setFilter purpose
CairoSvgSurface::getVersions (PECL cairo >= 0.1.0) Used to retrieve a list of supported SVG versions
CairoSvgSurface::restrictToVersion (PECL cairo >= 0.1.0) The restrictToVersion purpose
CairoSvgSurface::versionToString (PECL cairo >= 0.1.0) The versionToString purpose
CallbackFilterIterator::accept (PHP 5 >= 5.4.0, PHP 7) Calls the callback with the current value, the current key and the inner iterator as arguments
chdb::get (PECL chdb >= 0.1.0) Gets the value associated with a key
Closure::bind (PHP 5 >= 5.4.0, PHP 7) Duplicates a closure with a specific bound object and class scope
Closure::bindTo (PHP 5 >= 5.4.0, PHP 7) Duplicates the closure with a new bound object and class scope
Closure::call (PHP 7) Binds and calls the closure
Closure::fromCallable (PHP 7 >= 7.1.0) Converts a callable into a closure
Collator::asort (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Sort array maintaining index association
Collator::compare (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Compare two Unicode strings
Collator::create (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Create a collator
Collator::getAttribute (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get collation attribute value
Collator::getErrorCode (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get collator's last error code
Collator::getErrorMessage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get text for collator's last error code
Collator::getLocale (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the locale name of the collator
Collator::getSortKey (PHP 5 >= 5.3.11, PHP 7, PECL intl >= 1.0.3) Get sorting key for a string
Collator::getStrength (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get current collation strength
Collator::setAttribute (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set collation attribute
Collator::setStrength (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set collation strength
Collator::sort (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Sort array using specified collator
Collator::sortWithSortKeys (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Sort array using specified collator and sort keys
Collectable::isGarbage (PECL pthreads >= 2.0.8) Determine whether an object has been marked as garbage
Collectable::setGarbage (PECL pthreads < 3.0.0) Mark an object as garbage
CommonMark\Interfaces\IVisitable::accept (cmark >= 1.0.0) Visitation
CommonMark\Interfaces\IVisitor::enter (cmark >= 1.0.0) Visitation
CommonMark\Interfaces\IVisitor::leave (cmark >= 1.0.0) Visitation
CommonMark\Node::accept (cmark >= 1.0.0) Visitation
CommonMark\Node::appendChild (cmark >= 1.0.0) AST Manipulation
CommonMark\Node::insertAfter (cmark >= 1.0.0) AST Manipulation
CommonMark\Node::insertBefore (cmark >= 1.0.0) AST Manipulation
CommonMark\Node::prependChild (cmark >= 1.0.0) AST Manipulation
CommonMark\Node::replace (cmark >= 1.0.0) AST Manipulation
CommonMark\Node::unlink (cmark >= 1.0.0) AST Manipulation
CommonMark\Parser::finish (cmark >= 1.0.0) Parsing
CommonMark\Parser::parse (cmark >= 1.0.0) Parsing
Componere\Abstract\Definition::addInterface (Componere 2 >= 2.1.0) Add Interface
Componere\Abstract\Definition::addMethod (Componere 2 >= 2.1.0) Add Method
Componere\Abstract\Definition::addTrait (Componere 2 >= 2.1.0) Add Trait
Componere\Abstract\Definition::getReflector (Componere 2 >= 2.1.0) Reflection
Componere\Definition::addConstant (Componere 2 >= 2.1.0) Add Constant
Componere\Definition::addProperty (Componere 2 >= 2.1.0) Add Property
Componere\Definition::getClosure (Componere 2 >= 2.1.0) Get Closure
Componere\Definition::getClosures (Componere 2 >= 2.1.0) Get Closures
Componere\Definition::isRegistered (Componere 2 >= 2.1.0) State Detection
Componere\Definition::register (Componere 2 >= 2.1.0) Registration
Componere\Method::getReflector (Componere 2 >= 2.1.0) Reflection
Componere\Method::setPrivate (Componere 2 >= 2.1.0) Accessibility Modification
Componere\Method::setProtected (Componere 2 >= 2.1.0) Accessibility Modification
Componere\Method::setStatic (Componere 2 >= 2.1.0) Accessibility Modification
Componere\Patch::apply (Componere 2 >= 2.1.0) Application
Componere\Patch::derive (Componere 2 >= 2.1.1) Patch Derivation
Componere\Patch::getClosure (Componere 2 >= 2.1.0) Get Closure
Componere\Patch::getClosures (Componere 2 >= 2.1.0) Get Closures
Componere\Patch::isApplied (Componere 2 >= 2.1.0) State Detection
Componere\Patch::revert (Componere 2 >= 2.1.0) Reversal
Componere\Value::hasDefault (Componere 2 >= 2.1.0) Value Interaction
Componere\Value::isPrivate (Componere 2 >= 2.1.0) Accessibility Detection
Componere\Value::isProtected (Componere 2 >= 2.1.0) Accessibility Detection
Componere\Value::isStatic (Componere 2 >= 2.1.0) Accessibility Detection
Componere\Value::setPrivate (Componere 2 >= 2.1.0) Accessibility Modification
Componere\Value::setProtected (Componere 2 >= 2.1.0) Accessibility Modification
Componere\Value::setStatic (Componere 2 >= 2.1.0) Accessibility Modification
Cond::broadcast (PECL pthreads < 3.0.0) Broadcast a Condition
Cond::create (PECL pthreads < 3.0.0) Create a Condition
Cond::destroy (PECL pthreads < 3.0.0) Destroy a Condition
Cond::signal (PECL pthreads < 3.0.0) Signal a Condition
Cond::wait (PECL pthreads < 3.0.0) Wait for Condition
Countable::count (PHP 5 >= 5.1.0, PHP 7) Count elements of an object
CURLFile::getFilename (PHP 5 >= 5.5.0, PHP 7) Get file name
CURLFile::getMimeType (PHP 5 >= 5.5.0, PHP 7) Get MIME type
CURLFile::getPostFilename (PHP 5 >= 5.5.0, PHP 7) Get file name for POST
CURLFile::setMimeType (PHP 5 >= 5.5.0, PHP 7) Set MIME type
CURLFile::setPostFilename (PHP 5 >= 5.5.0, PHP 7) Set file name for POST
DateInterval::createFromDateString (PHP 5 >= 5.3.0, PHP 7) Sets up a DateInterval from the relative parts of the string
DateInterval::format (PHP 5 >= 5.3.0, PHP 7) Formats the interval
DatePeriod::getDateInterval (PHP 5 >= 5.6.5, PHP 7) Gets the interval
DatePeriod::getEndDate (PHP 5 >= 5.6.5, PHP 7) Gets the end date
DatePeriod::getStartDate (PHP 5 >= 5.6.5, PHP 7) Gets the start date
DateTime::add (PHP 5 >= 5.3.0, PHP 7) Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object
DateTime::createFromFormat (PHP 5 >= 5.3.0, PHP 7) Parses a time string according to a specified format
DateTime::diff (PHP 5 >= 5.3.0, PHP 7) Returns the difference between two DateTime objects
DateTime::format (PHP 5 >= 5.2.1, PHP 7) Returns date formatted according to given format
DateTime::getLastErrors (PHP 5 >= 5.3.0, PHP 7) Returns the warnings and errors
DateTime::getOffset (PHP 5 >= 5.2.1, PHP 7) Returns the timezone offset
DateTime::getTimestamp (PHP 5 >= 5.3.0, PHP 7) Gets the Unix timestamp
DateTime::getTimezone (PHP 5 >= 5.2.1, PHP 7) Return time zone relative to given DateTime
DateTime::modify (PHP 5 >= 5.2.0, PHP 7) Alters the timestamp
DateTime::setDate (PHP 5 >= 5.2.0, PHP 7) Sets the date
DateTime::setISODate (PHP 5 >= 5.2.0, PHP 7) Sets the ISO date
DateTime::setTime (PHP 5 >= 5.2.0, PHP 7) Sets the time
DateTime::setTimestamp (PHP 5 >= 5.3.0, PHP 7) Sets the date and time based on an Unix timestamp
DateTime::setTimezone (PHP 5 >= 5.2.0, PHP 7) Sets the time zone for the DateTime object
DateTime::sub (PHP 5 >= 5.3.0, PHP 7) Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object
DateTimeImmutable::add (PHP 5 >= 5.5.0, PHP 7) Adds an amount of days, months, years, hours, minutes and seconds
DateTimeImmutable::createFromFormat (PHP 5 >= 5.5.0, PHP 7) Parses a time string according to a specified format
DateTimeImmutable::createFromMutable (PHP 5 >= 5.6.0, PHP 7) Returns new DateTimeImmutable object encapsulating the given DateTime object
DateTimeImmutable::getLastErrors (PHP 5 >= 5.5.0, PHP 7) Returns the warnings and errors
DateTimeImmutable::modify (PHP 5 >= 5.5.0, PHP 7) Creates a new object with modified timestamp
DateTimeImmutable::setDate (PHP 5 >= 5.5.0, PHP 7) Sets the date
DateTimeImmutable::setISODate (PHP 5 >= 5.5.0, PHP 7) Sets the ISO date
DateTimeImmutable::setTime (PHP 5 >= 5.5.0, PHP 7) Sets the time
DateTimeImmutable::setTimestamp (PHP 5 >= 5.5.0, PHP 7) Sets the date and time based on a Unix timestamp
DateTimeImmutable::setTimezone (PHP 5 >= 5.5.0, PHP 7) Sets the time zone
DateTimeImmutable::sub (PHP 5 >= 5.5.0, PHP 7) Subtracts an amount of days, months, years, hours, minutes and seconds
DateTimeZone::getLocation (PHP 5 >= 5.3.0, PHP 7) Returns location information for a timezone
DateTimeZone::getName (PHP 5 >= 5.2.0, PHP 7) Returns the name of the timezone
DateTimeZone::getOffset (PHP 5 >= 5.2.0, PHP 7) Returns the timezone offset from GMT
DateTimeZone::getTransitions (PHP 5 >= 5.2.0, PHP 7) Returns all transitions for the timezone
DateTimeZone::listAbbreviations (PHP 5 >= 5.2.0, PHP 7) Returns associative array containing dst, offset and the timezone name
DateTimeZone::listIdentifiers (PHP 5 >= 5.2.0, PHP 7) Returns a numerically indexed array containing all defined timezone identifiers
Directory::close (PHP 4, PHP 5, PHP 7) Close directory handle
Directory::read (PHP 4, PHP 5, PHP 7) Read entry from directory handle
Directory::rewind (PHP 4, PHP 5, PHP 7) Rewind directory handle
DirectoryIterator::current (PHP 5, PHP 7) Return the current DirectoryIterator item
DirectoryIterator::getATime (PHP 5, PHP 7) Get last access time of the current DirectoryIterator item
DirectoryIterator::getBasename (PHP 5 >= 5.2.2, PHP 7) Get base name of current DirectoryIterator item
DirectoryIterator::getCTime (PHP 5, PHP 7) Get inode change time of the current DirectoryIterator item
DirectoryIterator::getExtension (PHP 5 >= 5.3.6, PHP 7) Gets the file extension
DirectoryIterator::getFilename (PHP 5, PHP 7) Return file name of current DirectoryIterator item
DirectoryIterator::getGroup (PHP 5, PHP 7) Get group for the current DirectoryIterator item
DirectoryIterator::getInode (PHP 5, PHP 7) Get inode for the current DirectoryIterator item
DirectoryIterator::getMTime (PHP 5, PHP 7) Get last modification time of current DirectoryIterator item
DirectoryIterator::getOwner (PHP 5, PHP 7) Get owner of current DirectoryIterator item
DirectoryIterator::getPath (PHP 5, PHP 7) Get path of current Iterator item without filename
DirectoryIterator::getPathname (PHP 5, PHP 7) Return path and file name of current DirectoryIterator item
DirectoryIterator::getPerms (PHP 5, PHP 7) Get the permissions of current DirectoryIterator item
DirectoryIterator::getSize (PHP 5, PHP 7) Get size of current DirectoryIterator item
DirectoryIterator::getType (PHP 5, PHP 7) Determine the type of the current DirectoryIterator item
DirectoryIterator::isDir (PHP 5, PHP 7) Determine if current DirectoryIterator item is a directory
DirectoryIterator::isDot (PHP 5, PHP 7) Determine if current DirectoryIterator item is '.' or '..'
DirectoryIterator::isExecutable (PHP 5, PHP 7) Determine if current DirectoryIterator item is executable
DirectoryIterator::isFile (PHP 5, PHP 7) Determine if current DirectoryIterator item is a regular file
DirectoryIterator::isLink (PHP 5, PHP 7) Determine if current DirectoryIterator item is a symbolic link
DirectoryIterator::isReadable (PHP 5, PHP 7) Determine if current DirectoryIterator item can be read
DirectoryIterator::isWritable (PHP 5, PHP 7) Determine if current DirectoryIterator item can be written to
DirectoryIterator::key (PHP 5, PHP 7) Return the key for the current DirectoryIterator item
DirectoryIterator::next (PHP 5, PHP 7) Move forward to next DirectoryIterator item
DirectoryIterator::rewind (PHP 5, PHP 7) Rewind the DirectoryIterator back to the start
DirectoryIterator::seek (PHP 5 >= 5.3.0, PHP 7) Seek to a DirectoryIterator item
DirectoryIterator::valid (PHP 5, PHP 7) Check whether current DirectoryIterator position is a valid file
DOMAttr::isId (PHP 5, PHP 7) Checks if attribute is a defined ID
DOMCharacterData::appendData (PHP 5, PHP 7) Append the string to the end of the character data of the node
DOMCharacterData::deleteData (PHP 5, PHP 7) Remove a range of characters from the node
DOMCharacterData::insertData (PHP 5, PHP 7) Insert a string at the specified 16-bit unit offset
DOMCharacterData::replaceData (PHP 5, PHP 7) Replace a substring within the DOMCharacterData node
DOMCharacterData::substringData (PHP 5, PHP 7) Extracts a range of data from the node
DOMDocument::createAttribute (PHP 5, PHP 7) Create new attribute
DOMDocument::createAttributeNS (PHP 5, PHP 7) Create new attribute node with an associated namespace
DOMDocument::createCDATASection (PHP 5, PHP 7) Create new cdata node
DOMDocument::createComment (PHP 5, PHP 7) Create new comment node
DOMDocument::createDocumentFragment (PHP 5, PHP 7) Create new document fragment
DOMDocument::createElement (PHP 5, PHP 7) Create new element node
DOMDocument::createElementNS (PHP 5, PHP 7) Create new element node with an associated namespace
DOMDocument::createEntityReference (PHP 5, PHP 7) Create new entity reference node
DOMDocument::createProcessingInstruction (PHP 5, PHP 7) Creates new PI node
DOMDocument::createTextNode (PHP 5, PHP 7) Create new text node
DOMDocument::getElementById (PHP 5, PHP 7) Searches for an element with a certain id
DOMDocument::getElementsByTagName (PHP 5, PHP 7) Searches for all elements with given local tag name
DOMDocument::getElementsByTagNameNS (PHP 5, PHP 7) Searches for all elements with given tag name in specified namespace
DOMDocument::importNode (PHP 5, PHP 7) Import node into current document
DOMDocument::load (PHP 5, PHP 7) Load XML from a file
DOMDocument::loadHTML (PHP 5, PHP 7) Load HTML from a string
DOMDocument::loadHTMLFile (PHP 5, PHP 7) Load HTML from a file
DOMDocument::loadXML (PHP 5, PHP 7) Load XML from a string
DOMDocument::normalizeDocument (PHP 5, PHP 7) Normalizes the document
DOMDocument::registerNodeClass (PHP 5 >= 5.2.0, PHP 7) Register extended class used to create base node type
DOMDocument::relaxNGValidate (PHP 5, PHP 7) Performs relaxNG validation on the document
DOMDocument::relaxNGValidateSource (PHP 5, PHP 7) Performs relaxNG validation on the document
DOMDocument::save (PHP 5, PHP 7) Dumps the internal XML tree back into a file
DOMDocument::saveHTML (PHP 5, PHP 7) Dumps the internal document into a string using HTML formatting
DOMDocument::saveHTMLFile (PHP 5, PHP 7) Dumps the internal document into a file using HTML formatting
DOMDocument::saveXML (PHP 5, PHP 7) Dumps the internal XML tree back into a string
DOMDocument::schemaValidate (PHP 5, PHP 7) Validates a document based on a schema
DOMDocument::schemaValidateSource (PHP 5, PHP 7) Validates a document based on a schema
DOMDocument::validate (PHP 5, PHP 7) Validates the document based on its DTD
DOMDocument::xinclude (PHP 5, PHP 7) Substitutes XIncludes in a DOMDocument Object
DOMDocumentFragment::appendXML (PHP 5 >= 5.1.0, PHP 7) Append raw XML data
DOMElement::getAttribute (PHP 5, PHP 7) Returns value of attribute
DOMElement::getAttributeNode (PHP 5, PHP 7) Returns attribute node
DOMElement::getAttributeNodeNS (PHP 5, PHP 7) Returns attribute node
DOMElement::getAttributeNS (PHP 5, PHP 7) Returns value of attribute
DOMElement::getElementsByTagName (PHP 5, PHP 7) Gets elements by tagname
DOMElement::getElementsByTagNameNS (PHP 5, PHP 7) Get elements by namespaceURI and localName
DOMElement::hasAttribute (PHP 5, PHP 7) Checks to see if attribute exists
DOMElement::hasAttributeNS (PHP 5, PHP 7) Checks to see if attribute exists
DOMElement::removeAttribute (PHP 5, PHP 7) Removes attribute
DOMElement::removeAttributeNode (PHP 5, PHP 7) Removes attribute
DOMElement::removeAttributeNS (PHP 5, PHP 7) Removes attribute
DOMElement::setAttribute (PHP 5, PHP 7) Adds new attribute
DOMElement::setAttributeNode (PHP 5, PHP 7) Adds new attribute node to element
DOMElement::setAttributeNodeNS (PHP 5, PHP 7) Adds new attribute node to element
DOMElement::setAttributeNS (PHP 5, PHP 7) Adds new attribute
DOMElement::setIdAttribute (PHP 5, PHP 7) Declares the attribute specified by name to be of type ID
DOMElement::setIdAttributeNode (PHP 5, PHP 7) Declares the attribute specified by node to be of type ID
DOMElement::setIdAttributeNS (PHP 5, PHP 7) Declares the attribute specified by local name and namespace URI to be of type ID
DOMImplementation::createDocument (PHP 5, PHP 7) Creates a DOMDocument object of the specified type with its document element
DOMImplementation::createDocumentType (PHP 5, PHP 7) Creates an empty DOMDocumentType object
DOMImplementation::hasFeature (PHP 5, PHP 7) Test if the DOM implementation implements a specific feature
DOMNamedNodeMap::count (PHP 7 >= 7.2.0) Get number of nodes in the map
DOMNamedNodeMap::getNamedItem (PHP 5, PHP 7) Retrieves a node specified by name
DOMNamedNodeMap::getNamedItemNS (PHP 5, PHP 7) Retrieves a node specified by local name and namespace URI
DOMNamedNodeMap::item (PHP 5, PHP 7) Retrieves a node specified by index
DOMNode::appendChild (PHP 5, PHP 7) Adds new child at the end of the children
DOMNode::C14N (PHP 5 >= 5.2.0, PHP 7) Canonicalize nodes to a string
DOMNode::C14NFile (PHP 5 >= 5.2.0, PHP 7) Canonicalize nodes to a file
DOMNode::cloneNode (PHP 5, PHP 7) Clones a node
DOMNode::getLineNo (PHP 5 >= 5.3.0, PHP 7) Get line number for a node
DOMNode::getNodePath (PHP 5 >= 5.2.0, PHP 7) Get an XPath for a node
DOMNode::hasAttributes (PHP 5, PHP 7) Checks if node has attributes
DOMNode::hasChildNodes (PHP 5, PHP 7) Checks if node has children
DOMNode::insertBefore (PHP 5, PHP 7) Adds a new child before a reference node
DOMNode::isDefaultNamespace (PHP 5, PHP 7) Checks if the specified namespaceURI is the default namespace or not
DOMNode::isSameNode (PHP 5, PHP 7) Indicates if two nodes are the same node
DOMNode::isSupported (PHP 5, PHP 7) Checks if feature is supported for specified version
DOMNode::lookupNamespaceUri (PHP 5, PHP 7) Gets the namespace URI of the node based on the prefix
DOMNode::lookupPrefix (PHP 5, PHP 7) Gets the namespace prefix of the node based on the namespace URI
DOMNode::normalize (PHP 5, PHP 7) Normalizes the node
DOMNode::removeChild (PHP 5, PHP 7) Removes child from list of children
DOMNode::replaceChild (PHP 5, PHP 7) Replaces a child
DOMNodeList::count (PHP 7 >= 7.2.0) Get number of nodes in the list
DOMNodeList::item (PHP 5, PHP 7) Retrieves a node specified by index
DOMText::isElementContentWhitespace (No version information available, might only be in Git) Returns whether this text node contains whitespace in element content
DOMText::isWhitespaceInElementContent (PHP 5, PHP 7) Indicates whether this text node contains whitespace
DOMText::splitText (PHP 5, PHP 7) Breaks this node into two nodes at the specified offset
DOMXPath::evaluate (PHP 5 >= 5.1.0, PHP 7) Evaluates the given XPath expression and returns a typed result if possible
DOMXPath::query (PHP 5, PHP 7) Evaluates the given XPath expression
DOMXPath::registerNamespace (PHP 5, PHP 7) Registers the namespace with the DOMXPath object
DOMXPath::registerPhpFunctions (PHP 5 >= 5.3.0, PHP 7) Register PHP functions as XPath functions
Ds\Collection::clear (PECL ds >= 1.0.0) Removes all values
Ds\Collection::copy (PECL ds >= 1.0.0) Returns a shallow copy of the collection
Ds\Collection::isEmpty (PECL ds >= 1.0.0) Returns whether the collection is empty
Ds\Collection::toArray (PECL ds >= 1.0.0) Converts the collection to an array
Ds\Deque::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\Deque::apply (PECL ds >= 1.0.0) Updates all values by applying a callback function to each value
Ds\Deque::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\Deque::clear (PECL ds >= 1.0.0) Removes all values from the deque
Ds\Deque::contains (PECL ds >= 1.0.0) Determines if the deque contains given values
Ds\Deque::copy (PECL ds >= 1.0.0) Returns a shallow copy of the deque
Ds\Deque::filter (PECL ds >= 1.0.0) Creates a new deque using a callable
Ds\Deque::find (PECL ds >= 1.0.0) Attempts to find a value's index
Ds\Deque::first (PECL ds >= 1.0.0) Returns the first value in the deque
Ds\Deque::get (PECL ds >= 1.0.0) Returns the value at a given index
Ds\Deque::insert (PECL ds >= 1.0.0) Inserts values at a given index
Ds\Deque::isEmpty (PECL ds >= 1.0.0) Returns whether the deque is empty
Ds\Deque::join (PECL ds >= 1.0.0) Joins all values together as a string
Ds\Deque::last (PECL ds >= 1.0.0) Returns the last value
Ds\Deque::map (PECL ds >= 1.0.0) Returns the result of applying a callback to each value
Ds\Deque::merge (PECL ds >= 1.0.0) Returns the result of adding all given values to the deque
Ds\Deque::pop (PECL ds >= 1.0.0) Removes and returns the last value
Ds\Deque::push (PECL ds >= 1.0.0) Adds values to the end of the deque
Ds\Deque::reduce (PECL ds >= 1.0.0) Reduces the deque to a single value using a callback function
Ds\Deque::remove (PECL ds >= 1.0.0) Removes and returns a value by index
Ds\Deque::reverse (PECL ds >= 1.0.0) Reverses the deque in-place
Ds\Deque::reversed (PECL ds >= 1.0.0) Returns a reversed copy
Ds\Deque::rotate (PECL ds >= 1.0.0) Rotates the deque by a given number of rotations
Ds\Deque::set (PECL ds >= 1.0.0) Updates a value at a given index
Ds\Deque::shift (PECL ds >= 1.0.0) Removes and returns the first value
Ds\Deque::slice (PECL ds >= 1.0.0) Returns a sub-deque of a given range
Ds\Deque::sort (PECL ds >= 1.0.0) Sorts the deque in-place
Ds\Deque::sorted (PECL ds >= 1.0.0) Returns a sorted copy
Ds\Deque::sum (PECL ds >= 1.0.0) Returns the sum of all values in the deque
Ds\Deque::toArray (PECL ds >= 1.0.0) Converts the deque to an array
Ds\Deque::unshift (PECL ds >= 1.0.0) Adds values to the front of the deque
Ds\Hashable::equals (PECL ds >= 1.0.0) Determines whether an object is equal to the current instance
Ds\Hashable::hash (PECL ds >= 1.0.0) Returns a scalar value to be used as a hash value
Ds\Map::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\Map::apply (PECL ds >= 1.0.0) Updates all values by applying a callback function to each value
Ds\Map::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\Map::clear (PECL ds >= 1.0.0) Removes all values
Ds\Map::copy (PECL ds >= 1.0.0) Returns a shallow copy of the map
Ds\Map::diff (PECL ds >= 1.0.0) Creates a new map using keys that aren't in another map
Ds\Map::filter (PECL ds >= 1.0.0) Creates a new map using a callable
Ds\Map::first (PECL ds >= 1.0.0) Returns the first pair in the map
Ds\Map::get (PECL ds >= 1.0.0) Returns the value for a given key
Ds\Map::hasKey (PECL ds >= 1.0.0) Determines whether the map contains a given key
Ds\Map::hasValue (PECL ds >= 1.0.0) Determines whether the map contains a given value
Ds\Map::intersect (PECL ds >= 1.0.0) Creates a new map by intersecting keys with another map
Ds\Map::isEmpty (PECL ds >= 1.0.0) Returns whether the map is empty
Ds\Map::keys (PECL ds >= 1.0.0) Returns a set of the map's keys
Ds\Map::ksort (PECL ds >= 1.0.0) Sorts the map in-place by key
Ds\Map::ksorted (No version information available, might only be in Git) Returns a copy, sorted by key
Ds\Map::last (PECL ds >= 1.0.0) Returns the last pair of the map
Ds\Map::map (PECL ds >= 1.0.0) Returns the result of applying a callback to each value
Ds\Map::merge (PECL ds >= 1.0.0) Returns the result of adding all given associations
Ds\Map::pairs (PECL ds >= 1.0.0) Returns a sequence containing all the pairs of the map
Ds\Map::put (PECL ds >= 1.0.0) Associates a key with a value
Ds\Map::putAll (PECL ds >= 1.0.2) Associates all key-value pairs of a traversable object or array
Ds\Map::reduce (PECL ds >= 1.0.0) Reduces the map to a single value using a callback function
Ds\Map::remove (PECL ds >= 1.0.0) Removes and returns a value by key
Ds\Map::reverse (PECL ds >= 1.0.0) Reverses the map in-place
Ds\Map::reversed (PECL ds >= 1.0.0) Returns a reversed copy
Ds\Map::skip (PECL ds >= 1.0.0) Returns the pair at a given positional index
Ds\Map::slice (PECL ds >= 1.0.0) Returns a subset of the map defined by a starting index and length
Ds\Map::sort (PECL ds >= 1.0.0) Sorts the map in-place by value
Ds\Map::sorted (PECL ds >= 1.0.0) Returns a copy, sorted by value
Ds\Map::sum (No version information available, might only be in Git) Returns the sum of all values in the map
Ds\Map::toArray (PECL ds >= 1.0.0) Converts the map to an array
Ds\Map::union (PECL ds >= 1.0.0) Creates a new map using values from the current instance and another map
Ds\Map::values (PECL ds >= 1.0.0) Returns a sequence of the map's values
Ds\Map::xor (PECL ds >= 1.0.0) Creates a new map using keys of either the current instance or of another map, but not of both
Ds\Pair::clear (No version information available, might only be in Git) Removes all values
Ds\Pair::copy (No version information available, might only be in Git) Returns a shallow copy of the pair
Ds\Pair::isEmpty (No version information available, might only be in Git) Returns whether the pair is empty
Ds\Pair::toArray (PECL ds >= 1.0.0) Converts the pair to an array
Ds\PriorityQueue::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\PriorityQueue::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\PriorityQueue::clear (PECL ds >= 1.0.0) Removes all values
Ds\PriorityQueue::copy (PECL ds >= 1.0.0) Returns a shallow copy of the queue
Ds\PriorityQueue::isEmpty (PECL ds >= 1.0.0) Returns whether the queue is empty
Ds\PriorityQueue::peek (PECL ds >= 1.0.0) Returns the value at the front of the queue
Ds\PriorityQueue::pop (PECL ds >= 1.0.0) Removes and returns the value with the highest priority
Ds\PriorityQueue::push (PECL ds >= 1.0.0) Pushes values into the queue
Ds\PriorityQueue::toArray (PECL ds >= 1.0.0) Converts the queue to an array
Ds\Queue::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\Queue::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\Queue::clear (PECL ds >= 1.0.0) Removes all values
Ds\Queue::copy (PECL ds >= 1.0.0) Returns a shallow copy of the queue
Ds\Queue::isEmpty (PECL ds >= 1.0.0) Returns whether the queue is empty
Ds\Queue::peek (PECL ds >= 1.0.0) Returns the value at the front of the queue
Ds\Queue::pop (PECL ds >= 1.0.0) Removes and returns the value at the front of the queue
Ds\Queue::push (PECL ds >= 1.0.0) Pushes values into the queue
Ds\Queue::toArray (PECL ds >= 1.0.0) Converts the queue to an array
Ds\Sequence::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\Sequence::apply (PECL ds >= 1.0.0) Updates all values by applying a callback function to each value
Ds\Sequence::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\Sequence::contains (PECL ds >= 1.0.0) Determines if the sequence contains given values
Ds\Sequence::filter (PECL ds >= 1.0.0) Creates a new sequence using a callable
Ds\Sequence::find (PECL ds >= 1.0.0) Attempts to find a value's index
Ds\Sequence::first (PECL ds >= 1.0.0) Returns the first value in the sequence
Ds\Sequence::get (PECL ds >= 1.0.0) Returns the value at a given index
Ds\Sequence::insert (PECL ds >= 1.0.0) Inserts values at a given index
Ds\Sequence::join (PECL ds >= 1.0.0) Joins all values together as a string
Ds\Sequence::last (PECL ds >= 1.0.0) Returns the last value
Ds\Sequence::map (PECL ds >= 1.0.0) Returns the result of applying a callback to each value
Ds\Sequence::merge (PECL ds >= 1.0.0) Returns the result of adding all given values to the sequence
Ds\Sequence::pop (PECL ds >= 1.0.0) Removes and returns the last value
Ds\Sequence::push (PECL ds >= 1.0.0) Adds values to the end of the sequence
Ds\Sequence::reduce (PECL ds >= 1.0.0) Reduces the sequence to a single value using a callback function
Ds\Sequence::remove (PECL ds >= 1.0.0) Removes and returns a value by index
Ds\Sequence::reverse (PECL ds >= 1.0.0) Reverses the sequence in-place
Ds\Sequence::reversed (PECL ds >= 1.0.0) Returns a reversed copy
Ds\Sequence::rotate (PECL ds >= 1.0.0) Rotates the sequence by a given number of rotations
Ds\Sequence::set (PECL ds >= 1.0.0) Updates a value at a given index
Ds\Sequence::shift (PECL ds >= 1.0.0) Removes and returns the first value
Ds\Sequence::slice (PECL ds >= 1.0.0) Returns a sub-sequence of a given range
Ds\Sequence::sort (PECL ds >= 1.0.0) Sorts the sequence in-place
Ds\Sequence::sorted (PECL ds >= 1.0.0) Returns a sorted copy
Ds\Sequence::sum (PECL ds >= 1.0.0) Returns the sum of all values in the sequence
Ds\Sequence::unshift (PECL ds >= 1.0.0) Adds values to the front of the sequence
Ds\Set::add (PECL ds >= 1.0.0) Adds values to the set
Ds\Set::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\Set::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\Set::clear (PECL ds >= 1.0.0) Removes all values
Ds\Set::contains (PECL ds >= 1.0.0) Determines if the set contains all values
Ds\Set::copy (PECL ds >= 1.0.0) Returns a shallow copy of the set
Ds\Set::diff (PECL ds >= 1.0.0) Creates a new set using values that aren't in another set
Ds\Set::filter (PECL ds >= 1.0.0) Creates a new set using a callable
Ds\Set::first (PECL ds >= 1.0.0) Returns the first value in the set
Ds\Set::get (PECL ds >= 1.0.0) Returns the value at a given index
Ds\Set::intersect (PECL ds >= 1.0.0) Creates a new set by intersecting values with another set
Ds\Set::isEmpty (PECL ds >= 1.0.0) Returns whether the set is empty
Ds\Set::join (PECL ds >= 1.0.0) Joins all values together as a string
Ds\Set::last (PECL ds >= 1.0.0) Returns the last value in the set
Ds\Set::merge (PECL ds >= 1.0.3) Returns the result of adding all given values to the set
Ds\Set::reduce (PECL ds >= 1.0.0) Reduces the set to a single value using a callback function
Ds\Set::remove (PECL ds >= 1.0.0) Removes all given values from the set
Ds\Set::reverse (PECL ds >= 1.0.0) Reverses the set in-place
Ds\Set::reversed (PECL ds >= 1.0.0) Returns a reversed copy
Ds\Set::slice (PECL ds >= 1.0.0) Returns a sub-set of a given range
Ds\Set::sort (PECL ds >= 1.0.0) Sorts the set in-place
Ds\Set::sorted (PECL ds >= 1.0.0) Returns a sorted copy
Ds\Set::sum (PECL ds >= 1.0.0) Returns the sum of all values in the set
Ds\Set::toArray (PECL ds >= 1.0.0) Converts the set to an array
Ds\Set::union (PECL ds >= 1.0.0) Creates a new set using values from the current instance and another set
Ds\Set::xor (PECL ds >= 1.0.0) Creates a new set using values in either the current instance or in another set, but not in both
Ds\Stack::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\Stack::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\Stack::clear (PECL ds >= 1.0.0) Removes all values
Ds\Stack::copy (PECL ds >= 1.0.0) Returns a shallow copy of the stack
Ds\Stack::isEmpty (PECL ds >= 1.0.0) Returns whether the stack is empty
Ds\Stack::peek (PECL ds >= 1.0.0) Returns the value at the top of the stack
Ds\Stack::pop (PECL ds >= 1.0.0) Removes and returns the value at the top of the stack
Ds\Stack::push (PECL ds >= 1.0.0) Pushes values onto the stack
Ds\Stack::toArray (PECL ds >= 1.0.0) Converts the stack to an array
Ds\Vector::allocate (PECL ds >= 1.0.0) Allocates enough memory for a required capacity
Ds\Vector::apply (PECL ds >= 1.0.0) Updates all values by applying a callback function to each value
Ds\Vector::capacity (PECL ds >= 1.0.0) Returns the current capacity
Ds\Vector::clear (PECL ds >= 1.0.0) Removes all values
Ds\Vector::contains (PECL ds >= 1.0.0) Determines if the vector contains given values
Ds\Vector::copy (PECL ds >= 1.0.0) Returns a shallow copy of the vector
Ds\Vector::filter (PECL ds >= 1.0.0) Creates a new vector using a callable
Ds\Vector::find (PECL ds >= 1.0.0) Attempts to find a value's index
Ds\Vector::first (PECL ds >= 1.0.0) Returns the first value in the vector
Ds\Vector::get (PECL ds >= 1.0.0) Returns the value at a given index
Ds\Vector::insert (PECL ds >= 1.0.0) Inserts values at a given index
Ds\Vector::isEmpty (PECL ds >= 1.0.0) Returns whether the vector is empty
Ds\Vector::join (PECL ds >= 1.0.0) Joins all values together as a string
Ds\Vector::last (PECL ds >= 1.0.0) Returns the last value
Ds\Vector::map (PECL ds >= 1.0.0) Returns the result of applying a callback to each value
Ds\Vector::merge (PECL ds >= 1.0.0) Returns the result of adding all given values to the vector
Ds\Vector::pop (PECL ds >= 1.0.0) Removes and returns the last value
Ds\Vector::push (PECL ds >= 1.0.0) Adds values to the end of the vector
Ds\Vector::reduce (PECL ds >= 1.0.0) Reduces the vector to a single value using a callback function
Ds\Vector::remove (PECL ds >= 1.0.0) Removes and returns a value by index
Ds\Vector::reverse (PECL ds >= 1.0.0) Reverses the vector in-place
Ds\Vector::reversed (PECL ds >= 1.0.0) Returns a reversed copy
Ds\Vector::rotate (PECL ds >= 1.0.0) Rotates the vector by a given number of rotations
Ds\Vector::set (PECL ds >= 1.0.0) Updates a value at a given index
Ds\Vector::shift (PECL ds >= 1.0.0) Removes and returns the first value
Ds\Vector::slice (PECL ds >= 1.0.0) Returns a sub-vector of a given range
Ds\Vector::sort (PECL ds >= 1.0.0) Sorts the vector in-place
Ds\Vector::sorted (PECL ds >= 1.0.0) Returns a sorted copy
Ds\Vector::sum (PECL ds >= 1.0.0) Returns the sum of all values in the vector
Ds\Vector::toArray (PECL ds >= 1.0.0) Converts the vector to an array
Ds\Vector::unshift (PECL ds >= 1.0.0) Adds values to the front of the vector
EmptyIterator::current (PHP 5 >= 5.1.0, PHP 7) The current() method
EmptyIterator::key (PHP 5 >= 5.1.0, PHP 7) The key() method
EmptyIterator::next (PHP 5 >= 5.1.0, PHP 7) The next() method
EmptyIterator::rewind (PHP 5 >= 5.1.0, PHP 7) The rewind() method
EmptyIterator::valid (PHP 5 >= 5.1.0, PHP 7) The valid() method
Error::getCode (No version information available, might only be in Git) Gets the error code
Error::getFile (No version information available, might only be in Git) Gets the file in which the error occurred
Error::getLine (No version information available, might only be in Git) Gets the line in which the error occurred
Error::getMessage (No version information available, might only be in Git) Gets the error message
Error::getPrevious (No version information available, might only be in Git) Returns previous Throwable
Error::getTrace (No version information available, might only be in Git) Gets the stack trace
Error::getTraceAsString (No version information available, might only be in Git) Gets the stack trace as a string
ErrorException::getSeverity (PHP 5 >= 5.1.0, PHP 7) Gets the exception severity
Ev::backend (PECL ev >= 0.2.0) Returns an integer describing the backend used by libev
Ev::depth (PECL ev >= 0.2.0) Returns recursion depth
Ev::embeddableBackends (PECL ev >= 0.2.0) Returns the set of backends that are embeddable in other event loops
Ev::feedSignal (PECL ev >= 0.2.0) Feed a signal event info Ev
Ev::feedSignalEvent (No version information available, might only be in Git) Feed signal event into the default loop
Ev::iteration (PECL ev >= 0.2.0) Return the number of times the default event loop has polled for new events
Ev::now (PECL ev >= 0.2.0) Returns the time when the last iteration of the default event loop has started
Ev::nowUpdate (PECL ev >= 0.2.0) Establishes the current time by querying the kernel, updating the time returned by Ev::now in the progress
Ev::recommendedBackends (PECL ev >= 0.2.0) Returns a bit mask of recommended backends for current platform
Ev::resume (PECL ev >= 0.2.0) Resume previously suspended default event loop
Ev::run (PECL ev >= 0.2.0) Begin checking for events and calling callbacks for the default loop
Ev::sleep (PECL ev >= 0.2.0) Block the process for the given number of seconds
Ev::stop (PECL ev >= 0.2.0) Stops the default event loop
Ev::supportedBackends (PECL ev >= 0.2.0) Returns the set of backends supported by current libev configuration
Ev::suspend (PECL ev >= 0.2.0) Suspend the default event loop
Ev::time (PECL ev >= 0.2.0) Returns the current time in fractional seconds since the epoch
Ev::verify (PECL ev >= 0.2.0) Performs internal consistency checks(for debugging)
EvCheck::createStopped (PECL ev >= 0.2.0) Create instance of a stopped EvCheck watcher
EvChild::createStopped (PECL ev >= 0.2.0) Create instance of a stopped EvCheck watcher
EvChild::set (PECL ev >= 0.2.0) Configures the watcher
EvEmbed::createStopped (PECL ev >= 0.2.0) Create stopped EvEmbed watcher object
EvEmbed::set (PECL ev >= 0.2.0) Configures the watcher
EvEmbed::sweep (PECL ev >= 0.2.0) Make a single, non-blocking sweep over the embedded loop
Event::add (PECL libevent >= 0.0.1) Makes event pending
Event::addSignal (PECL event >= 1.2.6-beta) Makes signal event pending
Event::addTimer (PECL event >= 1.2.6-beta) Makes timer event pending
Event::del (PECL libevent >= 0.0.1) Makes event non-pending
Event::delSignal (PECL event >= 1.2.6-beta) Makes signal event non-pending
Event::delTimer (PECL event >= 1.2.6-beta) Makes timer event non-pending
Event::free (PECL libevent >= 0.0.1) Make event non-pending and free resources allocated for this event
Event::getSupportedMethods (PECL event >= 1.2.6-beta) Returns array with of the names of the methods supported in this version of Libevent
Event::pending (PECL event >= 1.2.6-beta) Detects whether event is pending or scheduled
Event::set (PECL libevent >= 0.0.1) Re-configures event
Event::setPriority (PECL event >= 1.2.6-beta) Set event priority
Event::setTimer (PECL event >= 1.2.6-beta) Re-configures timer event
Event::signal (PECL event >= 1.2.6-beta) Constructs signal event object
Event::timer (PECL event >= 1.2.6-beta) Constructs timer event object
EventBase::dispatch (PECL event >= 1.2.6-beta) Dispatch pending events
EventBase::exit (PECL event >= 1.2.6-beta) Stop dispatching events
EventBase::free (PECL event >= 1.10.0) Free resources allocated for this event base
EventBase::getFeatures (PECL event >= 1.2.6-beta) Returns bitmask of features supported
EventBase::getMethod (PECL event >= 1.2.6-beta) Returns event method in use
EventBase::getTimeOfDayCached (PECL event >= 1.2.6-beta) Returns the current event base time
EventBase::gotExit (PECL event >= 1.2.6-beta) Checks if the event loop was told to exit
EventBase::gotStop (PECL event >= 1.2.6-beta) Checks if the event loop was told to exit
EventBase::loop (PECL event >= 1.2.6-beta) Dispatch pending events
EventBase::priorityInit (PECL event >= 1.2.6-beta) Sets number of priorities per event base
EventBase::reInit (PECL event >= 1.2.6-beta) Re-initialize event base(after a fork)
EventBase::stop (PECL event >= 1.2.6-beta) Tells event_base to stop dispatching events
EventBuffer::add (PECL event >= 1.2.6-beta) Append data to the end of an event buffer
EventBuffer::addBuffer (PECL event >= 1.2.6-beta) Move all data from a buffer provided to the current instance of EventBuffer
EventBuffer::appendFrom (PECL event >= 1.6.0) Moves the specified number of bytes from a source buffer to the end of the current buffer
EventBuffer::copyout (PECL event >= 1.2.6-beta) Copies out specified number of bytes from the front of the buffer
EventBuffer::drain (PECL event >= 1.2.6-beta) Removes specified number of bytes from the front of the buffer without copying it anywhere
EventBuffer::enableLocking (PECL event >= 1.2.6-beta)
EventBuffer::expand (PECL event >= 1.2.6-beta) Reserves space in buffer
EventBuffer::freeze (PECL event >= 1.2.6-beta) Prevent calls that modify an event buffer from succeeding
EventBuffer::lock (PECL event >= 1.2.6-beta) Acquires a lock on buffer
EventBuffer::prepend (PECL event >= 1.2.6-beta) Prepend data to the front of the buffer
EventBuffer::prependBuffer (PECL event >= 1.2.6-beta) Moves all data from source buffer to the front of current buffer
EventBuffer::pullup (PECL event >= 1.2.6-beta) Linearizes data within buffer and returns it's contents as a string
EventBuffer::read (PECL event >= 1.6.0) Read data from an evbuffer and drain the bytes read
EventBuffer::readLine (PECL event >= 1.2.6-beta) Extracts a line from the front of the buffer
EventBuffer::search (PECL event >= 1.2.6-beta) Scans the buffer for an occurrence of a string
EventBuffer::searchEol (PECL event >= 1.5.0) Scans the buffer for an occurrence of an end of line
EventBuffer::substr (PECL event >= 1.6.0) Substracts a portion of the buffer data
EventBuffer::unfreeze (PECL event >= 1.2.6-beta) Re-enable calls that modify an event buffer
EventBuffer::unlock (PECL event >= 1.2.6-beta) Releases lock acquired by EventBuffer::lock
EventBuffer::write (PECL event >= 1.6.0) Write contents of the buffer to a file or socket
EventBufferEvent::close (PECL event >= 1.10.0) Closes file descriptor associated with the current buffer event
EventBufferEvent::connect (PECL event >= 1.2.6-beta) Connect buffer event's file descriptor to given address or UNIX socket
EventBufferEvent::connectHost (PECL event >= 1.2.6-beta) Connects to a hostname with optionally asyncronous DNS resolving
EventBufferEvent::createPair (PECL event >= 1.2.6-beta) Creates two buffer events connected to each other
EventBufferEvent::disable (PECL event >= 1.2.6-beta) Disable events read, write, or both on a buffer event
EventBufferEvent::enable (PECL event >= 1.2.6-beta) Enable events read, write, or both on a buffer event
EventBufferEvent::free (PECL event >= 1.2.6-beta) Free a buffer event
EventBufferEvent::getDnsErrorString (PECL event >= 1.2.6-beta) Returns string describing the last failed DNS lookup attempt
EventBufferEvent::getEnabled (PECL event >= 1.2.6-beta) Returns bitmask of events currently enabled on the buffer event
EventBufferEvent::getInput (PECL event >= 1.2.6-beta) Returns underlying input buffer associated with current buffer event
EventBufferEvent::getOutput (PECL event >= 1.2.6-beta) Returns underlying output buffer associated with current buffer event
EventBufferEvent::read (PECL event >= 1.2.6-beta) Read buffer's data
EventBufferEvent::readBuffer (PECL event >= 1.2.6-beta) Drains the entire contents of the input buffer and places them into buf
EventBufferEvent::setCallbacks (PECL event >= 1.2.6-beta) Assigns read, write and event(status) callbacks
EventBufferEvent::setPriority (PECL event >= 1.2.6-beta) Assign a priority to a bufferevent
EventBufferEvent::setTimeouts (PECL event >= 1.2.6-beta) Set the read and write timeout for a buffer event
EventBufferEvent::setWatermark (PECL event >= 1.2.6-beta) Adjusts read and/or write watermarks
EventBufferEvent::sslError (PECL event >= 1.2.6-beta) Returns most recent OpenSSL error reported on the buffer event
EventBufferEvent::sslFilter (PECL event >= 1.2.6-beta) Create a new SSL buffer event to send its data over another buffer event
EventBufferEvent::sslGetCipherInfo (PECL event >= 1.10.0) Returns a textual description of the cipher
EventBufferEvent::sslGetCipherName (PECL event >= 1.10.0) Returns the current cipher name of the SSL connection
EventBufferEvent::sslGetCipherVersion (PECL event >= 1.10.0) Returns version of cipher used by current SSL connection
EventBufferEvent::sslGetProtocol (PECL event >= 1.10.0) Returns the name of the protocol used for current SSL connection
EventBufferEvent::sslRenegotiate (PECL event >= 1.2.6-beta) Tells a bufferevent to begin SSL renegotiation
EventBufferEvent::sslSocket (PECL event >= 1.2.6-beta) Creates a new SSL buffer event to send its data over an SSL on a socket
EventBufferEvent::write (PECL event >= 1.2.6-beta) Adds data to a buffer event's output buffer
EventBufferEvent::writeBuffer (PECL event >= 1.2.6-beta) Adds contents of the entire buffer to a buffer event's output buffer
EventConfig::avoidMethod (PECL event >= 1.2.6-beta) Tells libevent to avoid specific event method
EventConfig::requireFeatures (PECL event >= 1.2.6-beta) Enters a required event method feature that the application demands
EventConfig::setMaxDispatchInterval (No version information available, might only be in Git) Prevents priority inversion
EventDnsBase::addNameserverIp (PECL event >= 1.2.6-beta) Adds a nameserver to the DNS base
EventDnsBase::addSearch (PECL event >= 1.2.6-beta) Adds a domain to the list of search domains
EventDnsBase::clearSearch (PECL event >= 1.2.6-beta) Removes all current search suffixes
EventDnsBase::countNameservers (PECL event >= 1.2.6-beta) Gets the number of configured nameservers
EventDnsBase::loadHosts (PECL event >= 1.2.6-beta) Loads a hosts file (in the same format as /etc/hosts) from hosts file
EventDnsBase::parseResolvConf (PECL event >= 1.2.6-beta) Scans the resolv.conf-formatted file
EventDnsBase::setOption (PECL event >= 1.2.6-beta) Set the value of a configuration option
EventDnsBase::setSearchNdots (PECL event >= 1.2.6-beta) Set the 'ndots' parameter for searches
EventHttp::accept (PECL event >= 1.2.6-beta) Makes an HTTP server accept connections on the specified socket stream or resource
EventHttp::addServerAlias (PECL event >= 1.4.0-beta) Adds a server alias to the HTTP server object
EventHttp::bind (PECL event >= 1.2.6-beta) Binds an HTTP server on the specified address and port
EventHttp::removeServerAlias (PECL event >= 1.4.0-beta) Removes server alias
EventHttp::setAllowedMethods (PECL event >= 1.4.0-beta) Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks
EventHttp::setCallback (PECL event >= 1.4.0-beta) Sets a callback for specified URI
EventHttp::setDefaultCallback (PECL event >= 1.4.0-beta) Sets default callback to handle requests that are not caught by specific callbacks
EventHttp::setMaxBodySize (PECL event >= 1.4.0-beta) Sets maximum request body size
EventHttp::setMaxHeadersSize (PECL event >= 1.4.0-beta) Sets maximum HTTP header size
EventHttp::setTimeout (PECL event >= 1.4.0-beta) Sets the timeout for an HTTP request
EventHttpConnection::getBase (PECL event >= 1.2.6-beta) Returns event base associated with the connection
EventHttpConnection::getPeer (PECL event >= 1.2.6-beta) Gets the remote address and port associated with the connection
EventHttpConnection::makeRequest (PECL event >= 1.4.0-beta) Makes an HTTP request over the specified connection
EventHttpConnection::setCloseCallback (PECL event >= 1.8.0) Set callback for connection close
EventHttpConnection::setLocalAddress (PECL event >= 1.2.6-beta) Sets the IP address from which HTTP connections are made
EventHttpConnection::setLocalPort (PECL event >= 1.2.6-beta) Sets the local port from which connections are made
EventHttpConnection::setMaxBodySize (PECL event >= 1.2.6-beta) Sets maximum body size for the connection
EventHttpConnection::setMaxHeadersSize (PECL event >= 1.2.6-beta) Sets maximum header size
EventHttpConnection::setRetries (PECL event >= 1.2.6-beta) Sets the retry limit for the connection
EventHttpConnection::setTimeout (PECL event >= 1.2.6-beta) Sets the timeout for the connection
EventHttpRequest::addHeader (PECL event >= 1.4.0-beta) Adds an HTTP header to the headers of the request
EventHttpRequest::cancel (PECL event >= 1.4.0-beta) Cancels a pending HTTP request
EventHttpRequest::clearHeaders (PECL event >= 1.4.0-beta) Removes all output headers from the header list of the request
EventHttpRequest::closeConnection (PECL event >= 1.8.0) Closes associated HTTP connection
EventHttpRequest::findHeader (PECL event >= 1.4.0-beta) Finds the value belonging a header
EventHttpRequest::free (PECL event >= 1.4.0-beta) Frees the object and removes associated events
EventHttpRequest::getCommand (PECL event >= 1.4.0-beta) Returns the request command(method)
EventHttpRequest::getHost (PECL event >= 1.4.0-beta) Returns the request host
EventHttpRequest::getInputBuffer (PECL event >= 1.4.0-beta) Returns the input buffer
EventHttpRequest::getInputHeaders (PECL event >= 1.4.0-beta) Returns associative array of the input headers
EventHttpRequest::getOutputBuffer (PECL event >= 1.4.0-beta) Returns the output buffer of the request
EventHttpRequest::getOutputHeaders (PECL event >= 1.4.0-beta) Returns associative array of the output headers
EventHttpRequest::getResponseCode (PECL event >= 1.4.0-beta) Returns the response code
EventHttpRequest::getUri (PECL event >= 1.4.0-beta) Returns the request URI
EventHttpRequest::removeHeader (PECL event >= 1.4.0-beta) Removes an HTTP header from the headers of the request
EventHttpRequest::sendError (PECL event >= 1.4.0-beta) Send an HTML error message to the client
EventHttpRequest::sendReply (PECL event >= 1.4.0-beta) Send an HTML reply to the client
EventHttpRequest::sendReplyChunk (PECL event >= 1.4.0-beta) Send another data chunk as part of an ongoing chunked reply
EventHttpRequest::sendReplyEnd (PECL event >= 1.4.0-beta) Complete a chunked reply, freeing the request as appropriate
EventHttpRequest::sendReplyStart (PECL event >= 1.4.0-beta) Initiate a chunked reply
EventListener::disable (PECL event >= 1.2.6-beta) Disables an event connect listener object
EventListener::enable (PECL event >= 1.2.6-beta) Enables an event connect listener object
EventListener::getBase (PECL event >= 1.2.6-beta) Returns event base associated with the event listener
EventListener::getSocketName (PECL event >= 1.5.0) Retreives the current address to which the listener's socket is bound
EventListener::setCallback (PECL event >= 1.2.6-beta) The setCallback purpose
EventListener::setErrorCallback (PECL event >= 1.2.6-beta) Set event listener's error callback
EventUtil::getLastSocketErrno (PECL event >= 1.2.6-beta) Returns the most recent socket error number
EventUtil::getLastSocketError (PECL event >= 1.2.6-beta) Returns the most recent socket error
EventUtil::getSocketFd (PECL event >= 1.7.0) Returns numeric file descriptor of a socket, or stream
EventUtil::getSocketName (PECL event >= 1.5.0) Retreives the current address to which the socket is bound
EventUtil::setSocketOption (PECL event >= 1.6.0) Sets socket options
EventUtil::sslRandPoll (PECL event >= 1.2.6-beta) Generates entropy by means of OpenSSL's RAND_poll()
EvFork::createStopped (PECL ev >= 0.2.0) Creates a stopped instance of EvFork watcher class
EvIdle::createStopped (PECL ev >= 0.2.0) Creates instance of a stopped EvIdle watcher object
EvIo::createStopped (PECL ev >= 0.2.0) Create stopped EvIo watcher object
EvIo::set (PECL ev >= 0.2.0) Configures the watcher
EvLoop::backend (PECL ev >= 0.2.0) Returns an integer describing the backend used by libev
EvLoop::check (PECL ev >= 0.2.0) Creates EvCheck object associated with the current event loop instance
EvLoop::child (PECL ev >= 0.2.0) Creates EvChild object associated with the current event loop
EvLoop::defaultLoop (PECL ev >= 0.2.0) Returns or creates the default event loop
EvLoop::embed (PECL ev >= 0.2.0) Creates an instance of EvEmbed watcher associated with the current EvLoop object
EvLoop::fork (PECL ev >= 0.2.0) Creates EvFork watcher object associated with the current event loop instance
EvLoop::idle (PECL ev >= 0.2.0) Creates EvIdle watcher object associated with the current event loop instance
EvLoop::invokePending (PECL ev >= 0.2.0) Invoke all pending watchers while resetting their pending state
EvLoop::io (PECL ev >= 0.2.0) Create EvIo watcher object associated with the current event loop instance
EvLoop::loopFork (PECL ev >= 0.2.0) Must be called after a fork
EvLoop::now (PECL ev >= 0.2.0) Returns the current "event loop time"
EvLoop::nowUpdate (PECL ev >= 0.2.0) Establishes the current time by querying the kernel, updating the time returned by EvLoop::now in the progress
EvLoop::periodic (PECL ev >= 0.2.0) Creates EvPeriodic watcher object associated with the current event loop instance
EvLoop::prepare (PECL ev >= 0.2.0) Creates EvPrepare watcher object associated with the current event loop instance
EvLoop::resume (PECL ev >= 0.2.0) Resume previously suspended default event loop
EvLoop::run (PECL ev >= 0.2.0) Begin checking for events and calling callbacks for the loop
EvLoop::signal (PECL ev >= 0.2.0) Creates EvSignal watcher object associated with the current event loop instance
EvLoop::stat (PECL ev >= 0.2.0) Creates EvStat watcher object associated with the current event loop instance
EvLoop::stop (PECL ev >= 0.2.0) Stops the event loop
EvLoop::suspend (PECL ev >= 0.2.0) Suspend the loop
EvLoop::timer (PECL ev >= 0.2.0) Creates EvTimer watcher object associated with the current event loop instance
EvLoop::verify (PECL ev >= 0.2.0) Performs internal consistency checks(for debugging)
EvPeriodic::again (PECL ev >= 0.2.0) Simply stops and restarts the periodic watcher again
EvPeriodic::at (PECL ev >= 0.2.0) Returns the absolute time that this watcher is supposed to trigger next
EvPeriodic::createStopped (PECL ev >= 0.2.0) Create a stopped EvPeriodic watcher
EvPeriodic::set (PECL ev >= 0.2.0) Configures the watcher
EvPrepare::createStopped (PECL ev >= 0.2.0) Creates a stopped instance of EvPrepare watcher
EvSignal::createStopped (PECL ev >= 0.2.0) Create stopped EvSignal watcher object
EvSignal::set (PECL ev >= 0.2.0) Configures the watcher
EvStat::attr (PECL ev >= 0.2.0) Returns the values most recently detected by Ev
EvStat::createStopped (PECL ev >= 0.2.0) Create a stopped EvStat watcher object
EvStat::prev (PECL ev >= 0.2.0) Returns the previous set of values returned by EvStat::attr
EvStat::set (PECL ev >= 0.2.0) Configures the watcher
EvStat::stat (PECL ev >= 0.2.0) Initiates the stat call
EvTimer::again (PECL ev >= 0.2.0) Restarts the timer watcher
EvTimer::createStopped (PECL ev >= 0.2.0) Creates EvTimer stopped watcher object
EvTimer::set (PECL ev >= 0.2.0) Configures the watcher
EvWatcher::clear (PECL ev >= 0.2.0) Clear watcher pending status
EvWatcher::feed (PECL ev >= 0.2.0) Feeds the given revents set into the event loop
EvWatcher::getLoop (PECL ev >= 0.2.0) Returns the loop responsible for the watcher
EvWatcher::invoke (PECL ev >= 0.2.0) Invokes the watcher callback with the given received events bit mask
EvWatcher::keepalive (PECL ev >= 0.2.0) Configures whether to keep the loop from returning
EvWatcher::setCallback (PECL ev >= 0.2.0) Sets new callback for the watcher
EvWatcher::start (PECL ev >= 0.2.0) Starts the watcher
EvWatcher::stop (PECL ev >= 0.2.0) Stops the watcher
Exception::getCode (PHP 5, PHP 7) Gets the Exception code
Exception::getFile (PHP 5, PHP 7) Gets the file in which the exception was created
Exception::getLine (PHP 5, PHP 7) Gets the line in which the exception was created
Exception::getMessage (PHP 5, PHP 7) Gets the Exception message
Exception::getPrevious (PHP 5 >= 5.3.0, PHP 7) Returns previous Exception
Exception::getTrace (PHP 5, PHP 7) Gets the stack trace
Exception::getTraceAsString (PHP 5, PHP 7) Gets the stack trace as a string
FANNConnection::getFromNeuron (PECL fann >= 1.0.0) Returns the postions of starting neuron
FANNConnection::getToNeuron (PECL fann >= 1.0.0) Returns the postions of terminating neuron
FANNConnection::getWeight (PECL fann >= 1.0.0) Returns the connection weight
FANNConnection::setWeight (PECL fann >= 1.0.0) Sets the connections weight
FilesystemIterator::current (PHP 5 >= 5.3.0, PHP 7) The current file
FilesystemIterator::getFlags (PHP 5 >= 5.3.0, PHP 7) Get the handling flags
FilesystemIterator::key (PHP 5 >= 5.3.0, PHP 7) Retrieve the key for the current file
FilesystemIterator::next (PHP 5 >= 5.3.0, PHP 7) Move to the next file
FilesystemIterator::rewind (PHP 5 >= 5.3.0, PHP 7) Rewinds back to the beginning
FilesystemIterator::setFlags (PHP 5 >= 5.3.0, PHP 7) Sets handling flags
FilterIterator::accept (PHP 5 >= 5.1.0, PHP 7) Check whether the current element of the iterator is acceptable
FilterIterator::current (PHP 5 >= 5.1.0, PHP 7) Get the current element value
FilterIterator::getInnerIterator (PHP 5 >= 5.1.0, PHP 7) Get the inner iterator
FilterIterator::key (PHP 5 >= 5.1.0, PHP 7) Get the current key
FilterIterator::next (PHP 5 >= 5.1.0, PHP 7) Move the iterator forward
FilterIterator::rewind (PHP 5 >= 5.1.0, PHP 7) Rewind the iterator
FilterIterator::valid (PHP 5 >= 5.1.0, PHP 7) Check whether the current element is valid
finfo::buffer (PHP 5 >= 5.3.0, PHP 7, PECL fileinfo >= 0.1.0) Alias of finfo_buffer()
finfo::file (PHP >= 5.3.0, PECL fileinfo >= 0.1.0) Alias of finfo_file()
GearmanClient::addOptions (PECL gearman >= 0.6.0) Add client options
GearmanClient::addServer (PECL gearman >= 0.5.0) Add a job server to the client
GearmanClient::addServers (PECL gearman >= 0.5.0) Add a list of job servers to the client
GearmanClient::addTask (PECL gearman >= 0.5.0) Add a task to be run in parallel
GearmanClient::addTaskBackground (PECL gearman >= 0.5.0) Add a background task to be run in parallel
GearmanClient::addTaskHigh (PECL gearman >= 0.5.0) Add a high priority task to run in parallel
GearmanClient::addTaskHighBackground (PECL gearman >= 0.5.0) Add a high priority background task to be run in parallel
GearmanClient::addTaskLow (PECL gearman >= 0.5.0) Add a low priority task to run in parallel
GearmanClient::addTaskLowBackground (PECL gearman >= 0.5.0) Add a low priority background task to be run in parallel
GearmanClient::addTaskStatus (PECL gearman >= 0.5.0) Add a task to get status
GearmanClient::clearCallbacks (PECL gearman >= 0.5.0) Clear all task callback functions
GearmanClient::clone (PECL gearman >= 0.5.0) Create a copy of a GearmanClient object
GearmanClient::context (PECL gearman >= 0.6.0) Get the application context
GearmanClient::data (PECL gearman <= 0.5.0) Get the application data (deprecated)
GearmanClient::do (PECL gearman >= 0.5.0) Run a single task and return a result [deprecated]
GearmanClient::doBackground (PECL gearman >= 0.5.0) Run a task in the background
GearmanClient::doHigh (PECL gearman >= 0.5.0) Run a single high priority task
GearmanClient::doHighBackground (PECL gearman >= 0.5.0) Run a high priority task in the background
GearmanClient::doJobHandle (PECL gearman >= 0.5.0) Get the job handle for the running task
GearmanClient::doLow (PECL gearman >= 0.5.0) Run a single low priority task
GearmanClient::doLowBackground (PECL gearman >= 0.5.0) Run a low priority task in the background
GearmanClient::doNormal (No version information available, might only be in Git) Run a single task and return a result
GearmanClient::doStatus (PECL gearman >= 0.5.0) Get the status for the running task
GearmanClient::echo (PECL gearman >= 0.5.0) Send data to all job servers to see if they echo it back [deprecated]
GearmanClient::error (PECL gearman >= 0.5.0) Returns an error string for the last error encountered
GearmanClient::getErrno (PECL gearman >= 0.5.0) Get an errno value
GearmanClient::jobStatus (PECL gearman >= 0.5.0) Get the status of a background job
GearmanClient::ping (No version information available, might only be in Git) Send data to all job servers to see if they echo it back
GearmanClient::removeOptions (PECL gearman >= 0.6.0) Remove client options
GearmanClient::returnCode (PECL gearman >= 0.5.0) Get the last Gearman return code
GearmanClient::runTasks (PECL gearman >= 0.5.0) Run a list of tasks in parallel
GearmanClient::setClientCallback (PECL gearman <= 0.5.0) Callback function when there is a data packet for a task (deprecated)
GearmanClient::setCompleteCallback (PECL gearman >= 0.5.0) Set a function to be called on task completion
GearmanClient::setContext (PECL gearman >= 0.6.0) Set application context
GearmanClient::setCreatedCallback (PECL gearman >= 0.5.0) Set a callback for when a task is queued
GearmanClient::setData (PECL gearman <= 0.5.0) Set application data (deprecated)
GearmanClient::setDataCallback (PECL gearman >= 0.6.0) Callback function when there is a data packet for a task
GearmanClient::setExceptionCallback (PECL gearman >= 0.5.0) Set a callback for worker exceptions
GearmanClient::setFailCallback (PECL gearman >= 0.5.0) Set callback for job failure
GearmanClient::setOptions (PECL gearman >= 0.5.0) Set client options
GearmanClient::setStatusCallback (PECL gearman >= 0.5.0) Set a callback for collecting task status
GearmanClient::setTimeout (PECL gearman >= 0.6.0) Set socket I/O activity timeout
GearmanClient::setWarningCallback (PECL gearman >= 0.5.0) Set a callback for worker warnings
GearmanClient::setWorkloadCallback (PECL gearman >= 0.5.0) Set a callback for accepting incremental data updates
GearmanClient::timeout (PECL gearman >= 0.6.0) Get current socket I/O activity timeout value
GearmanJob::complete (PECL gearman <= 0.5.0) Send the result and complete status (deprecated)
GearmanJob::data (PECL gearman <= 0.5.0) Send data for a running job (deprecated)
GearmanJob::exception (PECL gearman <= 0.5.0) Send exception for running job (deprecated)
GearmanJob::fail (PECL gearman <= 0.5.0) Send fail status (deprecated)
GearmanJob::functionName (PECL gearman >= 0.5.0) Get function name
GearmanJob::handle (PECL gearman >= 0.5.0) Get the job handle
GearmanJob::returnCode (PECL gearman >= 0.5.0) Get last return code
GearmanJob::sendComplete (PECL gearman >= 0.6.0) Send the result and complete status
GearmanJob::sendData (PECL gearman >= 0.6.0) Send data for a running job
GearmanJob::sendException (PECL gearman >= 0.6.0) Send exception for running job (exception)
GearmanJob::sendFail (PECL gearman >= 0.6.0) Send fail status
GearmanJob::sendStatus (PECL gearman >= 0.6.0) Send status
GearmanJob::sendWarning (PECL gearman >= 0.6.0) Send a warning
GearmanJob::setReturn (PECL gearman >= 0.5.0) Set a return value
GearmanJob::status (PECL gearman <= 0.5.0) Send status (deprecated)
GearmanJob::unique (PECL gearman >= 0.5.0) Get the unique identifier
GearmanJob::warning (PECL gearman <= 0.5.0) Send a warning (deprecated)
GearmanJob::workload (PECL gearman >= 0.5.0) Get workload
GearmanJob::workloadSize (PECL gearman >= 0.5.0) Get size of work load
GearmanTask::create (PECL gearman <= 0.5.0) Create a task (deprecated)
GearmanTask::data (PECL gearman >= 0.5.0) Get data returned for a task
GearmanTask::dataSize (PECL gearman >= 0.5.0) Get the size of returned data
GearmanTask::function (PECL gearman <= 0.5.0) Get associated function name (deprecated)
GearmanTask::functionName (PECL gearman >= 0.6.0) Get associated function name
GearmanTask::isKnown (PECL gearman >= 0.5.0) Determine if task is known
GearmanTask::isRunning (PECL gearman >= 0.5.0) Test whether the task is currently running
GearmanTask::jobHandle (PECL gearman >= 0.5.0) Get the job handle
GearmanTask::recvData (PECL gearman >= 0.5.0) Read work or result data into a buffer for a task
GearmanTask::returnCode (PECL gearman >= 0.5.0) Get the last return code
GearmanTask::sendData (PECL gearman <= 0.5.0) Send data for a task (deprecated)
GearmanTask::sendWorkload (PECL gearman >= 0.6.0) Send data for a task
GearmanTask::taskDenominator (PECL gearman >= 0.5.0) Get completion percentage denominator
GearmanTask::taskNumerator (PECL gearman >= 0.5.0) Get completion percentage numerator
GearmanTask::unique (PECL gearman >= 0.6.0) Get the unique identifier for a task
GearmanTask::uuid (PECL gearman <= 0.5.0) Get the unique identifier for a task (deprecated)
GearmanWorker::addFunction (PECL gearman >= 0.5.0) Register and add callback function
GearmanWorker::addOptions (PECL gearman >= 0.6.0) Add worker options
GearmanWorker::addServer (PECL gearman >= 0.5.0) Add a job server
GearmanWorker::addServers (PECL gearman >= 0.5.0) Add job servers
GearmanWorker::clone (PECL gearman >= 0.5.0) Create a copy of the worker
GearmanWorker::echo (PECL gearman >= 0.6.0) Test job server response
GearmanWorker::error (PECL gearman >= 0.5.0) Get the last error encountered
GearmanWorker::getErrno (PECL gearman >= 0.5.0) Get errno
GearmanWorker::options (PECL gearman >= 0.6.0) Get worker options
GearmanWorker::register (PECL gearman >= 0.6.0) Register a function with the job server
GearmanWorker::removeOptions (PECL gearman >= 0.6.0) Remove worker options
GearmanWorker::returnCode (PECL gearman >= 0.5.0) Get last Gearman return code
GearmanWorker::setId (No version information available, might only be in Git) Give the worker an identifier so it can be tracked when asking gearmand for the list of available workers
GearmanWorker::setOptions (PECL gearman >= 0.5.0) Set worker options
GearmanWorker::setTimeout (PECL gearman >= 0.6.0) Set socket I/O activity timeout
GearmanWorker::timeout (PECL gearman >= 0.6.0) Get socket I/O activity timeout
GearmanWorker::unregister (PECL gearman >= 0.6.0) Unregister a function name with the job servers
GearmanWorker::unregisterAll (PECL gearman >= 0.6.0) Unregister all function names with the job servers
GearmanWorker::wait (PECL gearman >= 0.6.0) Wait for activity from one of the job servers
GearmanWorker::work (PECL gearman >= 0.5.0) Wait for and perform jobs
Generator::current (PHP 5 >= 5.5.0, PHP 7) Get the yielded value
Generator::getReturn (PHP 7) Get the return value of a generator
Generator::key (PHP 5 >= 5.5.0, PHP 7) Get the yielded key
Generator::next (PHP 5 >= 5.5.0, PHP 7) Resume execution of the generator
Generator::rewind (PHP 5 >= 5.5.0, PHP 7) Rewind the iterator
Generator::send (PHP 5 >= 5.5.0, PHP 7) Send a value to the generator
Generator::throw (PHP 5 >= 5.5.0, PHP 7) Throw an exception into the generator
Generator::valid (PHP 5 >= 5.5.0, PHP 7) Check if the iterator has been closed
GlobIterator::count (PHP 5 >= 5.3.0, PHP 7) Get the number of directories and files
Gmagick::addimage (PECL gmagick >= Unknown) Adds new image to Gmagick object image list
Gmagick::addnoiseimage (PECL gmagick >= Unknown) Adds random noise to the image
Gmagick::annotateimage (PECL gmagick >= Unknown) Annotates an image with text
Gmagick::blurimage (PECL gmagick >= Unknown) Adds blur filter to image
Gmagick::borderimage (PECL gmagick >= Unknown) Surrounds the image with a border
Gmagick::charcoalimage (PECL gmagick >= Unknown) Simulates a charcoal drawing
Gmagick::chopimage (PECL gmagick >= Unknown) Removes a region of an image and trims
Gmagick::clear (PECL gmagick >= Unknown) Clears all resources associated to Gmagick object
Gmagick::commentimage (PECL gmagick >= Unknown) Adds a comment to your image
Gmagick::compositeimage (PECL gmagick >= Unknown) Composite one image onto another
Gmagick::cropimage (PECL gmagick >= Unknown) Extracts a region of the image
Gmagick::cropthumbnailimage (PECL gmagick >= Unknown) Creates a crop thumbnail
Gmagick::current (PECL gmagick >= Unknown) The current purpose
Gmagick::cyclecolormapimage (PECL gmagick >= Unknown) Displaces an image's colormap
Gmagick::deconstructimages (PECL gmagick >= Unknown) Returns certain pixel differences between images
Gmagick::despeckleimage (PECL gmagick >= Unknown) The despeckleimage purpose
Gmagick::destroy (PECL gmagick >= Unknown) The destroy purpose
Gmagick::drawimage (PECL gmagick >= Unknown) Renders the GmagickDraw object on the current image
Gmagick::edgeimage (PECL gmagick >= Unknown) Enhance edges within the image
Gmagick::embossimage (PECL gmagick >= Unknown) Returns a grayscale image with a three-dimensional effect
Gmagick::enhanceimage (PECL gmagick >= Unknown) Improves the quality of a noisy image
Gmagick::equalizeimage (PECL gmagick >= Unknown) Equalizes the image histogram
Gmagick::flipimage (PECL gmagick >= Unknown) Creates a vertical mirror image
Gmagick::flopimage (PECL gmagick >= Unknown) The flopimage purpose
Gmagick::frameimage (PECL gmagick >= Unknown) Adds a simulated three-dimensional border
Gmagick::gammaimage (PECL gmagick >= Unknown) Gamma-corrects an image
Gmagick::getcopyright (PECL gmagick >= Unknown) Returns the GraphicsMagick API copyright as a string
Gmagick::getfilename (PECL gmagick >= Unknown) The filename associated with an image sequence
Gmagick::getimagebackgroundcolor (PECL gmagick >= Unknown) Returns the image background color
Gmagick::getimageblueprimary (PECL gmagick >= Unknown) Returns the chromaticy blue primary point
Gmagick::getimagebordercolor (PECL gmagick >= Unknown) Returns the image border color
Gmagick::getimagechanneldepth (PECL gmagick >= Unknown) Gets the depth for a particular image channel
Gmagick::getimagecolors (PECL gmagick >= Unknown) Returns the color of the specified colormap index
Gmagick::getimagecolorspace (PECL gmagick >= Unknown) Gets the image colorspace
Gmagick::getimagecompose (PECL gmagick >= Unknown) Returns the composite operator associated with the image
Gmagick::getimagedelay (PECL gmagick >= Unknown) Gets the image delay
Gmagick::getimagedepth (PECL gmagick >= Unknown) Gets the depth of the image
Gmagick::getimagedispose (PECL gmagick >= Unknown) Gets the image disposal method
Gmagick::getimageextrema (PECL gmagick >= Unknown) Gets the extrema for the image
Gmagick::getimagefilename (PECL gmagick >= Unknown) Returns the filename of a particular image in a sequence
Gmagick::getimageformat (PECL gmagick >= Unknown) Returns the format of a particular image in a sequence
Gmagick::getimagegamma (PECL gmagick >= Unknown) Gets the image gamma
Gmagick::getimagegreenprimary (PECL gmagick >= Unknown) Returns the chromaticy green primary point
Gmagick::getimageheight (PECL gmagick >= Unknown) Returns the image height
Gmagick::getimagehistogram (PECL gmagick >= Unknown) Gets the image histogram
Gmagick::getimageindex (PECL gmagick >= Unknown) Gets the index of the current active image
Gmagick::getimageinterlacescheme (PECL gmagick >= Unknown) Gets the image interlace scheme
Gmagick::getimageiterations (PECL gmagick >= Unknown) Gets the image iterations
Gmagick::getimagematte (PECL gmagick >= Unknown) Check if the image has a matte channel
Gmagick::getimagemattecolor (PECL gmagick >= Unknown) Returns the image matte color
Gmagick::getimageprofile (PECL gmagick >= Unknown) Returns the named image profile
Gmagick::getimageredprimary (PECL gmagick >= Unknown) Returns the chromaticity red primary point
Gmagick::getimagerenderingintent (PECL gmagick >= Unknown) Gets the image rendering intent
Gmagick::getimageresolution (PECL gmagick >= Unknown) Gets the image X and Y resolution
Gmagick::getimagescene (PECL gmagick >= Unknown) Gets the image scene
Gmagick::getimagesignature (PECL gmagick >= Unknown) Generates an SHA-256 message digest
Gmagick::getimagetype (PECL gmagick >= Unknown) Gets the potential image type
Gmagick::getimageunits (PECL gmagick >= Unknown) Gets the image units of resolution
Gmagick::getimagewhitepoint (PECL gmagick >= Unknown) Returns the chromaticity white point
Gmagick::getimagewidth (PECL gmagick >= Unknown) Returns the width of the image
Gmagick::getpackagename (PECL gmagick >= Unknown) Returns the GraphicsMagick package name
Gmagick::getquantumdepth (PECL gmagick >= Unknown) Returns the Gmagick quantum depth as a string
Gmagick::getreleasedate (PECL gmagick >= Unknown) Returns the GraphicsMagick release date as a string
Gmagick::getsamplingfactors (PECL gmagick >= Unknown) Gets the horizontal and vertical sampling factor
Gmagick::getsize (PECL gmagick >= Unknown) Returns the size associated with the Gmagick object
Gmagick::getversion (PECL gmagick >= Unknown) Returns the GraphicsMagick API version
Gmagick::hasnextimage (PECL gmagick >= Unknown) Checks if the object has more images
Gmagick::haspreviousimage (PECL gmagick >= Unknown) Checks if the object has a previous image
Gmagick::implodeimage (PECL gmagick >= Unknown) Creates a new image as a copy
Gmagick::labelimage (PECL gmagick >= Unknown) Adds a label to an image
Gmagick::levelimage (PECL gmagick >= Unknown) Adjusts the levels of an image
Gmagick::magnifyimage (PECL gmagick >= Unknown) Scales an image proportionally 2x
Gmagick::mapimage (PECL gmagick >= Unknown) Replaces the colors of an image with the closest color from a reference image
Gmagick::medianfilterimage (PECL gmagick >= Unknown) Applies a digital filter
Gmagick::minifyimage (PECL gmagick >= Unknown) Scales an image proportionally to half its size
Gmagick::modulateimage (PECL gmagick >= Unknown) Control the brightness, saturation, and hue
Gmagick::motionblurimage (PECL gmagick >= Unknown) Simulates motion blur
Gmagick::newimage (PECL gmagick >= Unknown) Creates a new image
Gmagick::nextimage (PECL gmagick >= Unknown) Moves to the next image
Gmagick::normalizeimage (PECL gmagick >= Unknown) Enhances the contrast of a color image
Gmagick::oilpaintimage (PECL gmagick >= Unknown) Simulates an oil painting
Gmagick::previousimage (PECL gmagick >= Unknown) Move to the previous image in the object
Gmagick::profileimage (PECL gmagick >= Unknown) Adds or removes a profile from an image
Gmagick::quantizeimage (PECL gmagick >= Unknown) Analyzes the colors within a reference image
Gmagick::quantizeimages (PECL gmagick >= Unknown) The quantizeimages purpose
Gmagick::queryfontmetrics (PECL gmagick >= Unknown) Returns an array representing the font metrics
Gmagick::queryfonts (PECL gmagick >= Unknown) Returns the configured fonts
Gmagick::queryformats (PECL gmagick >= Unknown) Returns formats supported by Gmagick
Gmagick::radialblurimage (PECL gmagick >= Unknown) Radial blurs an image
Gmagick::raiseimage (PECL gmagick >= Unknown) Creates a simulated 3d button-like effect
Gmagick::read (PECL gmagick >= Unknown) Reads image from filename
Gmagick::readimage (PECL gmagick >= Unknown) Reads image from filename
Gmagick::readimageblob (PECL gmagick >= Unknown) Reads image from a binary string
Gmagick::readimagefile (PECL gmagick >= Unknown) The readimagefile purpose
Gmagick::reducenoiseimage (PECL gmagick >= Unknown) Smooths the contours of an image
Gmagick::removeimage (PECL gmagick >= Unknown) Removes an image from the image list
Gmagick::removeimageprofile (PECL gmagick >= Unknown) Removes the named image profile and returns it
Gmagick::resampleimage (PECL gmagick >= Unknown) Resample image to desired resolution
Gmagick::resizeimage (PECL gmagick >= Unknown) Scales an image
Gmagick::rollimage (PECL gmagick >= Unknown) Offsets an image
Gmagick::rotateimage (PECL gmagick >= Unknown) Rotates an image
Gmagick::scaleimage (PECL gmagick >= Unknown) Scales the size of an image
Gmagick::separateimagechannel (PECL gmagick >= Unknown) Separates a channel from the image
Gmagick::setCompressionQuality (No version information available, might only be in Git) Sets the object's default compression quality
Gmagick::setfilename (PECL gmagick >= Unknown) Sets the filename before you read or write the image
Gmagick::setimagebackgroundcolor (PECL gmagick >= Unknown) Sets the image background color
Gmagick::setimageblueprimary (PECL gmagick >= Unknown) Sets the image chromaticity blue primary point
Gmagick::setimagebordercolor (PECL gmagick >= Unknown) Sets the image border color
Gmagick::setimagechanneldepth (PECL gmagick >= Unknown) Sets the depth of a particular image channel
Gmagick::setimagecolorspace (PECL gmagick >= Unknown) Sets the image colorspace
Gmagick::setimagecompose (PECL gmagick >= Unknown) Sets the image composite operator
Gmagick::setimagedelay (PECL gmagick >= Unknown) Sets the image delay
Gmagick::setimagedepth (PECL gmagick >= Unknown) Sets the image depth
Gmagick::setimagedispose (PECL gmagick >= Unknown) Sets the image disposal method
Gmagick::setimagefilename (PECL gmagick >= Unknown) Sets the filename of a particular image in a sequence
Gmagick::setimageformat (PECL gmagick >= Unknown) Sets the format of a particular image
Gmagick::setimagegamma (PECL gmagick >= Unknown) Sets the image gamma
Gmagick::setimagegreenprimary (PECL gmagick >= Unknown) Sets the image chromaticity green primary point
Gmagick::setimageindex (PECL gmagick >= Unknown) Set the iterator to the position in the image list specified with the index parameter
Gmagick::setimageinterlacescheme (PECL gmagick >= Unknown) Sets the interlace scheme of the image
Gmagick::setimageiterations (PECL gmagick >= Unknown) Sets the image iterations
Gmagick::setimageprofile (PECL gmagick >= Unknown) Adds a named profile to the Gmagick object
Gmagick::setimageredprimary (PECL gmagick >= Unknown) Sets the image chromaticity red primary point
Gmagick::setimagerenderingintent (PECL gmagick >= Unknown) Sets the image rendering intent
Gmagick::setimageresolution (PECL gmagick >= Unknown) Sets the image resolution
Gmagick::setimagescene (PECL gmagick >= Unknown) Sets the image scene
Gmagick::setimagetype (PECL gmagick >= Unknown) Sets the image type
Gmagick::setimageunits (PECL gmagick >= Unknown) Sets the image units of resolution
Gmagick::setimagewhitepoint (PECL gmagick >= Unknown) Sets the image chromaticity white point
Gmagick::setsamplingfactors (PECL gmagick >= Unknown) Sets the image sampling factors
Gmagick::setsize (PECL gmagick >= Unknown) Sets the size of the Gmagick object
Gmagick::shearimage (PECL gmagick >= Unknown) Creating a parallelogram
Gmagick::solarizeimage (PECL gmagick >= Unknown) Applies a solarizing effect to the image
Gmagick::spreadimage (PECL gmagick >= Unknown) Randomly displaces each pixel in a block
Gmagick::stripimage (PECL gmagick >= Unknown) Strips an image of all profiles and comments
Gmagick::swirlimage (PECL gmagick >= Unknown) Swirls the pixels about the center of the image
Gmagick::thumbnailimage (PECL gmagick >= Unknown) Changes the size of an image
Gmagick::trimimage (PECL gmagick >= Unknown) Remove edges from the image
Gmagick::writeimage (PECL gmagick >= Unknown) Writes an image to the specified filename
GmagickDraw::annotate (PECL gmagick >= Unknown) Draws text on the image
GmagickDraw::arc (PECL gmagick >= Unknown) Draws an arc
GmagickDraw::bezier (PECL gmagick >= Unknown) Draws a bezier curve
GmagickDraw::ellipse (PECL gmagick >= Unknown) Draws an ellipse on the image
GmagickDraw::getfillcolor (PECL gmagick >= Unknown) Returns the fill color
GmagickDraw::getfillopacity (PECL gmagick >= Unknown) Returns the opacity used when drawing
GmagickDraw::getfont (PECL gmagick >= Unknown) Returns the font
GmagickDraw::getfontsize (PECL gmagick >= Unknown) Returns the font pointsize
GmagickDraw::getfontstyle (PECL gmagick >= Unknown) Returns the font style
GmagickDraw::getfontweight (PECL gmagick >= Unknown) Returns the font weight
GmagickDraw::getstrokecolor (PECL gmagick >= Unknown) Returns the color used for stroking object outlines
GmagickDraw::getstrokeopacity (PECL gmagick >= Unknown) Returns the opacity of stroked object outlines
GmagickDraw::getstrokewidth (PECL gmagick >= Unknown) Returns the width of the stroke used to draw object outlines
GmagickDraw::gettextdecoration (PECL gmagick >= Unknown) Returns the text decoration
GmagickDraw::gettextencoding (PECL gmagick >= Unknown) Returns the code set used for text annotations
GmagickDraw::line (PECL gmagick >= Unknown) The line purpose
GmagickDraw::point (PECL gmagick >= Unknown) Draws a point
GmagickDraw::polygon (PECL gmagick >= Unknown) Draws a polygon
GmagickDraw::polyline (PECL gmagick >= Unknown) Draws a polyline
GmagickDraw::rectangle (PECL gmagick >= Unknown) Draws a rectangle
GmagickDraw::rotate (PECL gmagick >= Unknown) Applies the specified rotation to the current coordinate space
GmagickDraw::roundrectangle (PECL gmagick >= Unknown) Draws a rounded rectangle
GmagickDraw::scale (PECL gmagick >= Unknown) Adjusts the scaling factor
GmagickDraw::setfillcolor (PECL gmagick >= Unknown) Sets the fill color to be used for drawing filled objects
GmagickDraw::setfillopacity (PECL gmagick >= Unknown) The setfillopacity purpose
GmagickDraw::setfont (PECL gmagick >= Unknown) Sets the fully-specified font to use when annotating with text
GmagickDraw::setfontsize (PECL gmagick >= Unknown) Sets the font pointsize to use when annotating with text
GmagickDraw::setfontstyle (PECL gmagick >= Unknown) Sets the font style to use when annotating with text
GmagickDraw::setfontweight (PECL gmagick >= Unknown) Sets the font weight
GmagickDraw::setstrokecolor (PECL gmagick >= Unknown) Sets the color used for stroking object outlines
GmagickDraw::setstrokeopacity (PECL gmagick >= Unknown) Specifies the opacity of stroked object outlines
GmagickDraw::setstrokewidth (PECL gmagick >= Unknown) Sets the width of the stroke used to draw object outlines
GmagickDraw::settextdecoration (PECL gmagick >= Unknown) Specifies a decoration
GmagickDraw::settextencoding (PECL gmagick >= Unknown) Specifies the text code set
GmagickPixel::getcolor (PECL gmagick >= Unknown) Returns the color
GmagickPixel::getcolorcount (PECL gmagick >= Unknown) Returns the color count associated with this color
GmagickPixel::getcolorvalue (PECL gmagick >= Unknown) Gets the normalized value of the provided color channel
GmagickPixel::setcolor (PECL gmagick >= Unknown) Sets the color
GmagickPixel::setcolorvalue (PECL gmagick >= Unknown) Sets the normalized value of one of the channels
HaruAnnotation::setBorderStyle (PECL haru >= 0.0.1) Set the border style of the annotation
HaruAnnotation::setHighlightMode (PECL haru >= 0.0.1) Set the highlighting mode of the annotation
HaruAnnotation::setIcon (PECL haru >= 0.0.1) Set the icon style of the annotation
HaruAnnotation::setOpened (PECL haru >= 0.0.1) Set the initial state of the annotation
HaruDestination::setFit (PECL haru >= 0.0.1) Set the appearance of the page to fit the window
HaruDestination::setFitB (PECL haru >= 0.0.1) Set the appearance of the page to fit the bounding box of the page within the window
HaruDestination::setFitBH (PECL haru >= 0.0.1) Set the appearance of the page to fit the width of the bounding box
HaruDestination::setFitBV (PECL haru >= 0.0.1) Set the appearance of the page to fit the height of the boudning box
HaruDestination::setFitH (PECL haru >= 0.0.1) Set the appearance of the page to fit the window width
HaruDestination::setFitR (PECL haru >= 0.0.1) Set the appearance of the page to fit the specified rectangle
HaruDestination::setFitV (PECL haru >= 0.0.1) Set the appearance of the page to fit the window height
HaruDestination::setXYZ (PECL haru >= 0.0.1) Set the appearance of the page
HaruDoc::addPage (PECL haru >= 0.0.1) Add new page to the document
HaruDoc::addPageLabel (PECL haru >= 0.0.1) Set the numbering style for the specified range of pages
HaruDoc::createOutline (PECL haru >= 0.0.1) Create a HaruOutline instance
HaruDoc::getCurrentEncoder (PECL haru >= 0.0.1) Get HaruEncoder currently used in the document
HaruDoc::getCurrentPage (PECL haru >= 0.0.1) Return current page of the document
HaruDoc::getEncoder (PECL haru >= 0.0.1) Get HaruEncoder instance for the specified encoding
HaruDoc::getFont (PECL haru >= 0.0.1) Get HaruFont instance
HaruDoc::getInfoAttr (PECL haru >= 0.0.1) Get current value of the specified document attribute
HaruDoc::getPageLayout (PECL haru >= 0.0.1) Get current page layout
HaruDoc::getPageMode (PECL haru >= 0.0.1) Get current page mode
HaruDoc::getStreamSize (PECL haru >= 0.0.1) Get the size of the temporary stream
HaruDoc::insertPage (PECL haru >= 0.0.1) Insert new page just before the specified page
HaruDoc::loadJPEG (PECL haru >= 0.0.1) Load a JPEG image
HaruDoc::loadPNG (PECL haru >= 0.0.1) Load PNG image and return HaruImage instance
HaruDoc::loadRaw (PECL haru >= 0.0.1) Load a RAW image
HaruDoc::loadTTC (PECL haru >= 0.0.1) Load the font with the specified index from TTC file
HaruDoc::loadTTF (PECL haru >= 0.0.1) Load TTF font file
HaruDoc::loadType1 (PECL haru >= 0.0.1) Load Type1 font
HaruDoc::output (PECL haru >= 0.0.1) Write the document data to the output buffer
HaruDoc::readFromStream (PECL haru >= 0.0.1) Read data from the temporary stream
HaruDoc::resetError (PECL haru >= 0.0.1) Reset error state of the document handle
HaruDoc::resetStream (PECL haru >= 0.0.1) Rewind the temporary stream
HaruDoc::save (PECL haru >= 0.0.1) Save the document into the specified file
HaruDoc::saveToStream (PECL haru >= 0.0.1) Save the document into a temporary stream
HaruDoc::setCompressionMode (PECL haru >= 0.0.1) Set compression mode for the document
HaruDoc::setCurrentEncoder (PECL haru >= 0.0.1) Set the current encoder for the document
HaruDoc::setEncryptionMode (PECL haru >= 0.0.1) Set encryption mode for the document
HaruDoc::setInfoAttr (PECL haru >= 0.0.1) Set the info attribute of the document
HaruDoc::setInfoDateAttr (PECL haru >= 0.0.1) Set the datetime info attributes of the document
HaruDoc::setOpenAction (PECL haru >= 0.0.1) Define which page is shown when the document is opened
HaruDoc::setPageLayout (PECL haru >= 0.0.1) Set how pages should be displayed
HaruDoc::setPageMode (PECL haru >= 0.0.1) Set how the document should be displayed
HaruDoc::setPagesConfiguration (PECL haru >= 0.0.1) Set the number of pages per set of pages
HaruDoc::setPassword (PECL haru >= 0.0.1) Set owner and user passwords for the document
HaruDoc::setPermission (PECL haru >= 0.0.1) Set permissions for the document
HaruDoc::useCNSEncodings (PECL haru >= 0.0.1) Enable Chinese simplified encodings
HaruDoc::useCNSFonts (PECL haru >= 0.0.1) Enable builtin Chinese simplified fonts
HaruDoc::useCNTEncodings (PECL haru >= 0.0.1) Enable Chinese traditional encodings
HaruDoc::useCNTFonts (PECL haru >= 0.0.1) Enable builtin Chinese traditional fonts
HaruDoc::useJPEncodings (PECL haru >= 0.0.1) Enable Japanese encodings
HaruDoc::useJPFonts (PECL haru >= 0.0.1) Enable builtin Japanese fonts
HaruDoc::useKREncodings (PECL haru >= 0.0.1) Enable Korean encodings
HaruDoc::useKRFonts (PECL haru >= 0.0.1) Enable builtin Korean fonts
HaruEncoder::getByteType (PECL haru >= 0.0.1) Get the type of the byte in the text
HaruEncoder::getType (PECL haru >= 0.0.1) Get the type of the encoder
HaruEncoder::getUnicode (PECL haru >= 0.0.1) Convert the specified character to unicode
HaruEncoder::getWritingMode (PECL haru >= 0.0.1) Get the writing mode of the encoder
HaruFont::getAscent (PECL haru >= 0.0.1) Get the vertical ascent of the font
HaruFont::getCapHeight (PECL haru >= 0.0.1) Get the distance from the baseline of uppercase letters
HaruFont::getDescent (PECL haru >= 0.0.1) Get the vertical descent of the font
HaruFont::getEncodingName (PECL haru >= 0.0.1) Get the name of the encoding
HaruFont::getFontName (PECL haru >= 0.0.1) Get the name of the font
HaruFont::getTextWidth (PECL haru >= 0.0.1) Get the total width of the text, number of characters, number of words and number of spaces
HaruFont::getUnicodeWidth (PECL haru >= 0.0.1) Get the width of the character in the font
HaruFont::getXHeight (PECL haru >= 0.0.1) Get the distance from the baseline of lowercase letters
HaruFont::measureText (PECL haru >= 0.0.1) Calculate the number of characters which can be included within the specified width
HaruImage::getBitsPerComponent (PECL haru >= 0.0.1) Get the number of bits used to describe each color component of the image
HaruImage::getColorSpace (PECL haru >= 0.0.1) Get the name of the color space
HaruImage::getHeight (PECL haru >= 0.0.1) Get the height of the image
HaruImage::getSize (PECL haru >= 0.0.1) Get size of the image
HaruImage::getWidth (PECL haru >= 0.0.1) Get the width of the image
HaruImage::setColorMask (PECL haru >= 0.0.1) Set the color mask of the image
HaruImage::setMaskImage (PECL haru >= 0.0.1) Set the image mask
HaruOutline::setDestination (PECL haru >= 0.0.1) Set the destination for the outline
HaruOutline::setOpened (PECL haru >= 0.0.1) Set the initial state of the outline
HaruPage::arc (PECL haru >= 0.0.1) Append an arc to the current path
HaruPage::beginText (PECL haru >= 0.0.1) Begin a text object and set the current text position to (0,0)
HaruPage::circle (PECL haru >= 0.0.1) Append a circle to the current path
HaruPage::closePath (PECL haru >= 0.0.1) Append a straight line from the current point to the start point of the path
HaruPage::concat (PECL haru >= 0.0.1) Concatenate current transformation matrix of the page and the specified matrix
HaruPage::createDestination (PECL haru >= 0.0.1) Create new HaruDestination instance
HaruPage::createLinkAnnotation (PECL haru >= 0.0.1) Create new HaruAnnotation instance
HaruPage::createTextAnnotation (PECL haru >= 0.0.1) Create new HaruAnnotation instance
HaruPage::createURLAnnotation (PECL haru >= 0.0.1) Create and return new HaruAnnotation instance
HaruPage::curveTo (PECL haru >= 0.0.1) Append a Bezier curve to the current path
HaruPage::curveTo2 (PECL haru >= 0.0.1) Append a Bezier curve to the current path
HaruPage::curveTo3 (PECL haru >= 0.0.1) Append a Bezier curve to the current path
HaruPage::drawImage (PECL haru >= 0.0.1) Show image at the page
HaruPage::ellipse (PECL haru >= 0.0.1) Append an ellipse to the current path
HaruPage::endPath (PECL haru >= 0.0.1) End current path object without filling and painting operations
HaruPage::endText (PECL haru >= 0.0.1) End current text object
HaruPage::eofill (PECL haru >= 0.0.1) Fill current path using even-odd rule
HaruPage::eoFillStroke (PECL haru >= 0.0.1) Fill current path using even-odd rule, then paint the path
HaruPage::fill (PECL haru >= 0.0.1) Fill current path using nonzero winding number rule
HaruPage::fillStroke (PECL haru >= 0.0.1) Fill current path using nonzero winding number rule, then paint the path
HaruPage::getCharSpace (PECL haru >= 0.0.1) Get the current value of character spacing
HaruPage::getCMYKFill (PECL haru >= 0.0.1) Get the current filling color
HaruPage::getCMYKStroke (PECL haru >= 0.0.1) Get the current stroking color
HaruPage::getCurrentFont (PECL haru >= 0.0.1) Get the currently used font
HaruPage::getCurrentFontSize (PECL haru >= 0.0.1) Get the current font size
HaruPage::getCurrentPos (PECL haru >= 0.0.1) Get the current position for path painting
HaruPage::getCurrentTextPos (PECL haru >= 0.0.1) Get the current position for text printing
HaruPage::getDash (PECL haru >= 0.0.1) Get the current dash pattern
HaruPage::getFillingColorSpace (PECL haru >= 0.0.1) Get the current filling color space
HaruPage::getFlatness (PECL haru >= 0.0.1) Get the flatness of the page
HaruPage::getGMode (PECL haru >= 0.0.1) Get the current graphics mode
HaruPage::getGrayFill (PECL haru >= 0.0.1) Get the current filling color
HaruPage::getGrayStroke (PECL haru >= 0.0.1) Get the current stroking color
HaruPage::getHeight (PECL haru >= 0.0.1) Get the height of the page
HaruPage::getHorizontalScaling (PECL haru >= 0.0.1) Get the current value of horizontal scaling
HaruPage::getLineCap (PECL haru >= 0.0.1) Get the current line cap style
HaruPage::getLineJoin (PECL haru >= 0.0.1) Get the current line join style
HaruPage::getLineWidth (PECL haru >= 0.0.1) Get the current line width
HaruPage::getMiterLimit (PECL haru >= 0.0.1) Get the value of miter limit
HaruPage::getRGBFill (PECL haru >= 0.0.1) Get the current filling color
HaruPage::getRGBStroke (PECL haru >= 0.0.1) Get the current stroking color
HaruPage::getStrokingColorSpace (PECL haru >= 0.0.1) Get the current stroking color space
HaruPage::getTextLeading (PECL haru >= 0.0.1) Get the current value of line spacing
HaruPage::getTextMatrix (PECL haru >= 0.0.1) Get the current text transformation matrix of the page
HaruPage::getTextRenderingMode (PECL haru >= 0.0.1) Get the current text rendering mode
HaruPage::getTextRise (PECL haru >= 0.0.1) Get the current value of text rising
HaruPage::getTextWidth (PECL haru >= 0.0.1) Get the width of the text using current fontsize, character spacing and word spacing
HaruPage::getTransMatrix (PECL haru >= 0.0.1) Get the current transformation matrix of the page
HaruPage::getWidth (PECL haru >= 0.0.1) Get the width of the page
HaruPage::getWordSpace (PECL haru >= 0.0.1) Get the current value of word spacing
HaruPage::lineTo (PECL haru >= 0.0.1) Draw a line from the current point to the specified point
HaruPage::measureText (PECL haru >= 0.0.1) Calculate the byte length of characters which can be included on one line of the specified width
HaruPage::moveTextPos (PECL haru >= 0.0.1) Move text position to the specified offset
HaruPage::moveTo (PECL haru >= 0.0.1) Set starting point for new drawing path
HaruPage::moveToNextLine (PECL haru >= 0.0.1) Move text position to the start of the next line
HaruPage::rectangle (PECL haru >= 0.0.1) Append a rectangle to the current path
HaruPage::setCharSpace (PECL haru >= 0.0.1) Set character spacing for the page
HaruPage::setCMYKFill (PECL haru >= 0.0.1) Set filling color for the page
HaruPage::setCMYKStroke (PECL haru >= 0.0.1) Set stroking color for the page
HaruPage::setDash (PECL haru >= 0.0.1) Set the dash pattern for the page
HaruPage::setFlatness (PECL haru >= 0.0.1) Set flatness for the page
HaruPage::setFontAndSize (PECL haru >= 0.0.1) Set font and fontsize for the page
HaruPage::setGrayFill (PECL haru >= 0.0.1) Set filling color for the page
HaruPage::setGrayStroke (PECL haru >= 0.0.1) Sets stroking color for the page
HaruPage::setHeight (PECL haru >= 0.0.1) Set height of the page
HaruPage::setHorizontalScaling (PECL haru >= 0.0.1) Set horizontal scaling for the page
HaruPage::setLineCap (PECL haru >= 0.0.1) Set the shape to be used at the ends of lines
HaruPage::setLineJoin (PECL haru >= 0.0.1) Set line join style for the page
HaruPage::setLineWidth (PECL haru >= 0.0.1) Set line width for the page
HaruPage::setMiterLimit (PECL haru >= 0.0.1) Set the current value of the miter limit of the page
HaruPage::setRGBFill (PECL haru >= 0.0.1) Set filling color for the page
HaruPage::setRGBStroke (PECL haru >= 0.0.1) Set stroking color for the page
HaruPage::setRotate (PECL haru >= 0.0.1) Set rotation angle of the page
HaruPage::setSize (PECL haru >= 0.0.1) Set size and direction of the page
HaruPage::setSlideShow (PECL haru >= 0.0.1) Set transition style for the page
HaruPage::setTextLeading (PECL haru >= 0.0.1) Set text leading (line spacing) for the page
HaruPage::setTextMatrix (PECL haru >= 0.0.1) Set the current text transformation matrix of the page
HaruPage::setTextRenderingMode (PECL haru >= 0.0.1) Set text rendering mode for the page
HaruPage::setTextRise (PECL haru >= 0.0.1) Set the current value of text rising
HaruPage::setWidth (PECL haru >= 0.0.1) Set width of the page
HaruPage::setWordSpace (PECL haru >= 0.0.1) Set word spacing for the page
HaruPage::showText (PECL haru >= 0.0.1) Print text at the current position of the page
HaruPage::showTextNextLine (PECL haru >= 0.0.1) Move the current position to the start of the next line and print the text
HaruPage::stroke (PECL haru >= 0.0.1) Paint current path
HaruPage::textOut (PECL haru >= 0.0.1) Print the text on the specified position
HaruPage::textRect (PECL haru >= 0.0.1) Print the text inside the specified region
HRTime\PerformanceCounter::getFrequency (PECL hrtime >= 0.4.3) Timer frequency in ticks per second
HRTime\PerformanceCounter::getTicks (PECL hrtime >= 0.6.0) Current ticks from the system
HRTime\PerformanceCounter::getTicksSince (PECL hrtime >= 0.6.0) Ticks elapsed since the given value
HRTime\StopWatch::getElapsedTicks (PECL hrtime >= 0.4.3) Get elapsed ticks for all intervals
HRTime\StopWatch::getElapsedTime (PECL hrtime >= 0.4.3) Get elapsed time for all intervals
HRTime\StopWatch::getLastElapsedTicks (PECL hrtime >= 0.4.3) Get elapsed ticks for the last interval
HRTime\StopWatch::getLastElapsedTime (PECL hrtime >= 0.4.3) Get elapsed time for the last interval
HRTime\StopWatch::isRunning (PECL hrtime >= 0.4.3) Whether the measurement is running
HRTime\StopWatch::start (PECL hrtime >= 0.4.3) Start time measurement
HRTime\StopWatch::stop (PECL hrtime >= 0.4.3) Stop time measurement
Imagick::adaptiveBlurImage (PECL imagick 2.0.0) Adds adaptive blur filter to image
Imagick::adaptiveResizeImage (PECL imagick 2.0.0) Adaptively resize image with data dependent triangulation
Imagick::adaptiveSharpenImage (PECL imagick 2.0.0) Adaptively sharpen the image
Imagick::adaptiveThresholdImage (PECL imagick 2.0.0) Selects a threshold for each pixel based on a range of intensity
Imagick::addImage (PECL imagick 2.0.0) Adds new image to Imagick object image list
Imagick::addNoiseImage (PECL imagick 2.0.0) Adds random noise to the image
Imagick::affineTransformImage (PECL imagick 2.0.0) Transforms an image
Imagick::animateImages (No version information available, might only be in Git) Animates an image or images
Imagick::annotateImage (PECL imagick 2.0.0) Annotates an image with text
Imagick::appendImages (PECL imagick 2.0.0) Append a set of images
Imagick::autoLevelImage (No version information available, might only be in Git) Description
Imagick::averageImages (PECL imagick 2.0.0) Average a set of images
Imagick::blackThresholdImage (PECL imagick 2.0.0) Forces all pixels below the threshold into black
Imagick::blueShiftImage (No version information available, might only be in Git) Description
Imagick::blurImage (PECL imagick 2.0.0) Adds blur filter to image
Imagick::borderImage (PECL imagick 2.0.0) Surrounds the image with a border
Imagick::brightnessContrastImage (No version information available, might only be in Git) Description
Imagick::charcoalImage (PECL imagick 2.0.0) Simulates a charcoal drawing
Imagick::chopImage (PECL imagick 2.0.0) Removes a region of an image and trims
Imagick::clampImage (No version information available, might only be in Git) Description
Imagick::clear (PECL imagick 2.0.0) Clears all resources associated to Imagick object
Imagick::clipImage (PECL imagick 2.0.0) Clips along the first path from the 8BIM profile
Imagick::clipImagePath (No version information available, might only be in Git) Description
Imagick::clipPathImage (PECL imagick 2.0.0) Clips along the named paths from the 8BIM profile
Imagick::clone (PECL imagick 2.0.0) Makes an exact copy of the Imagick object
Imagick::clutImage (PECL imagick 2.0.0) Replaces colors in the image
Imagick::coalesceImages (PECL imagick 2.0.0) Composites a set of images
Imagick::colorFloodfillImage (PECL imagick 2.0.0) Changes the color value of any pixel that matches target
Imagick::colorizeImage (PECL imagick 2.0.0) Blends the fill color with the image
Imagick::colorMatrixImage (No version information available, might only be in Git) Description
Imagick::combineImages (PECL imagick 2.0.0) Combines one or more images into a single image
Imagick::commentImage (PECL imagick 2.0.0) Adds a comment to your image
Imagick::compareImageChannels (PECL imagick 2.0.0) Returns the difference in one or more images
Imagick::compareImageLayers (PECL imagick 2.0.0) Returns the maximum bounding region between images
Imagick::compareImages (PECL imagick 2.0.0) Compares an image to a reconstructed image
Imagick::compositeImage (PECL imagick 2.0.0) Composite one image onto another
Imagick::contrastImage (PECL imagick 2.0.0) Change the contrast of the image
Imagick::contrastStretchImage (PECL imagick 2.0.0) Enhances the contrast of a color image
Imagick::convolveImage (PECL imagick 2.0.0) Applies a custom convolution kernel to the image
Imagick::count (No version information available, might only be in Git) Get the number of images
Imagick::cropImage (PECL imagick 2.0.0) Extracts a region of the image
Imagick::cropThumbnailImage (PECL imagick 2.0.0) Creates a crop thumbnail
Imagick::current (PECL imagick 2.0.0) Returns a reference to the current Imagick object
Imagick::cycleColormapImage (PECL imagick 2.0.0) Displaces an image's colormap
Imagick::decipherImage (No version information available, might only be in Git) Deciphers an image
Imagick::deconstructImages (PECL imagick 2.0.0) Returns certain pixel differences between images
Imagick::deleteImageArtifact (No version information available, might only be in Git) Delete image artifact
Imagick::deleteImageProperty (No version information available, might only be in Git) Description
Imagick::deskewImage (No version information available, might only be in Git) Removes skew from the image
Imagick::despeckleImage (PECL imagick 2.0.0) Reduces the speckle noise in an image
Imagick::destroy (PECL imagick 2.0.0) Destroys the Imagick object
Imagick::displayImage (PECL imagick 2.0.0) Displays an image
Imagick::displayImages (PECL imagick 2.0.0) Displays an image or image sequence
Imagick::distortImage (PECL imagick 2.0.1) Distorts an image using various distortion methods
Imagick::drawImage (PECL imagick 2.0.0) Renders the ImagickDraw object on the current image
Imagick::edgeImage (PECL imagick 2.0.0) Enhance edges within the image
Imagick::embossImage (PECL imagick 2.0.0) Returns a grayscale image with a three-dimensional effect
Imagick::encipherImage (No version information available, might only be in Git) Enciphers an image
Imagick::enhanceImage (PECL imagick 2.0.0) Improves the quality of a noisy image
Imagick::equalizeImage (PECL imagick 2.0.0) Equalizes the image histogram
Imagick::evaluateImage (PECL imagick 2.0.0) Applies an expression to an image
Imagick::exportImagePixels (No version information available, might only be in Git) Exports raw image pixels
Imagick::extentImage (No version information available, might only be in Git) Set image size
Imagick::filter (No version information available, might only be in Git) Description
Imagick::flattenImages (PECL imagick 2.0.0) Merges a sequence of images
Imagick::flipImage (PECL imagick 2.0.0) Creates a vertical mirror image
Imagick::floodFillPaintImage (No version information available, might only be in Git) Changes the color value of any pixel that matches target
Imagick::flopImage (PECL imagick 2.0.0) Creates a horizontal mirror image
Imagick::forwardFourierTransformimage (No version information available, might only be in Git) Description
Imagick::frameImage (PECL imagick 2.0.0) Adds a simulated three-dimensional border
Imagick::functionImage (No version information available, might only be in Git) Applies a function on the image
Imagick::fxImage (PECL imagick 2.0.0) Evaluate expression for each pixel in the image
Imagick::gammaImage (PECL imagick 2.0.0) Gamma-corrects an image
Imagick::gaussianBlurImage (PECL imagick 2.0.0) Blurs an image
Imagick::getColorspace (PECL imagick 0.9.10-0.9.9) Gets the colorspace
Imagick::getCompression (PECL imagick 2.0.0) Gets the object compression type
Imagick::getCompressionQuality (PECL imagick 2.0.0) Gets the object compression quality
Imagick::getCopyright (PECL imagick 2.0.0) Returns the ImageMagick API copyright as a string
Imagick::getFilename (PECL imagick 2.0.0) The filename associated with an image sequence
Imagick::getFont (PECL imagick 2.1.0) Gets font
Imagick::getFormat (PECL imagick 2.0.0) Returns the format of the Imagick object
Imagick::getGravity (No version information available, might only be in Git) Gets the gravity
Imagick::getHomeURL (PECL imagick 2.0.0) Returns the ImageMagick home URL
Imagick::getImage (PECL imagick 2.0.0) Returns a new Imagick object
Imagick::getImageAlphaChannel (No version information available, might only be in Git) Gets the image alpha channel
Imagick::getImageArtifact (No version information available, might only be in Git) Get image artifact
Imagick::getImageAttribute (No version information available, might only be in Git) Description
Imagick::getImageBackgroundColor (PECL imagick 2.0.0) Returns the image background color
Imagick::getImageBlob (PECL imagick 2.0.0) Returns the image sequence as a blob
Imagick::getImageBluePrimary (PECL imagick 2.0.0) Returns the chromaticy blue primary point
Imagick::getImageBorderColor (PECL imagick 2.0.0) Returns the image border color
Imagick::getImageChannelDepth (PECL imagick 2.0.0) Gets the depth for a particular image channel
Imagick::getImageChannelDistortion (PECL imagick 2.0.0) Compares image channels of an image to a reconstructed image
Imagick::getImageChannelDistortions (No version information available, might only be in Git) Gets channel distortions
Imagick::getImageChannelExtrema (PECL imagick 2.0.0) Gets the extrema for one or more image channels
Imagick::getImageChannelKurtosis (No version information available, might only be in Git) The getImageChannelKurtosis purpose
Imagick::getImageChannelMean (PECL imagick 2.0.0) Gets the mean and standard deviation
Imagick::getImageChannelRange (PECL imagick 2.2.1) Gets channel range
Imagick::getImageChannelStatistics (PECL imagick 2.0.0) Returns statistics for each channel in the image
Imagick::getImageClipMask (No version information available, might only be in Git) Gets image clip mask
Imagick::getImageColormapColor (PECL imagick 2.0.0) Returns the color of the specified colormap index
Imagick::getImageColors (PECL imagick 2.0.0) Gets the number of unique colors in the image
Imagick::getImageColorspace (PECL imagick 2.0.0) Gets the image colorspace
Imagick::getImageCompose (PECL imagick 2.0.0) Returns the composite operator associated with the image
Imagick::getImageCompression (PECL imagick 2.2.2) Gets the current image's compression type
Imagick::getImageCompressionQuality (PECL imagick 2.2.2) Gets the current image's compression quality
Imagick::getImageDelay (PECL imagick 2.0.0) Gets the image delay
Imagick::getImageDepth (PECL imagick 0.9.1-0.9.9) Gets the image depth
Imagick::getImageDispose (PECL imagick 2.0.0) Gets the image disposal method
Imagick::getImageDistortion (PECL imagick 2.0.0) Compares an image to a reconstructed image
Imagick::getImageExtrema (PECL imagick 2.0.0) Gets the extrema for the image
Imagick::getImageFilename (PECL imagick 2.0.0) Returns the filename of a particular image in a sequence
Imagick::getImageFormat (PECL imagick 2.0.0) Returns the format of a particular image in a sequence
Imagick::getImageGamma (PECL imagick 2.0.0) Gets the image gamma
Imagick::getImageGeometry (PECL imagick 2.0.0) Gets the width and height as an associative array
Imagick::getImageGravity (No version information available, might only be in Git) Gets the image gravity
Imagick::getImageGreenPrimary (PECL imagick 2.0.0) Returns the chromaticy green primary point
Imagick::getImageHeight (PECL imagick 2.0.0) Returns the image height
Imagick::getImageHistogram (PECL imagick 2.0.0) Gets the image histogram
Imagick::getImageIndex (PECL imagick 2.0.0) Gets the index of the current active image
Imagick::getImageInterlaceScheme (PECL imagick 2.0.0) Gets the image interlace scheme
Imagick::getImageInterpolateMethod (PECL imagick 2.0.0) Returns the interpolation method
Imagick::getImageIterations (PECL imagick 2.0.0) Gets the image iterations
Imagick::getImageLength (PECL imagick 2.0.0) Returns the image length in bytes
Imagick::getImageMagickLicense (PECL imagick 2.0.0) Returns a string containing the ImageMagick license
Imagick::getImageMatte (PECL imagick 2.0.0) Return if the image has a matte channel
Imagick::getImageMatteColor (PECL imagick 2.0.0) Returns the image matte color
Imagick::getImageMimeType (No version information available, might only be in Git) Description
Imagick::getImageOrientation (PECL imagick 2.0.0) Gets the image orientation
Imagick::getImagePage (PECL imagick 2.0.0) Returns the page geometry
Imagick::getImagePixelColor (PECL imagick 2.0.0) Returns the color of the specified pixel
Imagick::getImageProfile (PECL imagick 2.0.0) Returns the named image profile
Imagick::getImageProfiles (PECL imagick 2.0.0) Returns the image profiles
Imagick::getImageProperties (PECL imagick 2.0.0) Returns the image properties
Imagick::getImageProperty (PECL imagick 2.0.0) Returns the named image property
Imagick::getImageRedPrimary (PECL imagick 2.0.0) Returns the chromaticity red primary point
Imagick::getImageRegion (PECL imagick 2.0.0) Extracts a region of the image
Imagick::getImageRenderingIntent (PECL imagick 2.0.0) Gets the image rendering intent
Imagick::getImageResolution (PECL imagick 2.0.0) Gets the image X and Y resolution
Imagick::getImagesBlob (PECL imagick 2.0.0) Returns all image sequences as a blob
Imagick::getImageScene (PECL imagick 2.0.0) Gets the image scene
Imagick::getImageSignature (PECL imagick 2.0.0) Generates an SHA-256 message digest
Imagick::getImageSize (PECL imagick 2.0.0) Returns the image length in bytes
Imagick::getImageTicksPerSecond (PECL imagick 2.0.0) Gets the image ticks-per-second
Imagick::getImageTotalInkDensity (PECL imagick 2.0.0) Gets the image total ink density
Imagick::getImageType (PECL imagick 0.9.10-0.9.9) Gets the potential image type
Imagick::getImageUnits (PECL imagick 2.0.0) Gets the image units of resolution
Imagick::getImageVirtualPixelMethod (PECL imagick 2.0.0) Returns the virtual pixel method
Imagick::getImageWhitePoint (PECL imagick 2.0.0) Returns the chromaticity white point
Imagick::getImageWidth (PECL imagick 2.0.0) Returns the image width
Imagick::getInterlaceScheme (PECL imagick 2.0.0) Gets the object interlace scheme
Imagick::getIteratorIndex (PECL imagick 2.0.0) Gets the index of the current active image
Imagick::getNumberImages (PECL imagick 2.0.0) Returns the number of images in the object
Imagick::getOption (PECL imagick 2.0.0) Returns a value associated with the specified key
Imagick::getPackageName (PECL imagick 2.0.0) Returns the ImageMagick package name
Imagick::getPage (PECL imagick 2.0.0) Returns the page geometry
Imagick::getPixelIterator (PECL imagick 2.0.0) Returns a MagickPixelIterator
Imagick::getPixelRegionIterator (PECL imagick 2.0.0) Get an ImagickPixelIterator for an image section
Imagick::getPointSize (No version information available, might only be in Git) Gets point size
Imagick::getQuantum (No version information available, might only be in Git) Description
Imagick::getQuantumDepth (PECL imagick 2.0.0) Gets the quantum depth
Imagick::getQuantumRange (PECL imagick 2.0.0) Returns the Imagick quantum range
Imagick::getRegistry (No version information available, might only be in Git) Description
Imagick::getReleaseDate (PECL imagick 2.0.0) Returns the ImageMagick release date
Imagick::getResource (PECL imagick 2.0.0) Returns the specified resource's memory usage
Imagick::getResourceLimit (PECL imagick 2.0.0) Returns the specified resource limit
Imagick::getSamplingFactors (PECL imagick 2.0.0) Gets the horizontal and vertical sampling factor
Imagick::getSize (PECL imagick 2.0.0) Returns the size associated with the Imagick object
Imagick::getSizeOffset (PECL imagick 2.0.0) Returns the size offset
Imagick::getVersion (PECL imagick 2.0.0) Returns the ImageMagick API version
Imagick::haldClutImage (No version information available, might only be in Git) Replaces colors in the image
Imagick::hasNextImage (PECL imagick 2.0.0) Checks if the object has more images
Imagick::hasPreviousImage (PECL imagick 2.0.0) Checks if the object has a previous image
Imagick::identifyFormat (No version information available, might only be in Git) Description
Imagick::identifyImage (PECL imagick 2.0.0) Identifies an image and fetches attributes
Imagick::implodeImage (PECL imagick 2.0.0) Creates a new image as a copy
Imagick::importImagePixels (No version information available, might only be in Git) Imports image pixels
Imagick::inverseFourierTransformImage (No version information available, might only be in Git) Description
Imagick::labelImage (PECL imagick 2.0.0) Adds a label to an image
Imagick::levelImage (PECL imagick 2.0.0) Adjusts the levels of an image
Imagick::linearStretchImage (PECL imagick 2.0.0) Stretches with saturation the image intensity
Imagick::liquidRescaleImage (No version information available, might only be in Git) Animates an image or images
Imagick::listRegistry (No version information available, might only be in Git) Description
Imagick::magnifyImage (PECL imagick 2.0.0) Scales an image proportionally 2x
Imagick::mapImage (PECL imagick 2.0.0) Replaces the colors of an image with the closest color from a reference image
Imagick::matteFloodfillImage (PECL imagick 2.0.0) Changes the transparency value of a color
Imagick::medianFilterImage (PECL imagick 2.0.0) Applies a digital filter
Imagick::mergeImageLayers (PECL imagick 2.1.0) Merges image layers
Imagick::minifyImage (PECL imagick 2.0.0) Scales an image proportionally to half its size
Imagick::modulateImage (PECL imagick 2.0.0) Control the brightness, saturation, and hue
Imagick::montageImage (PECL imagick 2.0.0) Creates a composite image
Imagick::morphImages (PECL imagick 2.0.0) Method morphs a set of images
Imagick::morphology (No version information available, might only be in Git) Description
Imagick::mosaicImages (PECL imagick 2.0.0) Forms a mosaic from images
Imagick::motionBlurImage (PECL imagick 2.0.0) Simulates motion blur
Imagick::negateImage (PECL imagick 2.0.0) Negates the colors in the reference image
Imagick::newImage (PECL imagick 2.0.0) Creates a new image
Imagick::newPseudoImage (PECL imagick 2.0.0) Creates a new image
Imagick::nextImage (PECL imagick 2.0.0) Moves to the next image
Imagick::normalizeImage (PECL imagick 2.0.0) Enhances the contrast of a color image
Imagick::oilPaintImage (PECL imagick 2.0.0) Simulates an oil painting
Imagick::opaquePaintImage (No version information available, might only be in Git) Changes the color value of any pixel that matches target
Imagick::optimizeImageLayers (PECL imagick 2.0.0) Removes repeated portions of images to optimize
Imagick::orderedPosterizeImage (PECL imagick 2.2.2) Performs an ordered dither
Imagick::paintFloodfillImage (PECL imagick 2.1.0) Changes the color value of any pixel that matches target
Imagick::paintOpaqueImage (PECL imagick 2.0.0) Change any pixel that matches color
Imagick::paintTransparentImage (PECL imagick 2.0.0) Changes any pixel that matches color with the color defined by fill
Imagick::pingImage (PECL imagick 2.0.0) Fetch basic attributes about the image
Imagick::pingImageBlob (PECL imagick 2.0.0) Quickly fetch attributes
Imagick::pingImageFile (PECL imagick 2.0.0) Get basic image attributes in a lightweight manner
Imagick::polaroidImage (PECL imagick 2.0.0) Simulates a Polaroid picture
Imagick::posterizeImage (PECL imagick 2.0.0) Reduces the image to a limited number of color level
Imagick::previewImages (PECL imagick 2.0.0) Quickly pin-point appropriate parameters for image processing
Imagick::previousImage (PECL imagick 2.0.0) Move to the previous image in the object
Imagick::profileImage (PECL imagick 2.0.0) Adds or removes a profile from an image
Imagick::quantizeImage (PECL imagick 2.0.0) Analyzes the colors within a reference image
Imagick::quantizeImages (PECL imagick 2.0.0) Analyzes the colors within a sequence of images
Imagick::queryFontMetrics (PECL imagick 2.0.0) Returns an array representing the font metrics
Imagick::queryFonts (PECL imagick 2.0.0) Returns the configured fonts
Imagick::queryFormats (PECL imagick 2.0.0) Returns formats supported by Imagick
Imagick::radialBlurImage (PECL imagick 2.0.0) Radial blurs an image
Imagick::raiseImage (PECL imagick 2.0.0) Creates a simulated 3d button-like effect
Imagick::randomThresholdImage (PECL imagick 2.0.0) Creates a high-contrast, two-color image
Imagick::readImage (PECL imagick 0.9.0-0.9.9) Reads image from filename
Imagick::readImageBlob (PECL imagick 2.0.0) Reads image from a binary string
Imagick::readImageFile (PECL imagick 2.0.0) Reads image from open filehandle
Imagick::readImages (No version information available, might only be in Git) Description
Imagick::recolorImage (No version information available, might only be in Git) Recolors image
Imagick::reduceNoiseImage (PECL imagick 2.0.0) Smooths the contours of an image
Imagick::remapImage (No version information available, might only be in Git) Remaps image colors
Imagick::removeImage (PECL imagick 2.0.0) Removes an image from the image list
Imagick::removeImageProfile (PECL imagick 2.0.0) Removes the named image profile and returns it
Imagick::render (PECL imagick 2.0.0) Renders all preceding drawing commands
Imagick::resampleImage (PECL imagick 2.0.0) Resample image to desired resolution
Imagick::resetImagePage (No version information available, might only be in Git) Reset image page
Imagick::resizeImage (PECL imagick 2.0.0) Scales an image
Imagick::rollImage (PECL imagick 2.0.0) Offsets an image
Imagick::rotateImage (PECL imagick 2.0.0) Rotates an image
Imagick::rotationalBlurImage (No version information available, might only be in Git) Description
Imagick::roundCorners (PECL imagick 2.0.0) Rounds image corners
Imagick::sampleImage (PECL imagick 2.0.0) Scales an image with pixel sampling
Imagick::scaleImage (PECL imagick 2.0.0) Scales the size of an image
Imagick::segmentImage (No version information available, might only be in Git) Segments an image
Imagick::selectiveBlurImage (No version information available, might only be in Git) Description
Imagick::separateImageChannel (PECL imagick 2.0.0) Separates a channel from the image
Imagick::sepiaToneImage (PECL imagick 2.0.0) Sepia tones an image
Imagick::setBackgroundColor (PECL imagick 2.0.0) Sets the object's default background color
Imagick::setColorspace (No version information available, might only be in Git) Set colorspace
Imagick::setCompression (PECL imagick 2.0.0) Sets the object's default compression type
Imagick::setCompressionQuality (PECL imagick 0.9.10-0.9.9) Sets the object's default compression quality
Imagick::setFilename (PECL imagick 2.0.0) Sets the filename before you read or write the image
Imagick::setFirstIterator (PECL imagick 2.0.0) Sets the Imagick iterator to the first image
Imagick::setFont (PECL imagick 2.1.0) Sets font
Imagick::setFormat (PECL imagick 2.0.0) Sets the format of the Imagick object
Imagick::setGravity (No version information available, might only be in Git) Sets the gravity
Imagick::setImage (PECL imagick 2.0.0) Replaces image in the object
Imagick::setImageAlphaChannel (No version information available, might only be in Git) Sets image alpha channel
Imagick::setImageArtifact (No version information available, might only be in Git) Set image artifact
Imagick::setImageAttribute (No version information available, might only be in Git) Description
Imagick::setImageBackgroundColor (PECL imagick 2.0.0) Sets the image background color
Imagick::setImageBias (PECL imagick 2.0.0) Sets the image bias for any method that convolves an image
Imagick::setImageBiasQuantum (No version information available, might only be in Git) Description
Imagick::setImageBluePrimary (PECL imagick 2.0.0) Sets the image chromaticity blue primary point
Imagick::setImageBorderColor (PECL imagick 2.0.0) Sets the image border color
Imagick::setImageChannelDepth (PECL imagick 2.0.0) Sets the depth of a particular image channel
Imagick::setImageClipMask (No version information available, might only be in Git) Sets image clip mask
Imagick::setImageColormapColor (PECL imagick 2.0.0) Sets the color of the specified colormap index
Imagick::setImageColorspace (PECL imagick 2.0.0) Sets the image colorspace
Imagick::setImageCompose (PECL imagick 2.0.0) Sets the image composite operator
Imagick::setImageCompression (PECL imagick 2.0.0) Sets the image compression
Imagick::setImageCompressionQuality (No version information available, might only be in Git) Sets the image compression quality
Imagick::setImageDelay (PECL imagick 2.0.0) Sets the image delay
Imagick::setImageDepth (PECL imagick 2.0.0) Sets the image depth
Imagick::setImageDispose (PECL imagick 2.0.0) Sets the image disposal method
Imagick::setImageExtent (PECL imagick 2.0.0) Sets the image size
Imagick::setImageFilename (PECL imagick 2.0.0) Sets the filename of a particular image
Imagick::setImageFormat (PECL imagick 2.0.0) Sets the format of a particular image
Imagick::setImageGamma (PECL imagick 2.0.0) Sets the image gamma
Imagick::setImageGravity (No version information available, might only be in Git) Sets the image gravity
Imagick::setImageGreenPrimary (PECL imagick 2.0.0) Sets the image chromaticity green primary point
Imagick::setImageIndex (PECL imagick 2.0.0) Set the iterator position
Imagick::setImageInterlaceScheme (PECL imagick 2.0.0) Sets the image compression
Imagick::setImageInterpolateMethod (PECL imagick 2.0.0) Sets the image interpolate pixel method
Imagick::setImageIterations (PECL imagick 2.0.0) Sets the image iterations
Imagick::setImageMatte (PECL imagick 2.0.0) Sets the image matte channel
Imagick::setImageMatteColor (PECL imagick 2.0.0) Sets the image matte color
Imagick::setImageOpacity (PECL imagick 2.0.0) Sets the image opacity level
Imagick::setImageOrientation (PECL imagick 2.0.0) Sets the image orientation
Imagick::setImagePage (PECL imagick 2.0.0) Sets the page geometry of the image
Imagick::setImageProfile (PECL imagick 2.0.0) Adds a named profile to the Imagick object
Imagick::setImageProperty (PECL imagick 2.0.0) Sets an image property
Imagick::setImageRedPrimary (PECL imagick 2.0.0) Sets the image chromaticity red primary point
Imagick::setImageRenderingIntent (PECL imagick 2.0.0) Sets the image rendering intent
Imagick::setImageResolution (PECL imagick 2.0.0) Sets the image resolution
Imagick::setImageScene (PECL imagick 2.0.0) Sets the image scene
Imagick::setImageTicksPerSecond (PECL imagick 2.0.0) Sets the image ticks-per-second
Imagick::setImageType (PECL imagick 2.0.0) Sets the image type
Imagick::setImageUnits (PECL imagick 2.0.0) Sets the image units of resolution
Imagick::setImageVirtualPixelMethod (PECL imagick 2.0.0) Sets the image virtual pixel method
Imagick::setImageWhitePoint (PECL imagick 2.0.0) Sets the image chromaticity white point
Imagick::setInterlaceScheme (PECL imagick 2.0.0) Sets the image compression
Imagick::setIteratorIndex (PECL imagick 2.0.0) Set the iterator position
Imagick::setLastIterator (PECL imagick 2.0.1) Sets the Imagick iterator to the last image
Imagick::setOption (PECL imagick 2.0.0) Set an option
Imagick::setPage (PECL imagick 2.0.0) Sets the page geometry of the Imagick object
Imagick::setPointSize (PECL imagick 2.1.0) Sets point size
Imagick::setProgressMonitor (No version information available, might only be in Git) Description
Imagick::setRegistry (No version information available, might only be in Git) Description
Imagick::setResolution (PECL imagick 2.0.0) Sets the image resolution
Imagick::setResourceLimit (PECL imagick 2.0.0) Sets the limit for a particular resource
Imagick::setSamplingFactors (PECL imagick 2.0.0) Sets the image sampling factors
Imagick::setSize (PECL imagick 2.0.0) Sets the size of the Imagick object
Imagick::setSizeOffset (PECL imagick 2.0.0) Sets the size and offset of the Imagick object
Imagick::setType (PECL imagick 2.0.0) Sets the image type attribute
Imagick::shadeImage (PECL imagick 2.0.0) Creates a 3D effect
Imagick::shadowImage (PECL imagick 2.0.0) Simulates an image shadow
Imagick::sharpenImage (PECL imagick 2.0.0) Sharpens an image
Imagick::shaveImage (PECL imagick 2.0.0) Shaves pixels from the image edges
Imagick::shearImage (PECL imagick 2.0.0) Creating a parallelogram
Imagick::sigmoidalContrastImage (PECL imagick 2.0.0) Adjusts the contrast of an image
Imagick::sketchImage (PECL imagick 2.0.0) Simulates a pencil sketch
Imagick::smushImages (No version information available, might only be in Git) Description
Imagick::solarizeImage (PECL imagick 2.0.0) Applies a solarizing effect to the image
Imagick::sparseColorImage (No version information available, might only be in Git) Interpolates colors
Imagick::spliceImage (PECL imagick 2.0.0) Splices a solid color into the image
Imagick::spreadImage (PECL imagick 2.0.0) Randomly displaces each pixel in a block
Imagick::statisticImage (No version information available, might only be in Git) Description
Imagick::steganoImage (PECL imagick 2.0.0) Hides a digital watermark within the image
Imagick::stereoImage (PECL imagick 2.0.0) Composites two images
Imagick::stripImage (PECL imagick 2.0.0) Strips an image of all profiles and comments
Imagick::subImageMatch (No version information available, might only be in Git) Description
Imagick::swirlImage (PECL imagick 2.0.0) Swirls the pixels about the center of the image
Imagick::textureImage (PECL imagick 2.0.0) Repeatedly tiles the texture image
Imagick::thresholdImage (PECL imagick 2.0.0) Changes the value of individual pixels based on a threshold
Imagick::thumbnailImage (PECL imagick 2.0.0) Changes the size of an image
Imagick::tintImage (PECL imagick 2.0.0) Applies a color vector to each pixel in the image
Imagick::transformImage (PECL imagick 2.0.0) Convenience method for setting crop size and the image geometry
Imagick::transformImageColorspace (No version information available, might only be in Git) Transforms an image to a new colorspace
Imagick::transparentPaintImage (No version information available, might only be in Git) Paints pixels transparent
Imagick::transposeImage (PECL imagick 2.0.0) Creates a vertical mirror image
Imagick::transverseImage (PECL imagick 2.0.0) Creates a horizontal mirror image
Imagick::trimImage (PECL imagick 2.0.0) Remove edges from the image
Imagick::uniqueImageColors (PECL imagick 2.0.0) Discards all but one of any pixel color
Imagick::unsharpMaskImage (PECL imagick 2.0.0) Sharpens an image
Imagick::valid (PECL imagick 2.0.0) Checks if the current item is valid
Imagick::vignetteImage (PECL imagick 2.0.0) Adds vignette filter to the image
Imagick::waveImage (PECL imagick 2.0.0) Applies wave filter to the image
Imagick::whiteThresholdImage (PECL imagick 2.0.0) Force all pixels above the threshold into white
Imagick::writeImage (PECL imagick 0.9.0-0.9.9) Writes an image to the specified filename
Imagick::writeImageFile (No version information available, might only be in Git) Writes an image to a filehandle
Imagick::writeImages (PECL imagick 0.9.0-0.9.9) Writes an image or image sequence
Imagick::writeImagesFile (No version information available, might only be in Git) Writes frames to a filehandle
ImagickDraw::affine (PECL imagick 2.0.0) Adjusts the current affine transformation matrix
ImagickDraw::annotation (PECL imagick 2.0.0) Draws text on the image
ImagickDraw::arc (PECL imagick 2.0.0) Draws an arc
ImagickDraw::bezier (PECL imagick 2.0.0) Draws a bezier curve
ImagickDraw::circle (PECL imagick 2.0.0) Draws a circle
ImagickDraw::clear (PECL imagick 2.0.0) Clears the ImagickDraw
ImagickDraw::clone (PECL imagick 2.0.0) Makes an exact copy of the specified ImagickDraw object
ImagickDraw::color (PECL imagick 2.0.0) Draws color on image
ImagickDraw::comment (PECL imagick 2.0.0) Adds a comment
ImagickDraw::composite (PECL imagick 2.0.0) Composites an image onto the current image
ImagickDraw::destroy (PECL imagick 2.0.0) Frees all associated resources
ImagickDraw::ellipse (PECL imagick 2.0.0) Draws an ellipse on the image
ImagickDraw::getClipPath (PECL imagick 2.0.0) Obtains the current clipping path ID
ImagickDraw::getClipRule (PECL imagick 2.0.0) Returns the current polygon fill rule
ImagickDraw::getClipUnits (PECL imagick 2.0.0) Returns the interpretation of clip path units
ImagickDraw::getFillColor (PECL imagick 2.0.0) Returns the fill color
ImagickDraw::getFillOpacity (PECL imagick 2.0.0) Returns the opacity used when drawing
ImagickDraw::getFillRule (PECL imagick 2.0.0) Returns the fill rule
ImagickDraw::getFont (PECL imagick 2.0.0) Returns the font
ImagickDraw::getFontFamily (PECL imagick 2.0.0) Returns the font family
ImagickDraw::getFontSize (PECL imagick 2.0.0) Returns the font pointsize
ImagickDraw::getFontStretch (No version information available, might only be in Git) Description
ImagickDraw::getFontStyle (PECL imagick 2.0.0) Returns the font style
ImagickDraw::getFontWeight (PECL imagick 2.0.0) Returns the font weight
ImagickDraw::getGravity (PECL imagick 2.0.0) Returns the text placement gravity
ImagickDraw::getStrokeAntialias (PECL imagick 2.0.0) Returns the current stroke antialias setting
ImagickDraw::getStrokeColor (PECL imagick 2.0.0) Returns the color used for stroking object outlines
ImagickDraw::getStrokeDashArray (PECL imagick 2.0.0) Returns an array representing the pattern of dashes and gaps used to stroke paths
ImagickDraw::getStrokeDashOffset (PECL imagick 2.0.0) Returns the offset into the dash pattern to start the dash
ImagickDraw::getStrokeLineCap (PECL imagick 2.0.0) Returns the shape to be used at the end of open subpaths when they are stroked
ImagickDraw::getStrokeLineJoin (PECL imagick 2.0.0) Returns the shape to be used at the corners of paths when they are stroked
ImagickDraw::getStrokeMiterLimit (PECL imagick 2.0.0) Returns the stroke miter limit
ImagickDraw::getStrokeOpacity (PECL imagick 2.0.0) Returns the opacity of stroked object outlines
ImagickDraw::getStrokeWidth (PECL imagick 2.0.0) Returns the width of the stroke used to draw object outlines
ImagickDraw::getTextAlignment (PECL imagick 2.0.0) Returns the text alignment
ImagickDraw::getTextAntialias (PECL imagick 2.0.0) Returns the current text antialias setting
ImagickDraw::getTextDecoration (PECL imagick 2.0.0) Returns the text decoration
ImagickDraw::getTextEncoding (PECL imagick 2.0.0) Returns the code set used for text annotations
ImagickDraw::getTextInterlineSpacing (No version information available, might only be in Git) Description
ImagickDraw::getTextInterwordSpacing (No version information available, might only be in Git) Description
ImagickDraw::getTextKerning (No version information available, might only be in Git) Description
ImagickDraw::getTextUnderColor (PECL imagick 2.0.0) Returns the text under color
ImagickDraw::getVectorGraphics (PECL imagick 2.0.0) Returns a string containing vector graphics
ImagickDraw::line (PECL imagick 2.0.0) Draws a line
ImagickDraw::matte (PECL imagick 2.0.0) Paints on the image's opacity channel
ImagickDraw::pathClose (PECL imagick 2.0.0) Adds a path element to the current path
ImagickDraw::pathCurveToAbsolute (PECL imagick 2.0.0) Draws a cubic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierAbsolute (PECL imagick 2.0.0) Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierRelative (PECL imagick 2.0.0) Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute (PECL imagick 2.0.0) Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierSmoothRelative (PECL imagick 2.0.0) Draws a quadratic Bezier curve
ImagickDraw::pathCurveToRelative (PECL imagick 2.0.0) Draws a cubic Bezier curve
ImagickDraw::pathCurveToSmoothAbsolute (PECL imagick 2.0.0) Draws a cubic Bezier curve
ImagickDraw::pathCurveToSmoothRelative (PECL imagick 2.0.0) Draws a cubic Bezier curve
ImagickDraw::pathEllipticArcAbsolute (PECL imagick 2.0.0) Draws an elliptical arc
ImagickDraw::pathEllipticArcRelative (PECL imagick 2.0.0) Draws an elliptical arc
ImagickDraw::pathFinish (PECL imagick 2.0.0) Terminates the current path
ImagickDraw::pathLineToAbsolute (PECL imagick 2.0.0) Draws a line path
ImagickDraw::pathLineToHorizontalAbsolute (PECL imagick 2.0.0) Draws a horizontal line path
ImagickDraw::pathLineToHorizontalRelative (PECL imagick 2.0.0) Draws a horizontal line
ImagickDraw::pathLineToRelative (PECL imagick 2.0.0) Draws a line path
ImagickDraw::pathLineToVerticalAbsolute (PECL imagick 2.0.0) Draws a vertical line
ImagickDraw::pathLineToVerticalRelative (PECL imagick 2.0.0) Draws a vertical line path
ImagickDraw::pathMoveToAbsolute (PECL imagick 2.0.0) Starts a new sub-path
ImagickDraw::pathMoveToRelative (PECL imagick 2.0.0) Starts a new sub-path
ImagickDraw::pathStart (PECL imagick 2.0.0) Declares the start of a path drawing list
ImagickDraw::point (PECL imagick 2.0.0) Draws a point
ImagickDraw::polygon (PECL imagick 2.0.0) Draws a polygon
ImagickDraw::polyline (PECL imagick 2.0.0) Draws a polyline
ImagickDraw::pop (PECL imagick 2.0.0) Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw
ImagickDraw::popClipPath (PECL imagick 2.0.0) Terminates a clip path definition
ImagickDraw::popDefs (PECL imagick 2.0.0) Terminates a definition list
ImagickDraw::popPattern (PECL imagick 2.0.0) Terminates a pattern definition
ImagickDraw::push (PECL imagick 2.0.0) Clones the current ImagickDraw and pushes it to the stack
ImagickDraw::pushClipPath (PECL imagick 2.0.0) Starts a clip path definition
ImagickDraw::pushDefs (PECL imagick 2.0.0) Indicates that following commands create named elements for early processing
ImagickDraw::pushPattern (PECL imagick 2.0.0) Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern
ImagickDraw::rectangle (PECL imagick 2.0.0) Draws a rectangle
ImagickDraw::render (PECL imagick 2.0.0) Renders all preceding drawing commands onto the image
ImagickDraw::resetVectorGraphics (No version information available, might only be in Git) Description
ImagickDraw::rotate (PECL imagick 2.0.0) Applies the specified rotation to the current coordinate space
ImagickDraw::roundRectangle (PECL imagick 2.0.0) Draws a rounded rectangle
ImagickDraw::scale (PECL imagick 2.0.0) Adjusts the scaling factor
ImagickDraw::setClipPath (PECL imagick 2.0.0) Associates a named clipping path with the image
ImagickDraw::setClipRule (PECL imagick 2.0.0) Set the polygon fill rule to be used by the clipping path
ImagickDraw::setClipUnits (PECL imagick 2.0.0) Sets the interpretation of clip path units
ImagickDraw::setFillAlpha (PECL imagick 2.0.0) Sets the opacity to use when drawing using the fill color or fill texture
ImagickDraw::setFillColor (PECL imagick 2.0.0) Sets the fill color to be used for drawing filled objects
ImagickDraw::setFillOpacity (PECL imagick 2.0.0) Sets the opacity to use when drawing using the fill color or fill texture
ImagickDraw::setFillPatternURL (PECL imagick 2.0.0) Sets the URL to use as a fill pattern for filling objects
ImagickDraw::setFillRule (PECL imagick 2.0.0) Sets the fill rule to use while drawing polygons
ImagickDraw::setFont (PECL imagick 2.0.0) Sets the fully-specified font to use when annotating with text
ImagickDraw::setFontFamily (PECL imagick 2.0.0) Sets the font family to use when annotating with text
ImagickDraw::setFontSize (PECL imagick 2.0.0) Sets the font pointsize to use when annotating with text
ImagickDraw::setFontStretch (PECL imagick 2.0.0) Sets the font stretch to use when annotating with text
ImagickDraw::setFontStyle (PECL imagick 2.0.0) Sets the font style to use when annotating with text
ImagickDraw::setFontWeight (PECL imagick 2.0.0) Sets the font weight
ImagickDraw::setGravity (PECL imagick 2.0.0) Sets the text placement gravity
ImagickDraw::setResolution (No version information available, might only be in Git) Description
ImagickDraw::setStrokeAlpha (PECL imagick 2.0.0) Specifies the opacity of stroked object outlines
ImagickDraw::setStrokeAntialias (PECL imagick 2.0.0) Controls whether stroked outlines are antialiased
ImagickDraw::setStrokeColor (PECL imagick 2.0.0) Sets the color used for stroking object outlines
ImagickDraw::setStrokeDashArray (PECL imagick 2.0.0) Specifies the pattern of dashes and gaps used to stroke paths
ImagickDraw::setStrokeDashOffset (PECL imagick 2.0.0) Specifies the offset into the dash pattern to start the dash
ImagickDraw::setStrokeLineCap (PECL imagick 2.0.0) Specifies the shape to be used at the end of open subpaths when they are stroked
ImagickDraw::setStrokeLineJoin (PECL imagick 2.0.0) Specifies the shape to be used at the corners of paths when they are stroked
ImagickDraw::setStrokeMiterLimit (PECL imagick 2.0.0) Specifies the miter limit
ImagickDraw::setStrokeOpacity (PECL imagick 2.0.0) Specifies the opacity of stroked object outlines
ImagickDraw::setStrokePatternURL (PECL imagick 2.0.0) Sets the pattern used for stroking object outlines
ImagickDraw::setStrokeWidth (PECL imagick 2.0.0) Sets the width of the stroke used to draw object outlines
ImagickDraw::setTextAlignment (PECL imagick 2.0.0) Specifies a text alignment
ImagickDraw::setTextAntialias (PECL imagick 2.0.0) Controls whether text is antialiased
ImagickDraw::setTextDecoration (PECL imagick 2.0.0) Specifies a decoration
ImagickDraw::setTextEncoding (PECL imagick 2.0.0) Specifies the text code set
ImagickDraw::setTextInterlineSpacing (No version information available, might only be in Git) Description
ImagickDraw::setTextInterwordSpacing (No version information available, might only be in Git) Description
ImagickDraw::setTextKerning (No version information available, might only be in Git) Description
ImagickDraw::setTextUnderColor (PECL imagick 2.0.0) Specifies the color of a background rectangle
ImagickDraw::setVectorGraphics (PECL imagick 2.0.0) Sets the vector graphics
ImagickDraw::setViewbox (PECL imagick 2.0.0) Sets the overall canvas size
ImagickDraw::skewX (PECL imagick 2.0.0) Skews the current coordinate system in the horizontal direction
ImagickDraw::skewY (PECL imagick 2.0.0) Skews the current coordinate system in the vertical direction
ImagickDraw::translate (PECL imagick 2.0.0) Applies a translation to the current coordinate system
ImagickKernel::addKernel (PECL imagick >= 3.3.0) Description
ImagickKernel::addUnityKernel (PECL imagick >= 3.3.0) Description
ImagickKernel::fromBuiltin (PECL imagick >= 3.3.0) Description
ImagickKernel::fromMatrix (PECL imagick >= 3.3.0) Description
ImagickKernel::getMatrix (PECL imagick >= 3.3.0) Description
ImagickKernel::scale (PECL imagick >= 3.3.0) Description
ImagickKernel::separate (PECL imagick >= 3.3.0) Description
ImagickPixel::clear (PECL imagick 2.0.0) Clears resources associated with this object
ImagickPixel::destroy (PECL imagick 2.0.0) Deallocates resources associated with this object
ImagickPixel::getColor (PECL imagick 2.0.0) Returns the color
ImagickPixel::getColorAsString (PECL imagick 2.1.0) Returns the color as a string
ImagickPixel::getColorCount (PECL imagick 2.0.0) Returns the color count associated with this color
ImagickPixel::getColorQuantum (No version information available, might only be in Git) Description
ImagickPixel::getColorValue (PECL imagick 2.0.0) Gets the normalized value of the provided color channel
ImagickPixel::getColorValueQuantum (No version information available, might only be in Git) Description
ImagickPixel::getHSL (PECL imagick 2.0.0) Returns the normalized HSL color of the ImagickPixel object
ImagickPixel::getIndex (No version information available, might only be in Git) Description
ImagickPixel::isPixelSimilar (No version information available, might only be in Git) Check the distance between this color and another
ImagickPixel::isPixelSimilarQuantum (No version information available, might only be in Git) Description
ImagickPixel::isSimilar (PECL imagick 2.0.0) Check the distance between this color and another
ImagickPixel::setColor (PECL imagick 2.0.0) Sets the color
ImagickPixel::setcolorcount (No version information available, might only be in Git) Description
ImagickPixel::setColorValue (PECL imagick 2.0.0) Sets the normalized value of one of the channels
ImagickPixel::setColorValueQuantum (No version information available, might only be in Git) Description
ImagickPixel::setHSL (PECL imagick 2.0.0) Sets the normalized HSL color
ImagickPixel::setIndex (No version information available, might only be in Git) Description
ImagickPixelIterator::clear (PECL imagick 2.0.0) Clear resources associated with a PixelIterator
ImagickPixelIterator::destroy (PECL imagick 2.0.0) Deallocates resources associated with a PixelIterator
ImagickPixelIterator::getCurrentIteratorRow (PECL imagick 2.0.0) Returns the current row of ImagickPixel objects
ImagickPixelIterator::getIteratorRow (PECL imagick 2.0.0) Returns the current pixel iterator row
ImagickPixelIterator::getNextIteratorRow (PECL imagick 2.0.0) Returns the next row of the pixel iterator
ImagickPixelIterator::getPreviousIteratorRow (PECL imagick 2.0.0) Returns the previous row
ImagickPixelIterator::newPixelIterator (PECL imagick 2.0.0) Returns a new pixel iterator
ImagickPixelIterator::newPixelRegionIterator (PECL imagick 2.0.0) Returns a new pixel iterator
ImagickPixelIterator::resetIterator (PECL imagick 2.0.0) Resets the pixel iterator
ImagickPixelIterator::setIteratorFirstRow (PECL imagick 2.0.0) Sets the pixel iterator to the first pixel row
ImagickPixelIterator::setIteratorLastRow (PECL imagick 2.0.0) Sets the pixel iterator to the last pixel row
ImagickPixelIterator::setIteratorRow (PECL imagick 2.0.0) Set the pixel iterator row
ImagickPixelIterator::syncIterator (PECL imagick 2.0.0) Syncs the pixel iterator
InfiniteIterator::next (PHP 5 >= 5.1.0, PHP 7) Moves the inner Iterator forward or rewinds it
IntlBreakIterator::createCharacterInstance (PHP 5 >= 5.5.0, PHP 7) Create break iterator for boundaries of combining character sequences
IntlBreakIterator::createCodePointInstance (PHP 5 >= 5.5.0, PHP 7) Create break iterator for boundaries of code points
IntlBreakIterator::createLineInstance (PHP 5 >= 5.5.0, PHP 7) Create break iterator for logically possible line breaks
IntlBreakIterator::createSentenceInstance (PHP 5 >= 5.5.0, PHP 7) Create break iterator for sentence breaks
IntlBreakIterator::createTitleInstance (PHP 5 >= 5.5.0, PHP 7) Create break iterator for title-casing breaks
IntlBreakIterator::createWordInstance (PHP 5 >= 5.5.0, PHP 7) Create break iterator for word breaks
IntlBreakIterator::current (PHP 5 >= 5.5.0, PHP 7) Get index of current position
IntlBreakIterator::first (PHP 5 >= 5.5.0, PHP 7) Set position to the first character in the text
IntlBreakIterator::following (PHP 5 >= 5.5.0, PHP 7) Advance the iterator to the first boundary following specified offset
IntlBreakIterator::getErrorCode (PHP 5 >= 5.5.0, PHP 7) Get last error code on the object
IntlBreakIterator::getErrorMessage (PHP 5 >= 5.5.0, PHP 7) Get last error message on the object
IntlBreakIterator::getLocale (PHP 5 >= 5.5.0, PHP 7) Get the locale associated with the object
IntlBreakIterator::getPartsIterator (PHP 5 >= 5.5.0, PHP 7) Create iterator for navigating fragments between boundaries
IntlBreakIterator::getText (PHP 5 >= 5.5.0, PHP 7) Get the text being scanned
IntlBreakIterator::isBoundary (PHP 5 >= 5.5.0, PHP 7) Tell whether an offset is a boundaryʼs offset
IntlBreakIterator::last (PHP 5 >= 5.5.0, PHP 7) Set the iterator position to index beyond the last character
IntlBreakIterator::next (PHP 5 >= 5.5.0, PHP 7) Advance the iterator the next boundary
IntlBreakIterator::preceding (PHP 5 >= 5.5.0, PHP 7) Set the iterator position to the first boundary before an offset
IntlBreakIterator::previous (PHP 5 >= 5.5.0, PHP 7) Set the iterator position to the boundary immediately before the current
IntlBreakIterator::setText (PHP 5 >= 5.5.0, PHP 7) Set the text being scanned
IntlCalendar::add (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Add a (signed) amount of time to a field
IntlCalendar::after (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Whether this objectʼs time is after that of the passed object
IntlCalendar::before (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Whether this objectʼs time is before that of the passed object
IntlCalendar::clear (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Clear a field or all fields
IntlCalendar::createInstance (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Create a new IntlCalendar
IntlCalendar::equals (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Compare time of two IntlCalendar objects for equality
IntlCalendar::fieldDifference (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Calculate difference between given time and this objectʼs time
IntlCalendar::fromDateTime (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a2) Create an IntlCalendar from a DateTime object or string
IntlCalendar::get (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the value for a field
IntlCalendar::getActualMaximum (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) The maximum value for a field, considering the objectʼs current time
IntlCalendar::getActualMinimum (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) The minimum value for a field, considering the objectʼs current time
IntlCalendar::getAvailableLocales (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get array of locales for which there is data
IntlCalendar::getDayOfWeekType (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Tell whether a day is a weekday, weekend or a day that has a transition between the two
IntlCalendar::getErrorCode (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get last error code on the object
IntlCalendar::getErrorMessage (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get last error message on the object
IntlCalendar::getFirstDayOfWeek (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the first day of the week for the calendarʼs locale
IntlCalendar::getGreatestMinimum (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the largest local minimum value for a field
IntlCalendar::getKeywordValuesForLocale (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get set of locale keyword values
IntlCalendar::getLeastMaximum (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the smallest local maximum for a field
IntlCalendar::getLocale (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the locale associated with the object
IntlCalendar::getMaximum (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the global maximum value for a field
IntlCalendar::getMinimalDaysInFirstWeek (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get minimal number of days the first week in a year or month can have
IntlCalendar::getMinimum (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the global minimum value for a field
IntlCalendar::getNow (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get number representing the current time
IntlCalendar::getRepeatedWallTimeOption (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get behavior for handling repeating wall time
IntlCalendar::getSkippedWallTimeOption (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get behavior for handling skipped wall time
IntlCalendar::getTime (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get time currently represented by the object
IntlCalendar::getTimeZone (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the objectʼs timezone
IntlCalendar::getType (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the calendar type
IntlCalendar::getWeekendTransition (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get time of the day at which weekend begins or ends
IntlCalendar::inDaylightTime (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Whether the objectʼs time is in Daylight Savings Time
IntlCalendar::isEquivalentTo (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Whether another calendar is equal but for a different time
IntlCalendar::isLenient (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Whether date/time interpretation is in lenient mode
IntlCalendar::isSet (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Whether a field is set
IntlCalendar::isWeekend (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Whether a certain date/time is in the weekend
IntlCalendar::roll (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Add value to field without carrying into more significant fields
IntlCalendar::set (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set a time field or several common fields at once
IntlCalendar::setFirstDayOfWeek (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set the day on which the week is deemed to start
IntlCalendar::setLenient (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set whether date/time interpretation is to be lenient
IntlCalendar::setMinimalDaysInFirstWeek (PHP 5 >= 5.5.1, PHP 7) Set minimal number of days the first week in a year or month can have
IntlCalendar::setRepeatedWallTimeOption (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set behavior for handling repeating wall times at negative timezone offset transitions
IntlCalendar::setSkippedWallTimeOption (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set behavior for handling skipped wall times at positive timezone offset transitions
IntlCalendar::setTime (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set the calendar time in milliseconds since the epoch
IntlCalendar::setTimeZone (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set the timezone used by this calendar
IntlCalendar::toDateTime (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a2) Convert an IntlCalendar into a DateTime object
IntlChar::charAge (PHP 7) Get the "age" of the code point
IntlChar::charDigitValue (PHP 7) Get the decimal digit value of a decimal digit character
IntlChar::charDirection (PHP 7) Get bidirectional category value for a code point
IntlChar::charFromName (PHP 7) Find Unicode character by name and return its code point value
IntlChar::charMirror (PHP 7) Get the "mirror-image" character for a code point
IntlChar::charName (PHP 7) Retrieve the name of a Unicode character
IntlChar::charType (PHP 7) Get the general category value for a code point
IntlChar::chr (PHP 7) Return Unicode character by code point value
IntlChar::digit (PHP 7) Get the decimal digit value of a code point for a given radix
IntlChar::enumCharNames (PHP 7) Enumerate all assigned Unicode characters within a range
IntlChar::enumCharTypes (PHP 7) Enumerate all code points with their Unicode general categories
IntlChar::foldCase (PHP 7) Perform case folding on a code point
IntlChar::forDigit (PHP 7) Get character representation for a given digit and radix
IntlChar::getBidiPairedBracket (PHP 7) Get the paired bracket character for a code point
IntlChar::getBlockCode (PHP 7) Get the Unicode allocation block containing a code point
IntlChar::getCombiningClass (PHP 7) Get the combining class of a code point
IntlChar::getIntPropertyMaxValue (PHP 7) Get the max value for a Unicode property
IntlChar::getIntPropertyMinValue (PHP 7) Get the min value for a Unicode property
IntlChar::getIntPropertyValue (PHP 7) Get the value for a Unicode property for a code point
IntlChar::getNumericValue (PHP 7) Get the numeric value for a Unicode code point
IntlChar::getPropertyEnum (PHP 7) Get the property constant value for a given property name
IntlChar::getPropertyName (PHP 7) Get the Unicode name for a property
IntlChar::getPropertyValueEnum (PHP 7) Get the property value for a given value name
IntlChar::getPropertyValueName (PHP 7) Get the Unicode name for a property value
IntlChar::getUnicodeVersion (PHP 7) Get the Unicode version
IntlChar::hasBinaryProperty (PHP 7) Check a binary Unicode property for a code point
IntlChar::isalnum (PHP 7) Check if code point is an alphanumeric character
IntlChar::isalpha (PHP 7) Check if code point is a letter character
IntlChar::isbase (PHP 7) Check if code point is a base character
IntlChar::isblank (PHP 7) Check if code point is a "blank" or "horizontal space" character
IntlChar::iscntrl (PHP 7) Check if code point is a control character
IntlChar::isdefined (PHP 7) Check whether the code point is defined
IntlChar::isdigit (PHP 7) Check if code point is a digit character
IntlChar::isgraph (PHP 7) Check if code point is a graphic character
IntlChar::isIDIgnorable (PHP 7) Check if code point is an ignorable character
IntlChar::isIDPart (PHP 7) Check if code point is permissible in an identifier
IntlChar::isIDStart (PHP 7) Check if code point is permissible as the first character in an identifier
IntlChar::isISOControl (PHP 7) Check if code point is an ISO control code
IntlChar::isJavaIDPart (PHP 7) Check if code point is permissible in a Java identifier
IntlChar::isJavaIDStart (PHP 7) Check if code point is permissible as the first character in a Java identifier
IntlChar::isJavaSpaceChar (PHP 7) Check if code point is a space character according to Java
IntlChar::islower (PHP 7) Check if code point is a lowercase letter
IntlChar::isMirrored (PHP 7) Check if code point has the Bidi_Mirrored property
IntlChar::isprint (PHP 7) Check if code point is a printable character
IntlChar::ispunct (PHP 7) Check if code point is punctuation character
IntlChar::isspace (PHP 7) Check if code point is a space character
IntlChar::istitle (PHP 7) Check if code point is a titlecase letter
IntlChar::isUAlphabetic (PHP 7) Check if code point has the Alphabetic Unicode property
IntlChar::isULowercase (PHP 7) Check if code point has the Lowercase Unicode property
IntlChar::isupper (PHP 7) Check if code point has the general category "Lu" (uppercase letter)
IntlChar::isUUppercase (PHP 7) Check if code point has the Uppercase Unicode property
IntlChar::isUWhiteSpace (PHP 7) Check if code point has the White_Space Unicode property
IntlChar::isWhitespace (PHP 7) Check if code point is a whitespace character according to ICU
IntlChar::isxdigit (PHP 7) Check if code point is a hexadecimal digit
IntlChar::ord (PHP 7) Return Unicode code point value of character
IntlChar::tolower (PHP 7) Make Unicode character lowercase
IntlChar::totitle (PHP 7) Make Unicode character titlecase
IntlChar::toupper (PHP 7) Make Unicode character uppercase
IntlCodePointBreakIterator::getLastCodePoint (PHP 5 >= 5.5.0, PHP 7) Get last code point passed over after advancing or receding the iterator
IntlDateFormatter::create (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Create a date formatter
IntlDateFormatter::format (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Format the date/time value as a string
IntlDateFormatter::formatObject (PHP 5 >= 5.5.0, PHP 7, PECL intl >= 3.0.0) Formats an object
IntlDateFormatter::getCalendar (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the calendar type used for the IntlDateFormatter
IntlDateFormatter::getCalendarObject (PHP 5 >= 5.5.0, PHP 7, PECL intl >= 3.0.0) Get copy of formatterʼs calendar object
IntlDateFormatter::getDateType (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the datetype used for the IntlDateFormatter
IntlDateFormatter::getErrorCode (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the error code from last operation
IntlDateFormatter::getErrorMessage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the error text from the last operation
IntlDateFormatter::getLocale (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the locale used by formatter
IntlDateFormatter::getPattern (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the pattern used for the IntlDateFormatter
IntlDateFormatter::getTimeType (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the timetype used for the IntlDateFormatter
IntlDateFormatter::getTimeZone (PHP 5 >= 5.5.0, PHP 7, PECL intl >= 3.0.0) Get formatterʼs timezone
IntlDateFormatter::getTimeZoneId (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the timezone-id used for the IntlDateFormatter
IntlDateFormatter::isLenient (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the lenient used for the IntlDateFormatter
IntlDateFormatter::localtime (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Parse string to a field-based time value
IntlDateFormatter::parse (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Parse string to a timestamp value
IntlDateFormatter::setCalendar (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Sets the calendar type used by the formatter
IntlDateFormatter::setLenient (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set the leniency of the parser
IntlDateFormatter::setPattern (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set the pattern used for the IntlDateFormatter
IntlDateFormatter::setTimeZone (PHP 5 >= 5.5.0, PHP 7, PECL intl >= 3.0.0) Sets formatterʼs timezone
IntlDateFormatter::setTimeZoneId (PHP 5 >= 5.3.0, PECL intl >= 1.0.0) Sets the time zone to use
IntlGregorianCalendar::getGregorianChange (PHP 5 >= 5.5.0, PHP 7) Get the Gregorian Calendar change date
IntlGregorianCalendar::isLeapYear (PHP 5 >= 5.5.0, PHP 7) Determine if the given year is a leap year
IntlGregorianCalendar::setGregorianChange (PHP 5 >= 5.5.0, PHP 7) Set the Gregorian Calendar the change date
IntlIterator::current (PHP 5 >= 5.5.0, PHP 7) Get the current element
IntlIterator::key (PHP 5 >= 5.5.0, PHP 7) Get the current key
IntlIterator::next (PHP 5 >= 5.5.0, PHP 7) Move forward to the next element
IntlIterator::rewind (PHP 5 >= 5.5.0, PHP 7) Rewind the iterator to the first element
IntlIterator::valid (PHP 5 >= 5.5.0, PHP 7) Check if current position is valid
IntlPartsIterator::getBreakIterator (No version information available, might only be in Git) Get IntlBreakIterator backing this parts iterator
IntlRuleBasedBreakIterator::getBinaryRules (PHP 5 >= 5.5.0, PHP 7) Get the binary form of compiled rules
IntlRuleBasedBreakIterator::getRules (PHP 5 >= 5.5.0, PHP 7) Get the rule set used to create this object
IntlRuleBasedBreakIterator::getRuleStatus (PHP 5 >= 5.5.0, PHP 7) Get the largest status value from the break rules that determined the current break position
IntlRuleBasedBreakIterator::getRuleStatusVec (PHP 5 >= 5.5.0, PHP 7) Get the status values from the break rules that determined the current break position
IntlTimeZone::countEquivalentIDs (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the number of IDs in the equivalency group that includes the given ID
IntlTimeZone::createDefault (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Create a new copy of the default timezone for this host
IntlTimeZone::createEnumeration (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get an enumeration over time zone IDs associated with the given country or offset
IntlTimeZone::createTimeZone (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Create a timezone object for the given ID
IntlTimeZone::createTimeZoneIDEnumeration (PHP 5 >= 5.5.0, PHP 7) Get an enumeration over system time zone IDs with the given filter conditions
IntlTimeZone::fromDateTimeZone (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Create a timezone object from DateTimeZone
IntlTimeZone::getCanonicalID (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID
IntlTimeZone::getDisplayName (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get a name of this time zone suitable for presentation to the user
IntlTimeZone::getDSTSavings (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the amount of time to be added to local standard time to get local wall clock time
IntlTimeZone::getEquivalentID (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get an ID in the equivalency group that includes the given ID
IntlTimeZone::getErrorCode (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get last error code on the object
IntlTimeZone::getErrorMessage (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get last error message on the object
IntlTimeZone::getGMT (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Create GMT (UTC) timezone
IntlTimeZone::getID (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get timezone ID
IntlTimeZone::getIDForWindowsID (PHP 7 >= 7.1.0) Translate a Windows timezone into a system timezone
IntlTimeZone::getOffset (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the time zone raw and GMT offset for the given moment in time
IntlTimeZone::getRawOffset (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the raw GMT offset (before taking daylight savings time into account
IntlTimeZone::getRegion (PHP 5 >= 5.5.0, PHP 7) Get the region code associated with the given system time zone ID
IntlTimeZone::getTZDataVersion (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the timezone data version currently used by ICU
IntlTimeZone::getUnknown (PHP 5 >= 5.5.0, PHP 7) Get the "unknown" time zone
IntlTimeZone::getWindowsID (PHP 7 >= 7.1.0) Translate a system timezone into a Windows timezone
IntlTimeZone::hasSameRules (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Check if this zone has the same rules and offset as another zone
IntlTimeZone::toDateTimeZone (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Convert to DateTimeZone
IntlTimeZone::useDaylightTime (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Check if this time zone uses daylight savings time
Iterator::current (PHP 5, PHP 7) Return the current element
Iterator::key (PHP 5, PHP 7) Return the key of the current element
Iterator::next (PHP 5, PHP 7) Move forward to next element
Iterator::rewind (PHP 5, PHP 7) Rewind the Iterator to the first element
Iterator::valid (PHP 5, PHP 7) Checks if current position is valid
IteratorAggregate::getIterator (PHP 5, PHP 7) Retrieve an external iterator
IteratorIterator::current (PHP 5 >= 5.1.0, PHP 7) Get the current value
IteratorIterator::getInnerIterator (PHP 5 >= 5.1.0, PHP 7) Get the inner iterator
IteratorIterator::key (PHP 5 >= 5.1.0, PHP 7) Get the key of the current element
IteratorIterator::next (PHP 5 >= 5.1.0, PHP 7) Forward to the next element
IteratorIterator::rewind (PHP 5 >= 5.1.0, PHP 7) Rewind to the first element
IteratorIterator::valid (PHP 5 >= 5.1.0, PHP 7) Checks if the iterator is valid
JsonSerializable::jsonSerialize (PHP 5 >= 5.4.0, PHP 7) Specify data which should be serialized to JSON
Judy::byCount (PECL judy >= 0.1.1) Locate the Nth index present in the Judy array
Judy::count (PECL judy >= 0.1.1) Count the number of elements in the Judy array
Judy::first (PECL judy >= 0.1.1) Search for the first index in the Judy array
Judy::firstEmpty (PECL judy >= 0.1.1) Search for the first absent index in the Judy array
Judy::free (PECL judy >= 0.1.1) Free the entire Judy array
Judy::getType (PECL judy >= 0.1.1) Return the type of the current Judy array
Judy::last (PECL judy >= 0.1.1) Search for the last index in the Judy array
Judy::lastEmpty (PECL judy >= 0.1.1) Search for the last absent index in the Judy array
Judy::memoryUsage (PECL judy >= 0.1.1) Return the memory used by the Judy array
Judy::next (PECL judy >= 0.1.1) Search for the next index in the Judy array
Judy::nextEmpty (PECL judy >= 0.1.1) Search for the next absent index in the Judy array
Judy::offsetExists (PECL judy >= 0.1.1) Whether a offset exists
Judy::offsetGet (PECL judy >= 0.1.1) Offset to retrieve
Judy::offsetSet (PECL judy >= 0.1.1) Offset to set
Judy::offsetUnset (PECL judy >= 0.1.1) Offset to unset
Judy::prev (PECL judy >= 0.1.1) Search for the previous index in the Judy array
Judy::prevEmpty (PECL judy >= 0.1.1) Search for the previous absent index in the Judy array
Judy::size (PECL judy >= 0.1.1) Return the size of the current Judy array
Lapack::eigenValues (PECL lapack >= 0.1.0) This function returns the eigenvalues for a given square matrix
Lapack::identity (PECL lapack >= 0.1.0) Return an identity matrix
Lapack::leastSquaresByFactorisation (PECL lapack >= 0.1.0) Calculate the linear least squares solution of a matrix using QR factorisation
Lapack::leastSquaresBySVD (PECL lapack >= 0.1.0) Solve the linear least squares problem, using SVD
Lapack::pseudoInverse (PECL lapack >= 0.1.0) Calculate the inverse of a matrix
Lapack::singularValues (PECL lapack >= 0.1.0) Calculated the singular values of a matrix
Lapack::solveLinearEquation (PECL lapack >= 0.1.0) Solve a system of linear equations
LimitIterator::current (PHP 5 >= 5.1.0, PHP 7) Get current element
LimitIterator::getInnerIterator (PHP 5 >= 5.1.0, PHP 7) Get inner iterator
LimitIterator::getPosition (PHP 5 >= 5.1.0, PHP 7) Return the current position
LimitIterator::key (PHP 5 >= 5.1.0, PHP 7) Get current key
LimitIterator::next (PHP 5 >= 5.1.0, PHP 7) Move the iterator forward
LimitIterator::rewind (PHP 5 >= 5.1.0, PHP 7) Rewind the iterator to the specified starting offset
LimitIterator::seek (PHP 5 >= 5.1.0, PHP 7) Seek to the given position
LimitIterator::valid (PHP 5 >= 5.1.0, PHP 7) Check whether the current element is valid
Locale::acceptFromHttp (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Tries to find out best available locale based on HTTP "Accept-Language" header
Locale::canonicalize (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Canonicalize the locale string
Locale::composeLocale (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Returns a correctly ordered and delimited locale ID
Locale::filterMatches (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Checks if a language tag filter matches with locale
Locale::getAllVariants (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Gets the variants for the input locale
Locale::getDefault (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Gets the default locale value from the INTL global 'default_locale'
Locale::getDisplayLanguage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Returns an appropriately localized display name for language of the inputlocale
Locale::getDisplayName (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Returns an appropriately localized display name for the input locale
Locale::getDisplayRegion (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Returns an appropriately localized display name for region of the input locale
Locale::getDisplayScript (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Returns an appropriately localized display name for script of the input locale
Locale::getDisplayVariant (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Returns an appropriately localized display name for variants of the input locale
Locale::getKeywords (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Gets the keywords for the input locale
Locale::getPrimaryLanguage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Gets the primary language for the input locale
Locale::getRegion (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Gets the region for the input locale
Locale::getScript (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Gets the script for the input locale
Locale::lookup (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Searches the language tag list for the best match to the language
Locale::parseLocale (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Returns a key-value array of locale ID subtag elements
Locale::setDefault (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Sets the default runtime locale
Lua::assign (PECL lua >=0.9.0) Assign a PHP variable to Lua
Lua::call (PECL lua >=0.9.0) Call Lua functions
Lua::eval (PECL lua >=0.9.0) Evaluate a string as Lua code
Lua::getVersion (PECL lua >=0.9.0) The getversion purpose
Lua::include (PECL lua >=0.9.0) Parse a Lua script file
Lua::registerCallback (No version information available, might only be in Git) Register a PHP function to Lua
Memcache::add (PECL memcache >= 0.2.0) Add an item to the server
Memcache::addServer (PECL memcache >= 2.0.0) Add a memcached server to connection pool
Memcache::close (PECL memcache >= 0.4.0) Close memcached server connection
Memcache::connect (PECL memcache >= 0.2.0) Open memcached server connection
Memcache::decrement (PECL memcache >= 0.2.0) Decrement item's value
Memcache::delete (PECL memcache >= 0.2.0) Delete item from the server
Memcache::flush (PECL memcache >= 1.0.0) Flush all existing items at the server
Memcache::get (PECL memcache >= 0.2.0) Retrieve item from the server
Memcache::getExtendedStats (PECL memcache >= 2.0.0) Get statistics from all servers in pool
Memcache::getServerStatus (PECL memcache >= 2.1.0) Returns server status
Memcache::getStats (PECL memcache >= 0.2.0) Get statistics of the server
Memcache::getVersion (PECL memcache >= 0.2.0) Return version of the server
Memcache::increment (PECL memcache >= 0.2.0) Increment item's value
Memcache::pconnect (PECL memcache >= 0.4.0) Open memcached server persistent connection
Memcache::replace (PECL memcache >= 0.2.0) Replace value of the existing item
Memcache::set (PECL memcache >= 0.2.0) Store data at the server
Memcache::setCompressThreshold (PECL memcache >= 2.0.0) Enable automatic compression of large values
Memcache::setServerParams (PECL memcache >= 2.1.0) Changes server parameters and status at runtime
Memcached::add (PECL memcached >= 0.1.0) Add an item under a new key
Memcached::addByKey (PECL memcached >= 0.1.0) Add an item under a new key on a specific server
Memcached::addServer (PECL memcached >= 0.1.0) Add a server to the server pool
Memcached::addServers (PECL memcached >= 0.1.1) Add multiple servers to the server pool
Memcached::append (PECL memcached >= 0.1.0) Append data to an existing item
Memcached::appendByKey (PECL memcached >= 0.1.0) Append data to an existing item on a specific server
Memcached::cas (PECL memcached >= 0.1.0) Compare and swap an item
Memcached::casByKey (PECL memcached >= 0.1.0) Compare and swap an item on a specific server
Memcached::decrement (PECL memcached >= 0.1.0) Decrement numeric item's value
Memcached::decrementByKey (PECL memcached >= 2.0.0) Decrement numeric item's value, stored on a specific server
Memcached::delete (PECL memcached >= 0.1.0) Delete an item
Memcached::deleteByKey (PECL memcached >= 0.1.0) Delete an item from a specific server
Memcached::deleteMulti (PECL memcached >= 2.0.0) Delete multiple items
Memcached::deleteMultiByKey (PECL memcached >= 2.0.0) Delete multiple items from a specific server
Memcached::fetch (PECL memcached >= 0.1.0) Fetch the next result
Memcached::fetchAll (PECL memcached >= 0.1.0) Fetch all the remaining results
Memcached::flush (PECL memcached >= 0.1.0) Invalidate all items in the cache
Memcached::get (PECL memcached >= 0.1.0) Retrieve an item
Memcached::getAllKeys (PECL memcached >= 2.0.0) Gets the keys stored on all the servers
Memcached::getByKey (PECL memcached >= 0.1.0) Retrieve an item from a specific server
Memcached::getDelayed (PECL memcached >= 0.1.0) Request multiple items
Memcached::getDelayedByKey (PECL memcached >= 0.1.0) Request multiple items from a specific server
Memcached::getMulti (PECL memcached >= 0.1.0) Retrieve multiple items
Memcached::getMultiByKey (PECL memcached >= 0.1.0) Retrieve multiple items from a specific server
Memcached::getOption (PECL memcached >= 0.1.0) Retrieve a Memcached option value
Memcached::getResultCode (PECL memcached >= 0.1.0) Return the result code of the last operation
Memcached::getResultMessage (PECL memcached >= 1.0.0) Return the message describing the result of the last operation
Memcached::getServerByKey (PECL memcached >= 0.1.0) Map a key to a server
Memcached::getServerList (PECL memcached >= 0.1.0) Get the list of the servers in the pool
Memcached::getStats (PECL memcached >= 0.1.0) Get server pool statistics
Memcached::getVersion (PECL memcached >= 0.1.5) Get server pool version info
Memcached::increment (PECL memcached >= 0.1.0) Increment numeric item's value
Memcached::incrementByKey (PECL memcached >= 2.0.0) Increment numeric item's value, stored on a specific server
Memcached::isPersistent (PECL memcached >= 2.0.0) Check if a persitent connection to memcache is being used
Memcached::isPristine (PECL memcached >= 2.0.0) Check if the instance was recently created
Memcached::prepend (PECL memcached >= 0.1.0) Prepend data to an existing item
Memcached::prependByKey (PECL memcached >= 0.1.0) Prepend data to an existing item on a specific server
Memcached::quit (PECL memcached >= 2.0.0) Close any open connections
Memcached::replace (PECL memcached >= 0.1.0) Replace the item under an existing key
Memcached::replaceByKey (PECL memcached >= 0.1.0) Replace the item under an existing key on a specific server
Memcached::resetServerList (PECL memcached >= 2.0.0) Clears all servers from the server list
Memcached::set (PECL memcached >= 0.1.0) Store an item
Memcached::setByKey (PECL memcached >= 0.1.0) Store an item on a specific server
Memcached::setMulti (PECL memcached >= 0.1.0) Store multiple items
Memcached::setMultiByKey (PECL memcached >= 0.1.0) Store multiple items on a specific server
Memcached::setOption (PECL memcached >= 0.1.0) Set a Memcached option
Memcached::setOptions (PECL memcached >= 2.0.0) Set Memcached options
Memcached::setSaslAuthData (PECL memcached >= 2.0.0) Set the credentials to use for authentication
Memcached::touch (PECL memcached >= 2.0.0) Set a new expiration on an item
Memcached::touchByKey (PECL memcached >= 2.0.0) Set a new expiration on an item on a specific server
MessageFormatter::create (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Constructs a new Message Formatter
MessageFormatter::format (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Format the message
MessageFormatter::formatMessage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Quick format message
MessageFormatter::getErrorCode (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the error code from last operation
MessageFormatter::getErrorMessage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the error text from the last operation
MessageFormatter::getLocale (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the locale for which the formatter was created
MessageFormatter::getPattern (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get the pattern used by the formatter
MessageFormatter::parse (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Parse input string according to pattern
MessageFormatter::parseMessage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Quick parse input string
MessageFormatter::setPattern (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set the pattern used by the formatter
Mongo::connectUtil (PECL mongo >=0.9.0) Connects with a database server
Mongo::getPoolSize (PECL mongo >=1.2.0) Get pool size for connection pools
Mongo::getSlave (PECL mongo >=1.1.0) Returns the address being used by this for slaveOkay reads
Mongo::getSlaveOkay (PECL mongo >=1.1.0) Get slaveOkay setting for this connection
Mongo::poolDebug (PECL mongo >=1.2.0) Returns information about all connection pools
Mongo::setPoolSize (PECL mongo >=1.2.0) Set the size for future connection pools
Mongo::setSlaveOkay (PECL mongo >=1.1.0) Change slaveOkay setting for this connection
Mongo::switchSlave (PECL mongo >=1.1.0) Choose a new secondary for slaveOkay reads
MongoClient::close (PECL mongo >=1.3.0) Closes this connection
MongoClient::connect (PECL mongo >=1.3.0) Connects to a database server
MongoClient::dropDB (PECL mongo >=1.3.0) Drops a database [deprecated]
MongoClient::getConnections (PECL mongo >=1.3.0) Return info about all open connections
MongoClient::getHosts (PECL mongo >=1.3.0) Updates status for all associated hosts
MongoClient::getReadPreference (PECL mongo >=1.3.0) Get the read preference for this connection
MongoClient::getWriteConcern (PECL mongo >=1.5.0) Get the write concern for this connection
MongoClient::killCursor (PECL mongo >=1.5.0) Kills a specific cursor on the server
MongoClient::listDBs (PECL mongo >=1.3.0) Lists all of the databases available
MongoClient::selectCollection (PECL mongo >=1.3.0) Gets a database collection
MongoClient::selectDB (PECL mongo >=1.3.0) Gets a database
MongoClient::setReadPreference (PECL mongo >=1.3.0) Set the read preference for this connection
MongoClient::setWriteConcern (PECL mongo >=1.5.0) Set the write concern for this connection
MongoCollection::aggregate (PECL mongo >=1.3.0) Perform an aggregation using the aggregation framework
MongoCollection::aggregateCursor (PECL mongo >=1.5.0) Execute an aggregation pipeline command and retrieve results through a cursor
MongoCollection::batchInsert (PECL mongo >=0.9.0) Inserts multiple documents into this collection
MongoCollection::count (PECL mongo >=0.9.0) Counts the number of documents in this collection
MongoCollection::createDBRef (PECL mongo >=0.9.0) Creates a database reference
MongoCollection::createIndex (PECL mongo >=1.5.0) Creates an index on the specified field(s) if it does not already exist
MongoCollection::deleteIndex (PECL mongo >=0.9.0) Deletes an index from this collection
MongoCollection::deleteIndexes (PECL mongo >=0.9.0) Delete all indices for this collection
MongoCollection::distinct (PECL mongo >=1.2.11) Retrieve a list of distinct values for the given key across a collection
MongoCollection::drop (PECL mongo >=0.9.0) Drops this collection
MongoCollection::ensureIndex (PECL mongo >=0.9.0) Creates an index on the specified field(s) if it does not already exist
MongoCollection::find (PECL mongo >=0.9.0) Queries this collection, returning a MongoCursor for the result set
MongoCollection::findAndModify (PECL mongo >=1.3.0) Update a document and return it
MongoCollection::findOne (PECL mongo >=0.9.0) Queries this collection, returning a single element
MongoCollection::getDBRef (PECL mongo >=0.9.0) Fetches the document pointed to by a database reference
MongoCollection::getIndexInfo (PECL mongo >=0.9.0) Returns information about indexes on this collection
MongoCollection::getName (PECL mongo >=0.9.0) Returns this collection's name
MongoCollection::getReadPreference (PECL mongo >=1.3.0) Get the read preference for this collection
MongoCollection::getSlaveOkay (PECL mongo >=1.1.0) Get slaveOkay setting for this collection
MongoCollection::getWriteConcern (PECL mongo >=1.5.0) Get the write concern for this collection
MongoCollection::group (PECL mongo >=0.9.2) Performs an operation similar to SQL's GROUP BY command
MongoCollection::insert (PECL mongo >=0.9.0) Inserts a document into the collection
MongoCollection::parallelCollectionScan (PECL mongo >=1.5.0) Returns an array of cursors to iterator over a full collection in parallel
MongoCollection::remove (PECL mongo >=0.9.0) Remove records from this collection
MongoCollection::save (PECL mongo >=0.9.0) Saves a document to this collection
MongoCollection::setReadPreference (PECL mongo >=1.3.0) Set the read preference for this collection
MongoCollection::setSlaveOkay (PECL mongo >=1.1.0) Change slaveOkay setting for this collection
MongoCollection::setWriteConcern (PECL mongo >=1.5.0) Set the write concern for this database
MongoCollection::toIndexString (PECL mongo >=0.9.0) Converts keys specifying an index to its identifying string
MongoCollection::update (PECL mongo >=0.9.0) Update records based on a given criteria
MongoCollection::validate (PECL mongo >=0.9.0) Validates this collection
MongoCommandCursor::batchSize (PECL mongo >=1.5.0) Limits the number of elements returned in one batch
MongoCommandCursor::createFromDocument (PECL mongo >=1.5.0) Create a new command cursor from an existing command response document
MongoCommandCursor::current (PECL mongo >=1.5.0) Returns the current element
MongoCommandCursor::dead (PECL mongo >=1.5.0) Checks if there are results that have not yet been sent from the database
MongoCommandCursor::getReadPreference (PECL mongo >=1.6.0) Get the read preference for this command
MongoCommandCursor::info (PECL mongo >=1.5.0) Gets information about the cursor's creation and iteration
MongoCommandCursor::key (PECL mongo >=1.5.0) Returns the current result's index within the result set
MongoCommandCursor::next (PECL mongo >=1.5.0) Advances the cursor to the next result
MongoCommandCursor::rewind (PECL mongo >=1.5.0) Executes the command and resets the cursor to the start of the result set
MongoCommandCursor::setReadPreference (PECL mongo >=1.6.0) Set the read preference for this command
MongoCommandCursor::timeout (PECL mongo >=1.6.0) Sets a client-side timeout for this command
MongoCommandCursor::valid (PECL mongo >=1.5.0) Checks if the cursor is reading a valid result
MongoCursor::addOption (PECL mongo >=1.0.4) Adds a top-level key/value pair to a query
MongoCursor::awaitData (PECL mongo >=1.2.11) Sets whether this cursor will wait for a while for a tailable cursor to return more data
MongoCursor::batchSize (PECL mongo >=1.0.11) Limits the number of elements returned in one batch
MongoCursor::count (PECL mongo >=0.9.2) Counts the number of results for this query
MongoCursor::current (PECL mongo >=0.9.0) Returns the current element
MongoCursor::dead (PECL mongo >=0.9.6) Checks if there are results that have not yet been sent from the database
MongoCursor::doQuery (PECL mongo >=0.9.0 <1.6.0) Execute the query
MongoCursor::explain (PECL mongo >=0.9.2) Return an explanation of the query, often useful for optimization and debugging
MongoCursor::fields (PECL mongo >=1.0.6) Sets the fields for a query
MongoCursor::getNext (PECL mongo >=0.9.0) Advances the cursor to the next result, and returns that result
MongoCursor::getReadPreference (PECL mongo >=1.3.3) Get the read preference for this query
MongoCursor::hasNext (PECL mongo >=0.9.0) Checks if there are any more elements in this cursor
MongoCursor::hint (PECL mongo >=0.9.0) Gives the database a hint about the query
MongoCursor::immortal (PECL mongo >=1.0.1) Sets whether this cursor will timeout
MongoCursor::info (PECL mongo >=1.0.5) Gets information about the cursor's creation and iteration
MongoCursor::key (PECL mongo >=0.9.0) Returns the current result's _id, or its index within the result set
MongoCursor::limit (PECL mongo >=0.9.0) Limits the number of results returned
MongoCursor::maxTimeMS (PECL mongo >=1.5.0) Sets a server-side timeout for this query
MongoCursor::next (PECL mongo >=0.9.0) Advances the cursor to the next result, and returns that result
MongoCursor::partial (PECL mongo >=1.2.0) If this query should fetch partial results from mongos if a shard is down
MongoCursor::reset (PECL mongo >=0.9.0) Clears the cursor
MongoCursor::rewind (PECL mongo >=0.9.0) Returns the cursor to the beginning of the result set
MongoCursor::setFlag (PECL mongo >=1.2.11) Sets arbitrary flags in case there is no method available the specific flag
MongoCursor::setReadPreference (PECL mongo >=1.3.3) Set the read preference for this query
MongoCursor::skip (PECL mongo >=0.9.0) Skips a number of results
MongoCursor::slaveOkay (PECL mongo >=0.9.4) Sets whether this query can be done on a secondary [deprecated]
MongoCursor::snapshot (PECL mongo >=0.9.4) Use snapshot mode for the query
MongoCursor::sort (PECL mongo >=0.9.0) Sorts the results by given fields
MongoCursor::tailable (PECL mongo >=0.9.4) Sets whether this cursor will be left open after fetching the last results
MongoCursor::timeout (PECL mongo >=1.0.3) Sets a client-side timeout for this query
MongoCursor::valid (PECL mongo >=0.9.0) Checks if the cursor is reading a valid result
MongoCursorInterface::batchSize (PECL mongo >=1.5.0) Limits the number of elements returned in one batch
MongoCursorInterface::dead (PECL mongo >=1.5.0) Checks if there are results that have not yet been sent from the database
MongoCursorInterface::getReadPreference (PECL mongo >=1.6.0) Get the read preference for this query
MongoCursorInterface::info (PECL mongo >=1.5.0) Gets information about the cursor's creation and iteration
MongoCursorInterface::setReadPreference (PECL mongo >=1.6.0) Set the read preference for this query
MongoCursorInterface::timeout (PECL mongo >=1.5.0) Sets a client-side timeout for this query
MongoDate::toDateTime (PECL mongo >= 1.6.0) Returns a DateTime object representing this date
MongoDB::authenticate (PECL mongo >=1.0.1) Log in to this database
MongoDB::command (PECL mongo >=0.9.2) Execute a database command
MongoDB::createCollection (PECL mongo >=0.9.0) Creates a collection
MongoDB::createDBRef (PECL mongo >=0.9.0) Creates a database reference
MongoDB::drop (PECL mongo >=0.9.0) Drops this database
MongoDB::dropCollection (PECL mongo >=0.9.0) Drops a collection [deprecated]
MongoDB::execute (PECL mongo >=0.9.3) Runs JavaScript code on the database server [deprecated]
MongoDB::forceError (PECL mongo >=0.9.5) Creates a database error
MongoDB::getCollectionInfo (PECL mongo >=1.6.0) Returns information about collections in this database
MongoDB::getCollectionNames (PECL mongo >=1.3.0) Gets an array of names for all collections in this database
MongoDB::getDBRef (PECL mongo >=0.9.0) Fetches the document pointed to by a database reference
MongoDB::getGridFS (PECL mongo >=0.9.0) Fetches toolkit for dealing with files stored in this database
MongoDB::getProfilingLevel (PECL mongo >=0.9.0) Gets this database's profiling level
MongoDB::getReadPreference (PECL mongo >=1.3.0) Get the read preference for this database
MongoDB::getSlaveOkay (PECL mongo >=1.1.0) Get slaveOkay setting for this database
MongoDB::getWriteConcern (PECL mongo >=1.5.0) Get the write concern for this database
MongoDB::lastError (PECL mongo >=0.9.5) Check if there was an error on the most recent db operation performed
MongoDB::listCollections (PECL mongo >=0.9.0) Gets an array of MongoCollection objects for all collections in this database
MongoDB::prevError (PECL mongo >=0.9.5) Checks for the last error thrown during a database operation
MongoDB::repair (PECL mongo >=0.9.0) Repairs and compacts this database
MongoDB::resetError (PECL mongo >=0.9.5) Clears any flagged errors on the database
MongoDB::selectCollection (PECL mongo >=0.9.0) Gets a collection
MongoDB::setProfilingLevel (PECL mongo >=0.9.0) Sets this database's profiling level
MongoDB::setReadPreference (PECL mongo >=1.3.0) Set the read preference for this database
MongoDB::setSlaveOkay (PECL mongo >=1.1.0) Change slaveOkay setting for this database
MongoDB::setWriteConcern (PECL mongo >=1.5.0) Set the write concern for this database
MongoDBRef::create (PECL mongo >= 0.9.0) Creates a new database reference
MongoDBRef::get (PECL mongo >= 0.9.0) Fetches the object pointed to by a reference
MongoDBRef::isRef (PECL mongo >= 0.9.0) Checks if an array is a database reference
MongoDB\BSON\Binary::getData (mongodb >=1.0.0) Returns the Binary's data
MongoDB\BSON\Binary::getType (mongodb >=1.0.0) Returns the Binary's type
MongoDB\BSON\Binary::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Binary::serialize (mongodb >=1.2.0) Serialize a Binary
MongoDB\BSON\Binary::unserialize (mongodb >=1.2.0) Unserialize a Binary
MongoDB\BSON\BinaryInterface::getData (mongodb >=1.3.0) Returns the BinaryInterface's data
MongoDB\BSON\BinaryInterface::getType (mongodb >=1.3.0) Returns the BinaryInterface's type
MongoDB\BSON\DBPointer::jsonSerialize (mongodb >=1.4.0) Returns a representation that can be converted to JSON
MongoDB\BSON\DBPointer::serialize (mongodb >=1.4.0) Serialize a DBPointer
MongoDB\BSON\DBPointer::unserialize (mongodb >=1.4.0) Unserialize a DBPointer
MongoDB\BSON\Decimal128::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Decimal128::serialize (mongodb >=1.2.0) Serialize a Decimal128
MongoDB\BSON\Decimal128::unserialize (mongodb >=1.2.0) Unserialize a Decimal128
MongoDB\BSON\Int64::jsonSerialize (mongodb >=1.5.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Int64::serialize (mongodb >=1.5.0) Serialize an Int64
MongoDB\BSON\Int64::unserialize (mongodb >=1.5.0) Unserialize an Int64
MongoDB\BSON\Javascript::getCode (mongodb >=1.2.0) Returns the Javascript's code
MongoDB\BSON\Javascript::getScope (mongodb >=1.2.0) Returns the Javascript's scope document
MongoDB\BSON\Javascript::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Javascript::serialize (mongodb >=1.2.0) Serialize a Javascript
MongoDB\BSON\Javascript::unserialize (mongodb >=1.2.0) Unserialize a Javascript
MongoDB\BSON\JavascriptInterface::getCode (mongodb >=1.3.0) Returns the JavascriptInterface's code
MongoDB\BSON\JavascriptInterface::getScope (mongodb >=1.3.0) Returns the JavascriptInterface's scope document
MongoDB\BSON\MaxKey::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\MaxKey::serialize (mongodb >=1.2.0) Serialize a MaxKey
MongoDB\BSON\MaxKey::unserialize (mongodb >=1.2.0) Unserialize a MaxKey
MongoDB\BSON\MinKey::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\MinKey::serialize (mongodb >=1.2.0) Serialize a MinKey
MongoDB\BSON\MinKey::unserialize (mongodb >=1.2.0) Unserialize a MinKey
MongoDB\BSON\ObjectId::getTimestamp (mongodb >=1.2.0) Returns the timestamp component of this ObjectId
MongoDB\BSON\ObjectId::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\ObjectId::serialize (mongodb >=1.2.0) Serialize an ObjectId
MongoDB\BSON\ObjectId::unserialize (mongodb >=1.2.0) Unserialize an ObjectId
MongoDB\BSON\ObjectIdInterface::getTimestamp (mongodb >=1.3.0) Returns the timestamp component of this ObjectIdInterface
MongoDB\BSON\Regex::getFlags (mongodb >=1.0.0) Returns the Regex's flags
MongoDB\BSON\Regex::getPattern (mongodb >=1.0.0) Returns the Regex's pattern
MongoDB\BSON\Regex::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Regex::serialize (mongodb >=1.2.0) Serialize a Regex
MongoDB\BSON\Regex::unserialize (mongodb >=1.2.0) Unserialize a Regex
MongoDB\BSON\RegexInterface::getFlags (mongodb >=1.3.0) Returns the RegexInterface's flags
MongoDB\BSON\RegexInterface::getPattern (mongodb >=1.3.0) Returns the RegexInterface's pattern
MongoDB\BSON\Serializable::bsonSerialize (mongodb >=1.0.0) Provides an array or document to serialize as BSON
MongoDB\BSON\Symbol::jsonSerialize (mongodb >=1.4.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Symbol::serialize (mongodb >=1.4.0) Serialize a Symbol
MongoDB\BSON\Symbol::unserialize (mongodb >=1.4.0) Unserialize a Symbol
MongoDB\BSON\Timestamp::getIncrement (mongodb >=1.3.0) Returns the increment component of this Timestamp
MongoDB\BSON\Timestamp::getTimestamp (mongodb >=1.3.0) Returns the timestamp component of this Timestamp
MongoDB\BSON\Timestamp::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Timestamp::serialize (mongodb >=1.2.0) Serialize a Timestamp
MongoDB\BSON\Timestamp::unserialize (mongodb >=1.2.0) Unserialize a Timestamp
MongoDB\BSON\TimestampInterface::getIncrement (mongodb >=1.3.0) Returns the increment component of this TimestampInterface
MongoDB\BSON\TimestampInterface::getTimestamp (mongodb >=1.3.0) Returns the timestamp component of this TimestampInterface
MongoDB\BSON\Undefined::jsonSerialize (mongodb >=1.4.0) Returns a representation that can be converted to JSON
MongoDB\BSON\Undefined::serialize (mongodb >=1.4.0) Serialize a Undefined
MongoDB\BSON\Undefined::unserialize (mongodb >=1.4.0) Unserialize a Undefined
MongoDB\BSON\Unserializable::bsonUnserialize (mongodb >=1.0.0) Constructs the object from a BSON array or document
MongoDB\BSON\UTCDateTime::jsonSerialize (mongodb >=1.2.0) Returns a representation that can be converted to JSON
MongoDB\BSON\UTCDateTime::serialize (mongodb >=1.2.0) Serialize a UTCDateTime
MongoDB\BSON\UTCDateTime::toDateTime (mongodb >=1.0.0) Returns the DateTime representation of this UTCDateTime
MongoDB\BSON\UTCDateTime::unserialize (mongodb >=1.2.0) Unserialize a UTCDateTime
MongoDB\BSON\UTCDateTimeInterface::toDateTime (mongodb >=1.3.0) Returns the DateTime representation of this UTCDateTimeInterface
MongoDB\Driver\BulkWrite::count (mongodb >=1.0.0) Count number of write operations in the bulk
MongoDB\Driver\BulkWrite::delete (mongodb >=1.0.0) Add a delete operation to the bulk
MongoDB\Driver\BulkWrite::insert (mongodb >=1.0.0) Add an insert operation to the bulk
MongoDB\Driver\BulkWrite::update (mongodb >=1.0.0) Add an update operation to the bulk
MongoDB\Driver\Cursor::getId (mongodb >=1.0.0) Returns the ID for this cursor
MongoDB\Driver\Cursor::getServer (mongodb >=1.0.0) Returns the server associated with this cursor
MongoDB\Driver\Cursor::isDead (mongodb >=1.0.0) Checks if the cursor may have additional results
MongoDB\Driver\Cursor::setTypeMap (mongodb >=1.0.0) Sets a type map to use for BSON unserialization
MongoDB\Driver\Cursor::toArray (mongodb >=1.0.0) Returns an array containing all results for this cursor
MongoDB\Driver\Manager::executeBulkWrite (mongodb >=1.0.0) Execute one or more write operations
MongoDB\Driver\Manager::executeCommand (mongodb >=1.0.0) Execute a database command
MongoDB\Driver\Manager::executeQuery (mongodb >=1.0.0) Execute a database query
MongoDB\Driver\Manager::executeReadCommand (mongodb >=1.4.0) Execute a database command that reads
MongoDB\Driver\Manager::executeReadWriteCommand (mongodb >=1.4.0) Execute a database command that reads and writes
MongoDB\Driver\Manager::executeWriteCommand (mongodb >=1.4.0) Execute a database command that writes
MongoDB\Driver\Manager::getReadConcern (mongodb >=1.1.0) Return the ReadConcern for the Manager
MongoDB\Driver\Manager::getReadPreference (mongodb >=1.0.0) Return the ReadPreference for the Manager
MongoDB\Driver\Manager::getServers (mongodb >=1.0.0) Return the servers to which this manager is connected
MongoDB\Driver\Manager::getWriteConcern (mongodb >=1.0.0) Return the WriteConcern for the Manager
MongoDB\Driver\Manager::selectServer (mongodb >=1.0.0) Select a server matching a read preference
MongoDB\Driver\Manager::startSession (mongodb >=1.4.0) Start a new client session for use with this client
MongoDB\Driver\Monitoring\CommandFailedEvent::getCommandName (mongodb >=1.3.0) Returns the command name
MongoDB\Driver\Monitoring\CommandFailedEvent::getDurationMicros (mongodb >=1.3.0) Returns the command's duration in microseconds
MongoDB\Driver\Monitoring\CommandFailedEvent::getError (mongodb >=1.3.0) Returns the Exception associated with the failed command
MongoDB\Driver\Monitoring\CommandFailedEvent::getOperationId (mongodb >=1.3.0) Returns the command's operation ID
MongoDB\Driver\Monitoring\CommandFailedEvent::getReply (mongodb >=1.5.0) Returns the command reply document
MongoDB\Driver\Monitoring\CommandFailedEvent::getRequestId (mongodb >=1.3.0) Returns the command's request ID
MongoDB\Driver\Monitoring\CommandFailedEvent::getServer (mongodb >=1.3.0) Returns the Server on which the command was executed
MongoDB\Driver\Monitoring\CommandStartedEvent::getCommand (mongodb >=1.3.0) Returns the command document
MongoDB\Driver\Monitoring\CommandStartedEvent::getCommandName (mongodb >=1.3.0) Returns the command name
MongoDB\Driver\Monitoring\CommandStartedEvent::getDatabaseName (mongodb >=1.3.0) Returns the database on which the command was executed
MongoDB\Driver\Monitoring\CommandStartedEvent::getOperationId (mongodb >=1.3.0) Returns the command's operation ID
MongoDB\Driver\Monitoring\CommandStartedEvent::getRequestId (mongodb >=1.3.0) Returns the command's request ID
MongoDB\Driver\Monitoring\CommandStartedEvent::getServer (mongodb >=1.3.0) Returns the Server on which the command was executed
MongoDB\Driver\Monitoring\CommandSubscriber::commandFailed (mongodb >=1.3.0) Notification method for a failed command
MongoDB\Driver\Monitoring\CommandSubscriber::commandStarted (mongodb >=1.3.0) Notification method for a started command
MongoDB\Driver\Monitoring\CommandSubscriber::commandSucceeded (mongodb >=1.3.0) Notification method for a successful command
MongoDB\Driver\Monitoring\CommandSucceededEvent::getCommandName (mongodb >=1.3.0) Returns the command name
MongoDB\Driver\Monitoring\CommandSucceededEvent::getDurationMicros (mongodb >=1.3.0) Returns the command's duration in microseconds
MongoDB\Driver\Monitoring\CommandSucceededEvent::getOperationId (mongodb >=1.3.0) Returns the command's operation ID
MongoDB\Driver\Monitoring\CommandSucceededEvent::getReply (mongodb >=1.3.0) Returns the command reply document
MongoDB\Driver\Monitoring\CommandSucceededEvent::getRequestId (mongodb >=1.3.0) Returns the command's request ID
MongoDB\Driver\Monitoring\CommandSucceededEvent::getServer (mongodb >=1.3.0) Returns the Server on which the command was executed
MongoDB\Driver\ReadConcern::bsonSerialize (mongodb >=1.2.0) Returns an object for BSON serialization
MongoDB\Driver\ReadConcern::getLevel (mongodb >=1.0.0) Returns the ReadConcern's "level" option
MongoDB\Driver\ReadConcern::isDefault (mongodb >=1.3.0) Checks if this is the default read concern
MongoDB\Driver\ReadPreference::bsonSerialize (mongodb >=1.2.0) Returns an object for BSON serialization
MongoDB\Driver\ReadPreference::getMaxStalenessSeconds (mongodb >=1.2.0) Returns the ReadPreference's "maxStalenessSeconds" option
MongoDB\Driver\ReadPreference::getMode (mongodb >=1.0.0) Returns the ReadPreference's "mode" option
MongoDB\Driver\ReadPreference::getTagSets (mongodb >=1.0.0) Returns the ReadPreference's "tagSets" option
MongoDB\Driver\Server::executeBulkWrite (mongodb >=1.0.0) Execute one or more write operations on this server
MongoDB\Driver\Server::executeCommand (mongodb >=1.0.0) Execute a database command on this server
MongoDB\Driver\Server::executeQuery (mongodb >=1.0.0) Execute a database query on this server
MongoDB\Driver\Server::executeReadCommand (mongodb >=1.4.0) Execute a database command that reads on this server
MongoDB\Driver\Server::executeReadWriteCommand (mongodb >=1.4.0) Execute a database command that reads and writes on this server
MongoDB\Driver\Server::executeWriteCommand (mongodb >=1.4.0) Execute a database command that writes on this server
MongoDB\Driver\Server::getHost (mongodb >=1.0.0) Returns the hostname of this server
MongoDB\Driver\Server::getInfo (mongodb >=1.0.0) Returns an array of information about this server
MongoDB\Driver\Server::getLatency (mongodb >=1.0.0) Returns the latency of this server
MongoDB\Driver\Server::getPort (mongodb >=1.0.0) Returns the port on which this server is listening
MongoDB\Driver\Server::getTags (mongodb >=1.0.0) Returns an array of tags describing this server in a replica set
MongoDB\Driver\Server::getType (mongodb >=1.0.0) Returns an integer denoting the type of this server
MongoDB\Driver\Server::isArbiter (mongodb >=1.0.0) Checks if this server is an arbiter member of a replica set
MongoDB\Driver\Server::isHidden (mongodb >=1.0.0) Checks if this server is a hidden member of a replica set
MongoDB\Driver\Server::isPassive (mongodb >=1.0.0) Checks if this server is a passive member of a replica set
MongoDB\Driver\Server::isPrimary (mongodb >=1.0.0) Checks if this server is a primary member of a replica set
MongoDB\Driver\Server::isSecondary (mongodb >=1.0.0) Checks if this server is a secondary member of a replica set
MongoDB\Driver\Session::abortTransaction (mongodb >=1.5.0) Aborts a transaction
MongoDB\Driver\Session::advanceClusterTime (mongodb >=1.4.0) Advances the cluster time for this session
MongoDB\Driver\Session::advanceOperationTime (mongodb >=1.4.0) Advances the operation time for this session
MongoDB\Driver\Session::commitTransaction (mongodb >=1.5.0) Commits a transaction
MongoDB\Driver\Session::endSession (mongodb >=1.5.0) Terminates a session
MongoDB\Driver\Session::getClusterTime (mongodb >=1.4.0) Returns the cluster time for this session
MongoDB\Driver\Session::getLogicalSessionId (mongodb >=1.4.0) Returns the logical session ID for this session
MongoDB\Driver\Session::getOperationTime (mongodb >=1.4.0) Returns the operation time for this session
MongoDB\Driver\Session::startTransaction (mongodb >=1.5.0) Starts a transaction
MongoDB\Driver\WriteConcern::bsonSerialize (mongodb >=1.2.0) Returns an object for BSON serialization
MongoDB\Driver\WriteConcern::getJournal (mongodb >=1.0.0) Returns the WriteConcern's "journal" option
MongoDB\Driver\WriteConcern::getW (mongodb >=1.0.0) Returns the WriteConcern's "w" option
MongoDB\Driver\WriteConcern::getWtimeout (mongodb >=1.0.0) Returns the WriteConcern's "wtimeout" option
MongoDB\Driver\WriteConcern::isDefault (mongodb >=1.3.0) Checks if this is the default write concern
MongoDB\Driver\WriteConcernError::getCode (mongodb >=1.0.0) Returns the WriteConcernError's error code
MongoDB\Driver\WriteConcernError::getInfo (mongodb >=1.0.0) Returns additional metadata for the WriteConcernError
MongoDB\Driver\WriteConcernError::getMessage (mongodb >=1.0.0) Returns the WriteConcernError's error message
MongoDB\Driver\WriteError::getCode (mongodb >=1.0.0) Returns the WriteError's error code
MongoDB\Driver\WriteError::getIndex (mongodb >=1.0.0) Returns the index of the write operation corresponding to this WriteError
MongoDB\Driver\WriteError::getInfo (mongodb >=1.0.0) Returns additional metadata for the WriteError
MongoDB\Driver\WriteError::getMessage (mongodb >=1.0.0) Returns the WriteError's error message
MongoDB\Driver\WriteResult::getDeletedCount (mongodb >=1.0.0) Returns the number of documents deleted
MongoDB\Driver\WriteResult::getInsertedCount (mongodb >=1.0.0) Returns the number of documents inserted (excluding upserts)
MongoDB\Driver\WriteResult::getMatchedCount (mongodb >=1.0.0) Returns the number of documents selected for update
MongoDB\Driver\WriteResult::getModifiedCount (mongodb >=1.0.0) Returns the number of existing documents updated
MongoDB\Driver\WriteResult::getServer (mongodb >=1.0.0) Returns the server associated with this write result
MongoDB\Driver\WriteResult::getUpsertedCount (mongodb >=1.0.0) Returns the number of documents inserted by an upsert
MongoDB\Driver\WriteResult::getUpsertedIds (mongodb >=1.0.0) Returns an array of identifiers for upserted documents
MongoDB\Driver\WriteResult::getWriteConcernError (mongodb >=1.0.0) Returns any write concern error that occurred
MongoDB\Driver\WriteResult::getWriteErrors (mongodb >=1.0.0) Returns any write errors that occurred
MongoDB\Driver\WriteResult::isAcknowledged (mongodb >=1.0.0) Returns whether the write was acknowledged
MongoGridFS::delete (PECL mongo >=1.0.8) Remove a file and its chunks from the database
MongoGridFS::drop (PECL mongo >=0.9.0) Drops the files and chunks collections
MongoGridFS::find (PECL mongo >=0.9.0) Queries for files
MongoGridFS::findOne (PECL mongo >=0.9.0) Returns a single file matching the criteria
MongoGridFS::get (PECL mongo >=1.0.8) Retrieve a file from the database
MongoGridFS::put (PECL mongo >=1.0.8) Stores a file in the database
MongoGridFS::remove (PECL mongo >=0.9.0) Remove files and their chunks from the database
MongoGridFS::storeBytes (PECL mongo >=0.9.2) Stores a string of bytes in the database
MongoGridFS::storeFile (PECL mongo >=0.9.0) Stores a file in the database
MongoGridFS::storeUpload (PECL mongo >=0.9.0) Stores an uploaded file in the database
MongoGridFSCursor::current (PECL mongo >=0.9.0) Returns the current file
MongoGridFSCursor::getNext (PECL mongo >=0.9.0) Return the next file to which this cursor points, and advance the cursor
MongoGridFSCursor::key (PECL mongo >=0.9.0) Returns the current result's filename
MongoGridFSFile::getBytes (PECL mongo >=0.9.0) Returns this file's contents as a string of bytes
MongoGridFSFile::getFilename (PECL mongo >=0.9.0) Returns this file's filename
MongoGridFSFile::getResource (PECL mongo >=1.3.0) Returns a resource that can be used to read the stored file
MongoGridFSFile::getSize (PECL mongo >=0.9.0) Returns this file's size
MongoGridFSFile::write (PECL mongo >=0.9.0) Writes this file to the filesystem
MongoId::getHostname (PECL mongo >= 1.0.8) Gets the hostname being used for this machine's ids
MongoId::getInc (PECL mongo >= 1.0.11) Gets the incremented value to create this id
MongoId::getPID (PECL mongo >= 1.0.11) Gets the process ID
MongoId::getTimestamp (PECL mongo >= 1.0.1) Gets the number of seconds since the epoch that this id was created
MongoId::isValid (PECL mongo >= 1.5.0) Check if a value is a valid ObjectId
MongoLog::getCallback (PECL mongo >= 1.3.0) Gets the previously set callback function
MongoLog::getLevel (PECL mongo >= 1.2.3) Gets the level(s) currently being logged
MongoLog::getModule (PECL mongo >= 1.2.3) Gets the module(s) currently being logged
MongoLog::setCallback (PECL mongo >= 1.3.0) Sets a callback function to be invoked for events
MongoLog::setLevel (PECL mongo >= 1.2.3) Sets the level(s) to be logged
MongoLog::setModule (PECL mongo >= 1.2.3) Sets the module(s) to be logged
MongoPool::getSize (PECL mongo >= 1.2.3) Get pool size for connection pools
MongoPool::info (PECL mongo >= 1.2.3) Returns information about all connection pools
MongoPool::setSize (PECL mongo >= 1.2.3) Set the size for future connection pools
MongoResultException::getDocument (PECL mongo >=1.3.0) Retrieve the full result document
MongoWriteBatch::add (PECL mongo >= 1.5.0) Adds a write operation to a batch
MongoWriteBatch::execute (PECL mongo >= 1.5.0) Executes a batch of write operations
MongoWriteConcernException::getDocument (PECL mongo >= 1.5.0) Get the error document
MultipleIterator::attachIterator (PHP 5 >= 5.3.0, PHP 7) Attaches iterator information
MultipleIterator::containsIterator (PHP 5 >= 5.3.0, PHP 7) Checks if an iterator is attached
MultipleIterator::countIterators (PHP 5 >= 5.3.0, PHP 7) Gets the number of attached iterator instances
MultipleIterator::current (PHP 5 >= 5.3.0, PHP 7) Gets the registered iterator instances
MultipleIterator::detachIterator (PHP 5 >= 5.3.0, PHP 7) Detaches an iterator
MultipleIterator::getFlags (PHP 5 >= 5.3.0, PHP 7) Gets the flag information
MultipleIterator::key (PHP 5 >= 5.3.0, PHP 7) Gets the registered iterator instances
MultipleIterator::next (PHP 5 >= 5.3.0, PHP 7) Moves all attached iterator instances forward
MultipleIterator::rewind (PHP 5 >= 5.3.0, PHP 7) Rewinds all attached iterator instances
MultipleIterator::setFlags (PHP 5 >= 5.3.0, PHP 7) Sets flags
MultipleIterator::valid (PHP 5 >= 5.3.0, PHP 7) Checks the validity of sub iterators
Mutex::create (PECL pthreads < 3.0.0) Create a Mutex
Mutex::destroy (PECL pthreads < 3.0.0) Destroy Mutex
Mutex::lock (PECL pthreads < 3.0.0) Acquire Mutex
Mutex::trylock (PECL pthreads < 3.0.0) Attempt to Acquire Mutex
Mutex::unlock (PECL pthreads < 3.0.0) Release Mutex
mysqli::autocommit (PHP 5, PHP 7) Turns on or off auto-committing database modifications
mysqli::close (PHP 5, PHP 7) Closes a previously opened database connection
mysqli::commit (PHP 5, PHP 7) Commits the current transaction
mysqli::debug (PHP 5, PHP 7) Performs debugging operations
mysqli::init (PHP 5, PHP 7) Initializes MySQLi and returns a resource for use with mysqli_real_connect()
mysqli::kill (PHP 5, PHP 7) Asks the server to kill a MySQL thread
mysqli::options (PHP 5, PHP 7) Set options
mysqli::ping (PHP 5, PHP 7) Pings a server connection, or tries to reconnect if the connection has gone down
mysqli::poll (PHP 5 >= 5.3.0, PHP 7) Poll connections
mysqli::prepare (PHP 5, PHP 7) Prepare an SQL statement for execution
mysqli::query (PHP 5, PHP 7) Performs a query on the database
mysqli::refresh (PHP 5 >= 5.3.0, PHP 7) Refreshes
mysqli::rollback (PHP 5, PHP 7) Rolls back current transaction
mysqli::stat (PHP 5, PHP 7) Gets the current system status
mysqli_result::free (PHP 5, PHP 7) Frees the memory associated with a result
mysqli_stmt::close (PHP 5, PHP 7) Closes a prepared statement
mysqli_stmt::execute (PHP 5, PHP 7) Executes a prepared Query
mysqli_stmt::fetch (PHP 5, PHP 7) Fetch results from a prepared statement into the bound variables
mysqli_stmt::prepare (PHP 5, PHP 7) Prepare an SQL statement for execution
mysqli_stmt::reset (PHP 5, PHP 7) Resets a prepared statement
mysqli_warning::next (PHP 5, PHP 7) The next purpose
MysqlndUhConnection::changeUser (PECL mysqlnd-uh >= 1.0.0-alpha) Changes the user of the specified mysqlnd database connection
MysqlndUhConnection::charsetName (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the default character set for the database connection
MysqlndUhConnection::close (PECL mysqlnd-uh >= 1.0.0-alpha) Closes a previously opened database connection
MysqlndUhConnection::connect (PECL mysqlnd-uh >= 1.0.0-alpha) Open a new connection to the MySQL server
MysqlndUhConnection::endPSession (PECL mysqlnd-uh >= 1.0.0-alpha) End a persistent connection
MysqlndUhConnection::escapeString (PECL mysqlnd-uh >= 1.0.0-alpha) Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection
MysqlndUhConnection::getAffectedRows (PECL mysqlnd-uh >= 1.0.0-alpha) Gets the number of affected rows in a previous MySQL operation
MysqlndUhConnection::getErrorNumber (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the error code for the most recent function call
MysqlndUhConnection::getErrorString (PECL mysqlnd-uh >= 1.0.0-alpha) Returns a string description of the last error
MysqlndUhConnection::getFieldCount (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the number of columns for the most recent query
MysqlndUhConnection::getHostInformation (PECL mysqlnd-uh >= 1.0.0-alpha) Returns a string representing the type of connection used
MysqlndUhConnection::getLastInsertId (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the auto generated id used in the last query
MysqlndUhConnection::getLastMessage (PECL mysqlnd-uh >= 1.0.0-alpha) Retrieves information about the most recently executed query
MysqlndUhConnection::getProtocolInformation (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the version of the MySQL protocol used
MysqlndUhConnection::getServerInformation (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the version of the MySQL server
MysqlndUhConnection::getServerStatistics (PECL mysqlnd-uh >= 1.0.0-alpha) Gets the current system status
MysqlndUhConnection::getServerVersion (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the version of the MySQL server as an integer
MysqlndUhConnection::getSqlstate (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the SQLSTATE error from previous MySQL operation
MysqlndUhConnection::getStatistics (PECL mysqlnd-uh >= 1.0.0-alpha) Returns statistics about the client connection
MysqlndUhConnection::getThreadId (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the thread ID for the current connection
MysqlndUhConnection::getWarningCount (PECL mysqlnd-uh >= 1.0.0-alpha) Returns the number of warnings from the last query for the given link
MysqlndUhConnection::init (PECL mysqlnd-uh >= 1.0.0-alpha) Initialize mysqlnd connection
MysqlndUhConnection::killConnection (PECL mysqlnd-uh >= 1.0.0-alpha) Asks the server to kill a MySQL thread
MysqlndUhConnection::listFields (PECL mysqlnd-uh >= 1.0.0-alpha) List MySQL table fields
MysqlndUhConnection::listMethod (PECL mysqlnd-uh >= 1.0.0-alpha) Wrapper for assorted list commands
MysqlndUhConnection::moreResults (PECL mysqlnd-uh >= 1.0.0-alpha) Check if there are any more query results from a multi query
MysqlndUhConnection::nextResult (PECL mysqlnd-uh >= 1.0.0-alpha) Prepare next result from multi_query
MysqlndUhConnection::ping (PECL mysqlnd-uh >= 1.0.0-alpha) Pings a server connection, or tries to reconnect if the connection has gone down
MysqlndUhConnection::query (PECL mysqlnd-uh >= 1.0.0-alpha) Performs a query on the database
MysqlndUhConnection::queryReadResultsetHeader (PECL mysqlnd-uh >= 1.0.0-alpha) Read a result set header
MysqlndUhConnection::reapQuery (PECL mysqlnd-uh >= 1.0.0-alpha) Get result from async query
MysqlndUhConnection::refreshServer (PECL mysqlnd-uh >= 1.0.0-alpha) Flush or reset tables and caches
MysqlndUhConnection::restartPSession (PECL mysqlnd-uh >= 1.0.0-alpha) Restart a persistent mysqlnd connection
MysqlndUhConnection::selectDb (PECL mysqlnd-uh >= 1.0.0-alpha) Selects the default database for database queries
MysqlndUhConnection::sendClose (PECL mysqlnd-uh >= 1.0.0-alpha) Sends a close command to MySQL
MysqlndUhConnection::sendQuery (PECL mysqlnd-uh >= 1.0.0-alpha) Sends a query to MySQL
MysqlndUhConnection::serverDumpDebugInformation (PECL mysqlnd-uh >= 1.0.0-alpha) Dump debugging information into the log for the MySQL server
MysqlndUhConnection::setAutocommit (PECL mysqlnd-uh >= 1.0.1-alpha) Turns on or off auto-committing database modifications
MysqlndUhConnection::setCharset (PECL mysqlnd-uh >= 1.0.0-alpha) Sets the default client character set
MysqlndUhConnection::setClientOption (PECL mysqlnd-uh >= 1.0.0-alpha) Sets a client option
MysqlndUhConnection::setServerOption (PECL mysqlnd-uh >= 1.0.0-alpha) Sets a server option
MysqlndUhConnection::shutdownServer (PECL mysqlnd-uh >= 1.0.0-alpha) The shutdownServer purpose
MysqlndUhConnection::simpleCommand (PECL mysqlnd-uh >= 1.0.0-alpha) Sends a basic COM_* command
MysqlndUhConnection::simpleCommandHandleResponse (PECL mysqlnd-uh >= 1.0.0-alpha) Process a response for a basic COM_* command send to the client
MysqlndUhConnection::sslSet (PECL mysqlnd-uh >= 1.0.0-alpha) Used for establishing secure connections using SSL
MysqlndUhConnection::stmtInit (PECL mysqlnd-uh >= 1.0.0-alpha) Initializes a statement and returns a resource for use with mysqli_statement::prepare
MysqlndUhConnection::storeResult (PECL mysqlnd-uh >= 1.0.0-alpha) Transfers a result set from the last query
MysqlndUhConnection::txCommit (PECL mysqlnd-uh >= 1.0.1-alpha) Commits the current transaction
MysqlndUhConnection::txRollback (PECL mysqlnd-uh >= 1.0.1-alpha) Rolls back current transaction
MysqlndUhConnection::useResult (PECL mysqlnd-uh >= 1.0.0-alpha) Initiate a result set retrieval
MysqlndUhPreparedStatement::execute (PECL mysqlnd-uh >= 1.0.0-alpha) Executes a prepared Query
MysqlndUhPreparedStatement::prepare (PECL mysqlnd-uh >= 1.0.0-alpha) Prepare an SQL statement for execution
mysql_xdevapi\BaseResult::getWarnings (No version information available, might only be in Git) Fetch warnings from last operation
mysql_xdevapi\BaseResult::getWarningsCount (No version information available, might only be in Git) Fetch warning count from last operation
mysql_xdevapi\Collection::add (No version information available, might only be in Git) Add collection document
mysql_xdevapi\Collection::addOrReplaceOne (No version information available, might only be in Git) Add or replace collection document
mysql_xdevapi\Collection::count (No version information available, might only be in Git) Get document count
mysql_xdevapi\Collection::createIndex (No version information available, might only be in Git) Create collection index
mysql_xdevapi\Collection::dropIndex (No version information available, might only be in Git) Drop collection index
mysql_xdevapi\Collection::existsInDatabase (No version information available, might only be in Git) Check if collection exists in database
mysql_xdevapi\Collection::find (No version information available, might only be in Git) Search for document
mysql_xdevapi\Collection::getName (No version information available, might only be in Git) Get collection name
mysql_xdevapi\Collection::getOne (No version information available, might only be in Git) Get one document
mysql_xdevapi\Collection::getSchema (No version information available, might only be in Git) Get schema object
mysql_xdevapi\Collection::getSession (No version information available, might only be in Git) Get session object
mysql_xdevapi\Collection::modify (No version information available, might only be in Git) Modify collection documents
mysql_xdevapi\Collection::remove (No version information available, might only be in Git) Remove collection documents
mysql_xdevapi\Collection::removeOne (No version information available, might only be in Git) Remove one collection document
mysql_xdevapi\Collection::replaceOne (No version information available, might only be in Git) Replace one collection document
mysql_xdevapi\CollectionAdd::execute (No version information available, might only be in Git) Execute the statement
mysql_xdevapi\CollectionFind::bind (No version information available, might only be in Git) Bind value to query placeholder
mysql_xdevapi\CollectionFind::execute (No version information available, might only be in Git) Execute the statement
mysql_xdevapi\CollectionFind::fields (No version information available, might only be in Git) Set document field filter
mysql_xdevapi\CollectionFind::groupBy (No version information available, might only be in Git) Set grouping criteria
mysql_xdevapi\CollectionFind::having (No version information available, might only be in Git) Set condition for aggregate functions
mysql_xdevapi\CollectionFind::limit (No version information available, might only be in Git) Limit number of returned documents
mysql_xdevapi\CollectionFind::lockExclusive (No version information available, might only be in Git) Execute operation with EXCLUSIVE LOCK
mysql_xdevapi\CollectionFind::lockShared (No version information available, might only be in Git) Execute operation with SHARED LOCK
mysql_xdevapi\CollectionFind::offset (No version information available, might only be in Git) Skip given number of elements to be returned
mysql_xdevapi\CollectionFind::sort (No version information available, might only be in Git) Set the sorting criteria
mysql_xdevapi\CollectionModify::arrayAppend (No version information available, might only be in Git) Append element to an array field
mysql_xdevapi\CollectionModify::arrayInsert (No version information available, might only be in Git) Insert element into an array field
mysql_xdevapi\CollectionModify::bind (No version information available, might only be in Git) Bind value to query placeholder
mysql_xdevapi\CollectionModify::execute (No version information available, might only be in Git) Execute modify operation
mysql_xdevapi\CollectionModify::limit (No version information available, might only be in Git) Limit number of modified documents
mysql_xdevapi\CollectionModify::patch (No version information available, might only be in Git) Patch document
mysql_xdevapi\CollectionModify::replace (No version information available, might only be in Git) Replace document field
mysql_xdevapi\CollectionModify::set (No version information available, might only be in Git) Set document attribute
mysql_xdevapi\CollectionModify::skip (No version information available, might only be in Git) Skip elements
mysql_xdevapi\CollectionModify::sort (No version information available, might only be in Git) Set the sorting criteria
mysql_xdevapi\CollectionModify::unset (No version information available, might only be in Git) Unset the value of document fields
mysql_xdevapi\CollectionRemove::bind (No version information available, might only be in Git) Bind value to placeholder
mysql_xdevapi\CollectionRemove::execute (No version information available, might only be in Git) Execute remove operation
mysql_xdevapi\CollectionRemove::limit (No version information available, might only be in Git) Limit number of documents to remove
mysql_xdevapi\CollectionRemove::sort (No version information available, might only be in Git) Set the sorting criteria
mysql_xdevapi\ColumnResult::getCharacterSetName (No version information available, might only be in Git) Get character set
mysql_xdevapi\ColumnResult::getCollationName (No version information available, might only be in Git) Get collation name
mysql_xdevapi\ColumnResult::getColumnLabel (No version information available, might only be in Git) Get column label
mysql_xdevapi\ColumnResult::getColumnName (No version information available, might only be in Git) Get column name
mysql_xdevapi\ColumnResult::getFractionalDigits (No version information available, might only be in Git) Get fractional digit length
mysql_xdevapi\ColumnResult::getLength (No version information available, might only be in Git) Get column field length
mysql_xdevapi\ColumnResult::getSchemaName (No version information available, might only be in Git) Get schema name
mysql_xdevapi\ColumnResult::getTableLabel (No version information available, might only be in Git) Get table label
mysql_xdevapi\ColumnResult::getTableName (No version information available, might only be in Git) Get table name
mysql_xdevapi\ColumnResult::getType (No version information available, might only be in Git) Get column type
mysql_xdevapi\ColumnResult::isNumberSigned (No version information available, might only be in Git) Check if signed type
mysql_xdevapi\ColumnResult::isPadded (No version information available, might only be in Git) Check if padded
mysql_xdevapi\CrudOperationBindable::bind (No version information available, might only be in Git) Bind value to placeholder
mysql_xdevapi\CrudOperationLimitable::limit (No version information available, might only be in Git) Set result limit
mysql_xdevapi\CrudOperationSkippable::skip (No version information available, might only be in Git) Number of operations to skip
mysql_xdevapi\CrudOperationSortable::sort (No version information available, might only be in Git) Sort results
mysql_xdevapi\DatabaseObject::existsInDatabase (No version information available, might only be in Git) Check if object exists in database
mysql_xdevapi\DatabaseObject::getName (No version information available, might only be in Git) Get object name
mysql_xdevapi\DatabaseObject::getSession (No version information available, might only be in Git) Get session name
mysql_xdevapi\DocResult::fetchAll (No version information available, might only be in Git) Get all rows
mysql_xdevapi\DocResult::fetchOne (No version information available, might only be in Git) Get one row
mysql_xdevapi\DocResult::getWarnings (No version information available, might only be in Git) Get warnings from last operation
mysql_xdevapi\DocResult::getWarningsCount (No version information available, might only be in Git) Get warning count from last operation
mysql_xdevapi\Executable::execute (No version information available, might only be in Git) Execute statement
mysql_xdevapi\Result::getAutoIncrementValue (No version information available, might only be in Git) Get autoincremented value
mysql_xdevapi\Result::getGeneratedIds (No version information available, might only be in Git) Get generated ids
mysql_xdevapi\Result::getWarnings (No version information available, might only be in Git) Get warnings from last operation
mysql_xdevapi\Result::getWarningsCount (No version information available, might only be in Git) Get warning count from last operation
mysql_xdevapi\RowResult::fetchAll (No version information available, might only be in Git) Get all rows from result
mysql_xdevapi\RowResult::fetchOne (No version information available, might only be in Git) Get row from result
mysql_xdevapi\RowResult::getColumnCount (No version information available, might only be in Git) Get column count
mysql_xdevapi\RowResult::getColumnNames (No version information available, might only be in Git) Get all column names
mysql_xdevapi\RowResult::getColumns (No version information available, might only be in Git) Get column metadata
mysql_xdevapi\RowResult::getWarnings (No version information available, might only be in Git) Get warnings from last operation
mysql_xdevapi\RowResult::getWarningsCount (No version information available, might only be in Git) Get warning count from last operation
mysql_xdevapi\Schema::createCollection (No version information available, might only be in Git) Add collection to schema
mysql_xdevapi\Schema::dropCollection (No version information available, might only be in Git) Drop collection from schema
mysql_xdevapi\Schema::existsInDatabase (No version information available, might only be in Git) Check if exists in database
mysql_xdevapi\Schema::getCollection (No version information available, might only be in Git) Get collection from schema
mysql_xdevapi\Schema::getCollectionAsTable (No version information available, might only be in Git) Get collection table object
mysql_xdevapi\Schema::getCollections (No version information available, might only be in Git) Get all schema collections
mysql_xdevapi\Schema::getName (No version information available, might only be in Git) Get schema name
mysql_xdevapi\Schema::getSession (No version information available, might only be in Git) Get schema session
mysql_xdevapi\Schema::getTable (No version information available, might only be in Git) Get schema table
mysql_xdevapi\Schema::getTables (No version information available, might only be in Git) Get schema tables
mysql_xdevapi\SchemaObject::getSchema (No version information available, might only be in Git) Get schema object
mysql_xdevapi\Session::close (No version information available, might only be in Git) Close session
mysql_xdevapi\Session::commit (PHP 4 >= 4.4.0, PHP 5, PHP 7) Commit transaction
mysql_xdevapi\Session::createSchema (No version information available, might only be in Git) Create new schema
mysql_xdevapi\Session::dropSchema (No version information available, might only be in Git) Drop a schema
mysql_xdevapi\Session::executeSql (No version information available, might only be in Git) Execute an SQL statement
mysql_xdevapi\Session::generateUUID (No version information available, might only be in Git) Get new UUID
mysql_xdevapi\Session::getClientId (No version information available, might only be in Git) Get client ID
mysql_xdevapi\Session::getSchema (No version information available, might only be in Git) Get a new schema object
mysql_xdevapi\Session::getSchemas (No version information available, might only be in Git) Get the schemas
mysql_xdevapi\Session::getServerVersion (No version information available, might only be in Git) Get server version
mysql_xdevapi\Session::killClient (No version information available, might only be in Git) Kill the client
mysql_xdevapi\Session::listClients (No version information available, might only be in Git) Get client list
mysql_xdevapi\Session::quoteName (No version information available, might only be in Git) Add quotes
mysql_xdevapi\Session::releaseSavepoint (No version information available, might only be in Git) Release set savepoint
mysql_xdevapi\Session::rollback (No version information available, might only be in Git) Rollback transaction
mysql_xdevapi\Session::rollbackTo (No version information available, might only be in Git) Rollback transaction to savepoint
mysql_xdevapi\Session::setSavepoint (No version information available, might only be in Git) Create savepoint
mysql_xdevapi\Session::sql (No version information available, might only be in Git) Execute SQL query
mysql_xdevapi\Session::startTransaction (No version information available, might only be in Git) Start transaction
mysql_xdevapi\SqlStatement::bind (No version information available, might only be in Git) Bind statement parameters
mysql_xdevapi\SqlStatement::execute (No version information available, might only be in Git) Execute the operation
mysql_xdevapi\SqlStatement::getNextResult (No version information available, might only be in Git) Get next result
mysql_xdevapi\SqlStatement::getResult (No version information available, might only be in Git) Get result
mysql_xdevapi\SqlStatement::hasMoreResults (No version information available, might only be in Git) Check for more results
mysql_xdevapi\SqlStatementResult::fetchAll (No version information available, might only be in Git) Get all rows
mysql_xdevapi\SqlStatementResult::fetchOne (No version information available, might only be in Git) Get single row
mysql_xdevapi\SqlStatementResult::getAffectedItemsCount (No version information available, might only be in Git) Get affected row count
mysql_xdevapi\SqlStatementResult::getColumnCount (No version information available, might only be in Git) Get column count
mysql_xdevapi\SqlStatementResult::getColumnNames (No version information available, might only be in Git) Get column names
mysql_xdevapi\SqlStatementResult::getColumns (No version information available, might only be in Git) Get columns
mysql_xdevapi\SqlStatementResult::getGeneratedIds (No version information available, might only be in Git) Get generated ids
mysql_xdevapi\SqlStatementResult::getLastInsertId (No version information available, might only be in Git) Get last insert id
mysql_xdevapi\SqlStatementResult::getWarnings (No version information available, might only be in Git) Get warnings from last operation
mysql_xdevapi\SqlStatementResult::hasData (No version information available, might only be in Git) Check if result has data
mysql_xdevapi\SqlStatementResult::nextResult (No version information available, might only be in Git) Get next result
mysql_xdevapi\Statement::getNextResult (No version information available, might only be in Git) Get next result
mysql_xdevapi\Statement::getResult (No version information available, might only be in Git) Get result
mysql_xdevapi\Statement::hasMoreResults (No version information available, might only be in Git) Check if more results
mysql_xdevapi\Table::count (No version information available, might only be in Git) Get row count
mysql_xdevapi\Table::delete (No version information available, might only be in Git) Delete rows from table
mysql_xdevapi\Table::existsInDatabase (No version information available, might only be in Git) Check if table exists in database
mysql_xdevapi\Table::getName (No version information available, might only be in Git) Get table name
mysql_xdevapi\Table::getSchema (No version information available, might only be in Git) Get table schema
mysql_xdevapi\Table::getSession (No version information available, might only be in Git) Get table session
mysql_xdevapi\Table::insert (No version information available, might only be in Git) Insert table rows
mysql_xdevapi\Table::isView (No version information available, might only be in Git) Check if table is view
mysql_xdevapi\Table::select (No version information available, might only be in Git) Select rows from table
mysql_xdevapi\Table::update (No version information available, might only be in Git) Update rows in table
mysql_xdevapi\TableDelete::bind (No version information available, might only be in Git) Bind delete query parameters
mysql_xdevapi\TableDelete::execute (No version information available, might only be in Git) Execute delete query
mysql_xdevapi\TableDelete::limit (No version information available, might only be in Git) Limit deleted rows
mysql_xdevapi\TableDelete::offset (No version information available, might only be in Git) Set delete limit offset
mysql_xdevapi\TableDelete::orderby (No version information available, might only be in Git) Set delete sort criteria
mysql_xdevapi\TableDelete::where (No version information available, might only be in Git) Set delete search condition
mysql_xdevapi\TableInsert::execute (No version information available, might only be in Git) Execute insert query
mysql_xdevapi\TableInsert::values (No version information available, might only be in Git) Add insert row values
mysql_xdevapi\TableSelect::bind (No version information available, might only be in Git) Bind select query parameters
mysql_xdevapi\TableSelect::execute (No version information available, might only be in Git) Execute select statement
mysql_xdevapi\TableSelect::groupBy (No version information available, might only be in Git) Set select grouping criteria
mysql_xdevapi\TableSelect::having (No version information available, might only be in Git) Set select having condition
mysql_xdevapi\TableSelect::limit (No version information available, might only be in Git) Limit selected rows
mysql_xdevapi\TableSelect::lockExclusive (No version information available, might only be in Git) Execute EXCLUSIVE LOCK
mysql_xdevapi\TableSelect::lockShared (No version information available, might only be in Git) Execute SHARED LOCK
mysql_xdevapi\TableSelect::offset (No version information available, might only be in Git) Set limit offset
mysql_xdevapi\TableSelect::orderby (No version information available, might only be in Git) Set select sort criteria
mysql_xdevapi\TableSelect::where (No version information available, might only be in Git) Set select search condition
mysql_xdevapi\TableUpdate::bind (No version information available, might only be in Git) Bind update query parameters
mysql_xdevapi\TableUpdate::execute (No version information available, might only be in Git) Execute update query
mysql_xdevapi\TableUpdate::limit (No version information available, might only be in Git) Limit update row count
mysql_xdevapi\TableUpdate::orderby (No version information available, might only be in Git) Set sorting criteria
mysql_xdevapi\TableUpdate::set (No version information available, might only be in Git) Add field to be updated
mysql_xdevapi\TableUpdate::where (No version information available, might only be in Git) Set search filter
NoRewindIterator::current (PHP 5 >= 5.1.0, PHP 7) Get the current value
NoRewindIterator::getInnerIterator (PHP 5 >= 5.1.0, PHP 7) Get the inner iterator
NoRewindIterator::key (PHP 5 >= 5.1.0, PHP 7) Get the current key
NoRewindIterator::next (PHP 5 >= 5.1.0, PHP 7) Forward to the next element
NoRewindIterator::rewind (PHP 5 >= 5.1.0, PHP 7) Prevents the rewind operation on the inner iterator
NoRewindIterator::valid (PHP 5 >= 5.1.0, PHP 7) Validates the iterator
Normalizer::getRawDecomposition (PHP 7 >= 7.3) Gets the Decomposition_Mapping property for the given UTF-8 encoded code point
Normalizer::isNormalized (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Checks if the provided string is already in the specified normalization form
Normalizer::normalize (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Normalizes the input provided and returns the normalized string
NumberFormatter::create (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Create a number formatter
NumberFormatter::format (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Format a number
NumberFormatter::formatCurrency (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Format a currency value
NumberFormatter::getAttribute (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get an attribute
NumberFormatter::getErrorCode (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get formatter's last error code
NumberFormatter::getErrorMessage (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get formatter's last error message
NumberFormatter::getLocale (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get formatter locale
NumberFormatter::getPattern (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get formatter pattern
NumberFormatter::getSymbol (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get a symbol value
NumberFormatter::getTextAttribute (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Get a text attribute
NumberFormatter::parse (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Parse a number
NumberFormatter::parseCurrency (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Parse a currency number
NumberFormatter::setAttribute (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set an attribute
NumberFormatter::setPattern (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set formatter pattern
NumberFormatter::setSymbol (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set a symbol value
NumberFormatter::setTextAttribute (PHP 5 >= 5.3.0, PHP 7, PECL intl >= 1.0.0) Set a text attribute
OAuth::disableDebug (PECL OAuth >= 0.99.3) Turn off verbose debugging
OAuth::disableRedirects (PECL OAuth >= 0.99.9) Turn off redirects
OAuth::disableSSLChecks (PECL OAuth >= 0.99.5) Turn off SSL checks
OAuth::enableDebug (PECL OAuth >= 0.99.3) Turn on verbose debugging
OAuth::enableRedirects (PECL OAuth >= 0.99.9) Turn on redirects
OAuth::enableSSLChecks (PECL OAuth >= 0.99.5) Turn on SSL checks
OAuth::fetch (PECL OAuth >= 0.99.1) Fetch an OAuth protected resource
OAuth::generateSignature (No version information available, might only be in Git) Generate a signature
OAuth::getAccessToken (PECL OAuth >= 0.99.1) Fetch an access token
OAuth::getCAPath (PECL OAuth >= 0.99.8) Gets CA information
OAuth::getLastResponse (PECL OAuth >= 0.99.1) Get the last response
OAuth::getLastResponseHeaders (No version information available, might only be in Git) Get headers for last response
OAuth::getLastResponseInfo (PECL OAuth >= 0.99.1) Get HTTP information about the last response
OAuth::getRequestHeader (No version information available, might only be in Git) Generate OAuth header string signature
OAuth::getRequestToken (PECL OAuth >= 0.99.1) Fetch a request token
OAuth::setAuthType (PECL OAuth >= 0.99.1) Set authorization type
OAuth::setCAPath (PECL OAuth >= 0.99.8) Set CA path and info
OAuth::setNonce (PECL OAuth >= 0.99.1) Set the nonce for subsequent requests
OAuth::setRequestEngine (PECL OAuth >= 1.0.0) The setRequestEngine purpose
OAuth::setRSACertificate (PECL OAuth >= 1.0.0) Set the RSA certificate
OAuth::setSSLChecks (No version information available, might only be in Git) Tweak specific SSL checks for requests
OAuth::setTimestamp (PECL OAuth >= 1.0.0) Set the timestamp
OAuth::setToken (PECL OAuth >= 0.99.1) Sets the token and secret
OAuth::setVersion (PECL OAuth >= 0.99.1) Set the OAuth version
OAuthProvider::addRequiredParameter (PECL OAuth >= 1.0.0) Add required parameters
OAuthProvider::callconsumerHandler (No version information available, might only be in Git) Calls the consumerNonceHandler callback
OAuthProvider::callTimestampNonceHandler (PECL OAuth >= 1.0.0) Calls the timestampNonceHandler callback
OAuthProvider::calltokenHandler (PECL OAuth >= 1.0.0) Calls the tokenNonceHandler callback
OAuthProvider::checkOAuthRequest (PECL OAuth >= 1.0.0) Check an oauth request
OAuthProvider::consumerHandler (PECL OAuth >= 1.0.0) Set the consumerHandler handler callback
OAuthProvider::generateToken (PECL OAuth >= 1.0.0) Generate a random token
OAuthProvider::is2LeggedEndpoint (PECL OAuth >= 1.0.0) is2LeggedEndpoint
OAuthProvider::isRequestTokenEndpoint (PECL OAuth >= 1.0.0) Sets isRequestTokenEndpoint
OAuthProvider::removeRequiredParameter (PECL OAuth >= 1.0.0) Remove a required parameter
OAuthProvider::reportProblem (PECL OAuth >= 1.0.0) Report a problem
OAuthProvider::setParam (PECL OAuth >= 1.0.0) Set a parameter
OAuthProvider::setRequestTokenPath (PECL OAuth >= 1.0.0) Set request token path
OAuthProvider::timestampNonceHandler (PECL OAuth >= 1.0.0) Set the timestampNonceHandler handler callback
OAuthProvider::tokenHandler (PECL OAuth >= 1.0.0) Set the tokenHandler handler callback
OuterIterator::getInnerIterator (PHP 5 >= 5.1.0, PHP 7) Returns the inner iterator for the current entry
parallel\Future::done (0.8.0) State Detection
parallel\Future::select (0.8.0) Resolution
parallel\Future::value (0.8.0) Resolution
parallel\Runtime::close (0.8.0) Runtime Graceful Join
parallel\Runtime::kill (0.8.0) Runtime Join
parallel\Runtime::run (0.8.0) Parallel Execution
ParentIterator::accept (PHP 5 >= 5.1.0, PHP 7) Determines acceptability
ParentIterator::getChildren (PHP 5 >= 5.1.0, PHP 7) Return the inner iterator's children contained in a ParentIterator
ParentIterator::hasChildren (PHP 5 >= 5.1.0, PHP 7) Check whether the inner iterator's current element has children
ParentIterator::next (PHP 5 >= 5.1.0, PHP 7) Move the iterator forward
ParentIterator::rewind (PHP 5 >= 5.1.0, PHP 7) Rewind the iterator
Parle\Lexer::advance (PECL parle >= 0.5.1) Process next lexer rule
Parle\Lexer::build (PECL parle >= 0.5.1) Finalize the lexer rule set
Parle\Lexer::callout (PECL parle >= 0.7.2) Define token callback
Parle\Lexer::consume (PECL parle >= 0.5.1) Pass the data for processing
Parle\Lexer::dump (PECL parle >= 0.5.1) Dump the state machine
Parle\Lexer::getToken (PECL parle >= 0.5.1) Retrieve the current token
Parle\Lexer::insertMacro (PECL parle >= 0.5.1) Insert regex macro
Parle\Lexer::push (PECL parle >= 0.5.1) Add a lexer rule
Parle\Lexer::reset (PECL parle >= 0.7.1) Reset lexer
Parle\Parser::advance (PECL parle >= 0.5.1) Process next parser rule
Parle\Parser::build (PECL parle >= 0.5.1) Finalize the grammar rules
Parle\Parser::consume (PECL parle >= 0.5.1) Consume the data for processing
Parle\Parser::dump (PECL parle >= 0.5.1) Dump the grammar
Parle\Parser::errorInfo (PECL parle >= 0.5.1) Retrieve the error information
Parle\Parser::left (PECL parle >= 0.5.1) Declare a token with left-associativity
Parle\Parser::nonassoc (PECL parle >= 0.5.1) Declare a token with no associativity
Parle\Parser::precedence (PECL parle >= 0.5.1) Declare a precedence rule
Parle\Parser::push (PECL parle >= 0.5.1) Add a grammar rule
Parle\Parser::reset (PECL parle >= 0.7.1) Reset parser state
Parle\Parser::right (PECL parle >= 0.5.1) Declare a token with right-associativity
Parle\Parser::sigil (PECL parle >= 0.5.1) Retrieve a matching part of a rule
Parle\Parser::token (PECL parle >= 0.5.1) Declare a token
Parle\Parser::tokenId (PECL parle >= 0.5.1) Get token id
Parle\Parser::trace (PECL parle >= 0.5.1) Trace the parser operation
Parle\Parser::validate (PECL parle >= 0.5.1) Validate input
Parle\RLexer::advance (PECL parle >= 0.5.1) Process next lexer rule
Parle\RLexer::build (PECL parle >= 0.5.1) Finalize the lexer rule set
Parle\RLexer::callout (PECL parle >= 0.7.2) Define token callback
Parle\RLexer::consume (PECL parle >= 0.5.1) Pass the data for processing
Parle\RLexer::dump (PECL parle >= 0.5.1) Dump the state machine
Parle\RLexer::getToken (PECL parle >= 0.5.1) Retrieve the current token
Parle\RLexer::insertMacro (PECL parle >= 0.5.1) Insert regex macro
Parle\RLexer::push (PECL parle >= 0.5.1) Add a lexer rule
Parle\RLexer::pushState (PECL parle >= 0.5.1) Push a new start state
Parle\RLexer::reset (PECL parle >= 0.7.1) Reset lexer
Parle\RParser::advance (PECL parle >= 0.7.0) Process next parser rule
Parle\RParser::build (PECL parle >= 0.7.0) Finalize the grammar rules
Parle\RParser::consume (PECL parle >= 0.7.0) Consume the data for processing
Parle\RParser::dump (PECL parle >= 0.7.0) Dump the grammar
Parle\RParser::errorInfo (PECL parle >= 0.7.0) Retrieve the error information
Parle\RParser::left (PECL parle >= 0.7.0) Declare a token with left-associativity
Parle\RParser::nonassoc (PECL parle >= 0.7.0) Declare a token with no associativity
Parle\RParser::precedence (PECL parle >= 0.7.0) Declare a precedence rule
Parle\RParser::push (PECL parle >= 0.7.0) Add a grammar rule
Parle\RParser::reset (PECL parle >= 0.7.1) Reset parser state
Parle\RParser::right (PECL parle >= 0.7.0) Declare a token with right-associativity
Parle\RParser::sigil (PECL parle >= 0.7.0) Retrieve a matching part of a rule
Parle\RParser::token (PECL parle >= 0.7.0) Declare a token
Parle\RParser::tokenId (PECL parle >= 0.7.0) Get token id
Parle\RParser::trace (PECL parle >= 0.7.0) Trace the parser operation
Parle\RParser::validate (PECL parle >= 0.7.0) Validate input
Parle\Stack::pop (PECL parle >= 0.5.1) Pop an item from the stack
Parle\Stack::push (PECL parle >= 0.5.1) Push an item into the stack
PDO::beginTransaction (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Initiates a transaction
PDO::commit (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Commits a transaction
PDO::errorCode (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Fetch the SQLSTATE associated with the last operation on the database handle
PDO::errorInfo (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Fetch extended error information associated with the last operation on the database handle
PDO::exec (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Execute an SQL statement and return the number of affected rows
PDO::getAttribute (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Retrieve a database connection attribute
PDO::getAvailableDrivers (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 1.0.3) Return an array of available PDO drivers
PDO::inTransaction (PHP 5 >= 5.3.3, Bundled pdo_pgsql, PHP 7) Checks if inside a transaction
PDO::lastInsertId (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Returns the ID of the last inserted row or sequence value
PDO::prepare (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Prepares a statement for execution and returns a statement object
PDO::query (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Executes an SQL statement, returning a result set as a PDOStatement object
PDO::quote (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.1) Quotes a string for use in a query
PDO::rollBack (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Rolls back a transaction
PDO::setAttribute (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Set an attribute
PDOStatement::bindColumn (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Bind a column to a PHP variable
PDOStatement::bindParam (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Binds a parameter to the specified variable name
PDOStatement::bindValue (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 1.0.0) Binds a value to a parameter
PDOStatement::closeCursor (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.9.0) Closes the cursor, enabling the statement to be executed again
PDOStatement::columnCount (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Returns the number of columns in the result set
PDOStatement::debugDumpParams (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.9.0) Dump an SQL prepared command
PDOStatement::errorCode (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Fetch the SQLSTATE associated with the last operation on the statement handle
PDOStatement::errorInfo (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Fetch extended error information associated with the last operation on the statement handle
PDOStatement::execute (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Executes a prepared statement
PDOStatement::fetch (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Fetches the next row from a result set
PDOStatement::fetchAll (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Returns an array containing all of the result set rows
PDOStatement::fetchColumn (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.9.0) Returns a single column from the next row of a result set
PDOStatement::fetchObject (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.4) Fetches the next row and returns it as an object
PDOStatement::getAttribute (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Retrieve a statement attribute
PDOStatement::getColumnMeta (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Returns metadata for a column in a result set
PDOStatement::nextRowset (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Advances to the next rowset in a multi-rowset statement handle
PDOStatement::rowCount (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.1.0) Returns the number of rows affected by the last SQL statement
PDOStatement::setAttribute (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Set a statement attribute
PDOStatement::setFetchMode (PHP 5 >= 5.1.0, PHP 7, PECL pdo >= 0.2.0) Set the default fetch mode for this statement
Phar::addEmptyDir (Unknown) Add an empty directory to the phar archive
Phar::addFile (Unknown) Add a file from the filesystem to the phar archive
Phar::addFromString (Unknown) Add a file from a string to the phar archive
Phar::apiVersion (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns the api version
Phar::buildFromDirectory (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Construct a phar archive from the files within a directory
Phar::buildFromIterator (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Construct a phar archive from an iterator
Phar::canCompress (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns whether phar extension supports compression using either zlib or bzip2
Phar::canWrite (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns whether phar extension supports writing and creating phars
Phar::compress (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Compresses the entire Phar archive using Gzip or Bzip2 compression
Phar::compressAllFilesBZIP2 (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Compresses all files in the current Phar archive using Bzip2 compression
Phar::compressAllFilesGZ (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Compresses all files in the current Phar archive using Gzip compression
Phar::compressFiles (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Compresses all files in the current Phar archive
Phar::convertToData (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Convert a phar archive to a non-executable tar or zip file
Phar::convertToExecutable (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Convert a phar archive to another executable phar archive file format
Phar::copy (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Copy a file internal to the phar archive to another new file within the phar
Phar::count (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns the number of entries (files) in the Phar archive
Phar::createDefaultStub (Unknown) Create a phar-file format specific stub
Phar::decompress (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Decompresses the entire Phar archive
Phar::decompressFiles (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Decompresses all files in the current Phar archive
Phar::delete (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Delete a file within a phar archive
Phar::delMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.0) Deletes the global metadata of the phar
Phar::extractTo (Unknown) Extract the contents of a phar archive to a directory
Phar::getAlias (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.1) Get the alias for Phar
Phar::getMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns phar archive meta-data
Phar::getModified (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Return whether phar was modified
Phar::getPath (PHP 5 >= 5.3.0, PHP 7) Get the real path to the Phar archive on disk
Phar::getSignature (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Return MD5/SHA1/SHA256/SHA512/OpenSSL signature of a Phar archive
Phar::getStub (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Return the PHP loader or bootstrap stub of a Phar archive
Phar::getSupportedCompression (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.0) Return array of supported compression algorithms
Phar::getSupportedSignatures (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.1.0) Return array of supported signature types
Phar::getVersion (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Return version info of Phar archive
Phar::hasMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.0) Returns whether phar has global meta-data
Phar::interceptFileFuncs (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Instructs phar to intercept fopen, file_get_contents, opendir, and all of the stat-related functions
Phar::isBuffering (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Used to determine whether Phar write operations are being buffered, or are flushing directly to disk
Phar::isCompressed (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Returns Phar::GZ or PHAR::BZ2 if the entire phar archive is compressed (.tar.gz/tar.bz and so on)
Phar::isFileFormat (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Returns true if the phar archive is based on the tar/phar/zip file format depending on the parameter
Phar::isValidPharFilename (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.0) Returns whether the given filename is a valid phar filename
Phar::isWritable (Unknown) Returns true if the phar archive can be modified
Phar::loadPhar (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Loads any phar archive with an alias
Phar::mapPhar (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Reads the currently executed file (a phar) and registers its manifest
Phar::mount (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Mount an external path or file to a virtual location within the phar archive
Phar::mungServer (Unknown) Defines a list of up to 4 $_SERVER variables that should be modified for execution
Phar::offsetExists (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Determines whether a file exists in the phar
Phar::offsetGet (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Gets a PharFileInfo object for a specific file
Phar::offsetSet (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Set the contents of an internal file to those of an external file
Phar::offsetUnset (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Remove a file from a phar
Phar::running (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Returns the full path on disk or full phar URL to the currently executing Phar archive
Phar::setAlias (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.1) Set the alias for the Phar archive
Phar::setDefaultStub (Unknown) Used to set the PHP loader or bootstrap stub of a Phar archive to the default loader
Phar::setMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Sets phar archive meta-data
Phar::setSignatureAlgorithm (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.1.0) Set the signature algorithm for a phar and apply it
Phar::setStub (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Used to set the PHP loader or bootstrap stub of a Phar archive
Phar::startBuffering (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Start buffering Phar write operations, do not modify the Phar object on disk
Phar::stopBuffering (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Stop buffering write requests to the Phar archive, and save changes to disk
Phar::uncompressAllFiles (PECL phar < 2.0.0) Uncompresses all files in the current Phar archive
Phar::unlinkArchive (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Completely remove a phar archive from disk and from memory
Phar::webPhar (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) mapPhar for web-based phars. front controller for web applications
PharData::addEmptyDir (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Add an empty directory to the tar/zip archive
PharData::addFromString (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Add a file from the filesystem to the tar/zip archive
PharData::buildFromIterator (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Construct a tar or zip archive from an iterator
PharData::compress (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Compresses the entire tar/zip archive using Gzip or Bzip2 compression
PharData::compressFiles (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Compresses all files in the current tar/zip archive
PharData::convertToData (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Convert a phar archive to a non-executable tar or zip file
PharData::convertToExecutable (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Convert a non-executable tar/zip archive to an executable phar archive
PharData::copy (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Copy a file internal to the phar archive to another new file within the phar
PharData::decompress (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Decompresses the entire Phar archive
PharData::decompressFiles (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Decompresses all files in the current zip archive
PharData::delete (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Delete a file within a tar/zip archive
PharData::delMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Deletes the global metadata of a zip archive
PharData::extractTo (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Extract the contents of a tar/zip archive to a directory
PharData::isWritable (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Returns true if the tar/zip archive can be modified
PharData::offsetSet (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Set the contents of a file within the tar/zip to those of an external file or string
PharData::offsetUnset (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Remove a file from a tar/zip archive
PharData::setAlias (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Dummy function (Phar::setAlias is not valid for PharData)
PharData::setDefaultStub (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Dummy function (Phar::setDefaultStub is not valid for PharData)
PharData::setStub (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Dummy function (Phar::setStub is not valid for PharData)
PharFileInfo::chmod (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Sets file-specific permission bits
PharFileInfo::compress (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Compresses the current Phar entry with either zlib or bzip2 compression
PharFileInfo::decompress (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Decompresses the current Phar entry within the phar
PharFileInfo::delMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.0) Deletes the metadata of the entry
PharFileInfo::getCompressedSize (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns the actual size of the file (with compression) inside the Phar archive
PharFileInfo::getContent (PHP 5 >= 5.3.0, PHP 7) Get the complete file contents of the entry
PharFileInfo::getCRC32 (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns CRC32 code or throws an exception if CRC has not been verified
PharFileInfo::getMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns file-specific meta-data saved with a file
PharFileInfo::getPharFlags (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns the Phar file entry flags
PharFileInfo::hasMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.2.0) Returns the metadata of the entry
PharFileInfo::isCompressed (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns whether the entry is compressed
PharFileInfo::isCompressedBZIP2 (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns whether the entry is compressed using bzip2
PharFileInfo::isCompressedGZ (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns whether the entry is compressed using gz
PharFileInfo::isCRCChecked (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Returns whether file entry has had its CRC verified
PharFileInfo::setCompressedBZIP2 (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Compresses the current Phar entry within the phar using Bzip2 compression
PharFileInfo::setCompressedGZ (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Compresses the current Phar entry within the phar using gz compression
PharFileInfo::setMetadata (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Sets file-specific meta-data saved with a file
PharFileInfo::setUncompressed (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 1.0.0) Uncompresses the current Phar entry within the phar, if it is compressed
phdfs::connect (phdfs >= 0.1.0) Description
phdfs::copy (phdfs >= 0.1.0) Description
phdfs::delete (phdfs >= 0.1.0) Description
phdfs::disconnect (phdfs >= 0.1.0) Description
phdfs::exists (phdfs>= 0.1.0) Description
phdfs::read (phdfs >= 0.1.0) Description
phdfs::rename (phdfs >= 0.1.0) Description
phdfs::tell (phdfs >= 0.1.0) Description
phdfs::write (phdfs >= 0.1.0) Description
php_user_filter::filter (PHP 5, PHP 7) Called when applying the filter
php_user_filter::onClose (PHP 5, PHP 7) Called when closing the filter
php_user_filter::onCreate (PHP 5, PHP 7) Called when creating the filter
pht\AtomicInteger::dec (PECL pht >= 0.0.1) Decrements the atomic integer's value by one
pht\AtomicInteger::get (PECL pht >= 0.0.1) Gets the atomic integer's value
pht\AtomicInteger::inc (PECL pht >= 0.0.1) Increments the atomic integer's value by one
pht\AtomicInteger::lock (PECL pht >= 0.0.1) Acquires the atomic integer's mutex lock
pht\AtomicInteger::set (PECL pht >= 0.0.1) Sets the atomic integer's value
pht\AtomicInteger::unlock (PECL pht >= 0.0.1) Releases the atomic integer's mutex lock
pht\HashTable::lock (PECL pht >= 0.0.1) Acquires the hash table's mutex lock
pht\HashTable::size (PECL pht >= 0.0.1) Gets the size of the hash table
pht\HashTable::unlock (PECL pht >= 0.0.1) Releases the hash table's mutex lock
pht\Queue::front (PECL pht >= 0.0.1) Returns the first value from a queue
pht\Queue::lock (PECL pht >= 0.0.1) Acquires the queue's mutex lock
pht\Queue::pop (PECL pht >= 0.0.1) Pops a value off of the front of a queue
pht\Queue::push (PECL pht >= 0.0.1) Pushes a value to the end of a queue
pht\Queue::size (PECL pht >= 0.0.1) Gets the size of the queue
pht\Queue::unlock (PECL pht >= 0.0.1) Releases the queue's mutex lock
pht\Runnable::run (PECL pht >= 0.0.1) The entry point of a threaded class
pht\Thread::join (PECL pht >= 0.0.1) Joins a thread
pht\Thread::start (PECL pht >= 0.0.1) Starts the new thread
pht\Threaded::lock (PECL pht >= 0.0.1) Acquires the mutex lock
pht\Threaded::unlock (PECL pht >= 0.0.1) Releases the mutex lock
pht\Vector::lock (PECL pht >= 0.0.1) Acquires the vector's mutex lock
pht\Vector::pop (PECL pht >= 0.0.1) Pops a value to the vector
pht\Vector::push (PECL pht >= 0.0.1) Pushes a value to the vector
pht\Vector::resize (PECL pht >= 0.0.1) Resizes a vector
pht\Vector::shift (PECL pht >= 0.0.1) Shifts a value from the vector
pht\Vector::size (PECL pht >= 0.0.1) Gets the size of the vector
pht\Vector::unlock (PECL pht >= 0.0.1) Releases the vector's mutex lock
pht\Vector::unshift (PECL pht >= 0.0.1) Unshifts a value to the vector front
Pool::collect (PECL pthreads >= 2.0.0) Collect references to completed tasks
Pool::resize (PECL pthreads >= 2.0.0) Resize the Pool
Pool::shutdown (PECL pthreads >= 2.0.0) Shutdown all workers
Pool::submit (PECL pthreads >= 2.0.0) Submits an object for execution
QuickHashIntHash::add (PECL quickhash >= Unknown) This method adds a new entry to the hash
QuickHashIntHash::delete (PECL quickhash >= Unknown) This method deletes am entry from the hash
QuickHashIntHash::exists (PECL quickhash >= Unknown) This method checks whether a key is part of the hash
QuickHashIntHash::get (PECL quickhash >= Unknown) This method retrieves a value from the hash by its key
QuickHashIntHash::getSize (PECL quickhash >= Unknown) Returns the number of elements in the hash
QuickHashIntHash::loadFromFile (PECL quickhash >= Unknown) This factory method creates a hash from a file
QuickHashIntHash::loadFromString (PECL quickhash >= Unknown) This factory method creates a hash from a string
QuickHashIntHash::saveToFile (PECL quickhash >= Unknown) This method stores an in-memory hash to disk
QuickHashIntHash::saveToString (PECL quickhash >= Unknown) This method returns a serialized version of the hash
QuickHashIntHash::set (PECL quickhash >= Unknown) This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist
QuickHashIntHash::update (PECL quickhash >= Unknown) This method updates an entry in the hash with a new value
QuickHashIntSet::add (PECL quickhash >= Unknown) This method adds a new entry to the set
QuickHashIntSet::delete (PECL quickhash >= Unknown) This method deletes an entry from the set
QuickHashIntSet::exists (PECL quickhash >= Unknown) This method checks whether a key is part of the set
QuickHashIntSet::getSize (PECL quickhash >= Unknown) Returns the number of elements in the set
QuickHashIntSet::loadFromFile (PECL quickhash >= Unknown) This factory method creates a set from a file
QuickHashIntSet::loadFromString (PECL quickhash >= Unknown) This factory method creates a set from a string
QuickHashIntSet::saveToFile (PECL quickhash >= Unknown) This method stores an in-memory set to disk
QuickHashIntSet::saveToString (PECL quickhash >= Unknown) This method returns a serialized version of the set
QuickHashIntStringHash::add (PECL quickhash >= Unknown) This method adds a new entry to the hash
QuickHashIntStringHash::delete (PECL quickhash >= Unknown) This method deletes am entry from the hash
QuickHashIntStringHash::exists (PECL quickhash >= Unknown) This method checks whether a key is part of the hash
QuickHashIntStringHash::get (PECL quickhash >= Unknown) This method retrieves a value from the hash by its key
QuickHashIntStringHash::getSize (PECL quickhash >= Unknown) Returns the number of elements in the hash
QuickHashIntStringHash::loadFromFile (PECL quickhash >= Unknown) This factory method creates a hash from a file
QuickHashIntStringHash::loadFromString (PECL quickhash >= Unknown) This factory method creates a hash from a string
QuickHashIntStringHash::saveToFile (PECL quickhash >= Unknown) This method stores an in-memory hash to disk
QuickHashIntStringHash::saveToString (PECL quickhash >= Unknown) This method returns a serialized version of the hash
QuickHashIntStringHash::set (PECL quickhash >= Unknown) This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist
QuickHashIntStringHash::update (PECL quickhash >= Unknown) This method updates an entry in the hash with a new value
QuickHashStringIntHash::add (No version information available, might only be in Git) This method adds a new entry to the hash
QuickHashStringIntHash::delete (No version information available, might only be in Git) This method deletes am entry from the hash
QuickHashStringIntHash::exists (No version information available, might only be in Git) This method checks whether a key is part of the hash
QuickHashStringIntHash::get (No version information available, might only be in Git) This method retrieves a value from the hash by its key
QuickHashStringIntHash::getSize (No version information available, might only be in Git) Returns the number of elements in the hash
QuickHashStringIntHash::loadFromFile (No version information available, might only be in Git) This factory method creates a hash from a file
QuickHashStringIntHash::loadFromString (No version information available, might only be in Git) This factory method creates a hash from a string
QuickHashStringIntHash::saveToFile (No version information available, might only be in Git) This method stores an in-memory hash to disk
QuickHashStringIntHash::saveToString (No version information available, might only be in Git) This method returns a serialized version of the hash
QuickHashStringIntHash::set (No version information available, might only be in Git) This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist
QuickHashStringIntHash::update (No version information available, might only be in Git) This method updates an entry in the hash with a new value
RarArchive::close (PECL rar >= 2.0.0) Close RAR archive and free all resources
RarArchive::getComment (PECL rar >= 2.0.0) Get comment text from the RAR archive
RarArchive::getEntries (PECL rar >= 2.0.0) Get full list of entries from the RAR archive
RarArchive::getEntry (PECL rar >= 2.0.0) Get entry object from the RAR archive
RarArchive::isBroken (PECL rar >= 3.0.0) Test whether an archive is broken (incomplete)
RarArchive::isSolid (PECL rar >= 2.0.0) Check whether the RAR archive is solid
RarArchive::open (PECL rar >= 2.0.0) Open RAR archive
RarArchive::setAllowBroken (PECL rar >= 3.0.0) Whether opening broken archives is allowed
RarEntry::extract (PECL rar >= 0.1) Extract entry from the archive
RarEntry::getAttr (PECL rar >= 0.1) Get attributes of the entry
RarEntry::getCrc (PECL rar >= 0.1) Get CRC of the entry
RarEntry::getFileTime (PECL rar >= 0.1) Get entry last modification time
RarEntry::getHostOs (PECL rar >= 0.1) Get entry host OS
RarEntry::getMethod (PECL rar >= 0.1) Get pack method of the entry
RarEntry::getName (PECL rar >= 0.1) Get name of the entry
RarEntry::getPackedSize (PECL rar >= 0.1) Get packed size of the entry
RarEntry::getStream (PECL rar >= 2.0.0) Get file handler for entry
RarEntry::getUnpackedSize (PECL rar >= 0.1) Get unpacked size of the entry
RarEntry::getVersion (PECL rar >= 0.1) Get minimum version of RAR program required to unpack the entry
RarEntry::isDirectory (PECL rar >= 2.0.0) Test whether an entry represents a directory
RarEntry::isEncrypted (PECL rar >= 2.0.0) Test whether an entry is encrypted
RarException::isUsingExceptions (PECL rar >= 2.0.0) Check whether error handling with exceptions is in use
RarException::setUsingExceptions (PECL rar >= 2.0.0) Activate and deactivate error handling with exceptions
RecursiveArrayIterator::getChildren (PHP 5 >= 5.1.0, PHP 7) Returns an iterator for the current entry if it is an array
RecursiveArrayIterator::hasChildren (PHP 5 >= 5.1.0, PHP 7) Returns whether current entry is an array or an object
RecursiveCachingIterator::getChildren (PHP 5 >= 5.1.0, PHP 7) Return the inner iterator's children as a RecursiveCachingIterator
RecursiveCachingIterator::hasChildren (PHP 5 >= 5.1.0, PHP 7) Check whether the current element of the inner iterator has children
RecursiveCallbackFilterIterator::getChildren (PHP 5 >= 5.4.0, PHP 7) Return the inner iterator's children contained in a RecursiveCallbackFilterIterator
RecursiveCallbackFilterIterator::hasChildren (PHP 5 >= 5.4.0, PHP 7) Check whether the inner iterator's current element has children
RecursiveDirectoryIterator::getChildren (PHP 5 >= 5.1.0, PHP 7) Returns an iterator for the current entry if it is a directory
RecursiveDirectoryIterator::getSubPath (PHP 5 >= 5.1.0, PHP 7) Get sub path
RecursiveDirectoryIterator::getSubPathname (PHP 5 >= 5.1.0, PHP 7) Get sub path and name
RecursiveDirectoryIterator::hasChildren (PHP 5, PHP 7) Returns whether current entry is a directory and not '.' or '..'
RecursiveDirectoryIterator::key (PHP 5, PHP 7) Return path and filename of current dir entry
RecursiveDirectoryIterator::next (PHP 5, PHP 7) Move to next entry
RecursiveDirectoryIterator::rewind (PHP 5, PHP 7) Rewind dir back to the start
RecursiveFilterIterator::getChildren (PHP 5 >= 5.1.0, PHP 7) Return the inner iterator's children contained in a RecursiveFilterIterator
RecursiveFilterIterator::hasChildren (PHP 5 >= 5.1.0, PHP 7) Check whether the inner iterator's current element has children
RecursiveIterator::getChildren (PHP 5 >= 5.1.0, PHP 7) Returns an iterator for the current entry
RecursiveIterator::hasChildren (PHP 5 >= 5.1.0, PHP 7) Returns if an iterator can be created for the current entry
RecursiveIteratorIterator::beginChildren (PHP 5 >= 5.1.0, PHP 7) Begin children
RecursiveIteratorIterator::beginIteration (PHP 5 >= 5.1.0, PHP 7) Begin Iteration
RecursiveIteratorIterator::callGetChildren (PHP 5 >= 5.1.0, PHP 7) Get children
RecursiveIteratorIterator::callHasChildren (PHP 5 >= 5.1.0, PHP 7) Has children
RecursiveIteratorIterator::current (PHP 5, PHP 7) Access the current element value
RecursiveIteratorIterator::endChildren (PHP 5 >= 5.1.0, PHP 7) End children
RecursiveIteratorIterator::endIteration (PHP 5 >= 5.1.0, PHP 7) End Iteration
RecursiveIteratorIterator::getDepth (PHP 5, PHP 7) Get the current depth of the recursive iteration
RecursiveIteratorIterator::getInnerIterator (PHP 5 >= 5.1.0, PHP 7) Get inner iterator
RecursiveIteratorIterator::getMaxDepth (PHP 5 >= 5.1.0, PHP 7) Get max depth
RecursiveIteratorIterator::getSubIterator (PHP 5, PHP 7) The current active sub iterator
RecursiveIteratorIterator::key (PHP 5, PHP 7) Access the current key
RecursiveIteratorIterator::next (PHP 5, PHP 7) Move forward to the next element
RecursiveIteratorIterator::nextElement (PHP 5 >= 5.1.0, PHP 7) Next element
RecursiveIteratorIterator::rewind (PHP 5, PHP 7) Rewind the iterator to the first element of the top level inner iterator
RecursiveIteratorIterator::setMaxDepth (PHP 5 >= 5.1.0, PHP 7) Set max depth
RecursiveIteratorIterator::valid (PHP 5, PHP 7) Check whether the current position is valid
RecursiveRegexIterator::getChildren (PHP 5 >= 5.2.0, PHP 7) Returns an iterator for the current entry
RecursiveRegexIterator::hasChildren (PHP 5 >= 5.2.0, PHP 7) Returns whether an iterator can be obtained for the current entry
RecursiveTreeIterator::beginChildren (PHP 5 >= 5.3.0, PHP 7) Begin children
RecursiveTreeIterator::beginIteration (PHP 5 >= 5.3.0, PHP 7) Begin iteration
RecursiveTreeIterator::callGetChildren (PHP 5 >= 5.3.0, PHP 7) Get children
RecursiveTreeIterator::callHasChildren (PHP 5 >= 5.3.0, PHP 7) Has children
RecursiveTreeIterator::current (PHP 5 >= 5.3.0, PHP 7) Get current element
RecursiveTreeIterator::endChildren (PHP 5 >= 5.3.0, PHP 7) End children
RecursiveTreeIterator::endIteration (PHP 5 >= 5.3.0, PHP 7) End iteration
RecursiveTreeIterator::getEntry (PHP 5 >= 5.3.0, PHP 7) Get current entry
RecursiveTreeIterator::getPostfix (PHP 5 >= 5.3.0, PHP 7) Get the postfix
RecursiveTreeIterator::getPrefix (PHP 5 >= 5.3.0, PHP 7) Get the prefix
RecursiveTreeIterator::key (PHP 5 >= 5.3.0, PHP 7) Get the key of the current element
RecursiveTreeIterator::next (PHP 5 >= 5.3.0, PHP 7) Move to next element
RecursiveTreeIterator::nextElement (PHP 5 >= 5.3.0, PHP 7) Next element
RecursiveTreeIterator::rewind (PHP 5 >= 5.3.0, PHP 7) Rewind iterator
RecursiveTreeIterator::setPostfix (PHP 5 >= 5.5.3, PHP 7) Set postfix
RecursiveTreeIterator::setPrefixPart (PHP 5 >= 5.3.0, PHP 7) Set a part of the prefix
RecursiveTreeIterator::valid (PHP 5 >= 5.3.0, PHP 7) Check validity
Reflection::export (PHP 5, PHP 7) Exports
Reflection::getModifierNames (PHP 5, PHP 7) Gets modifier names
ReflectionClass::export (PHP 5, PHP 7) Exports a class
ReflectionClass::getConstant (PHP 5, PHP 7) Gets defined constant
ReflectionClass::getConstants (PHP 5, PHP 7) Gets constants
ReflectionClass::getConstructor (PHP 5, PHP 7) Gets the constructor of the class
ReflectionClass::getDefaultProperties (PHP 5, PHP 7) Gets default properties
ReflectionClass::getDocComment (PHP 5, PHP 7) Gets doc comments
ReflectionClass::getEndLine (PHP 5, PHP 7) Gets end line
ReflectionClass::getExtension (PHP 5, PHP 7) Gets a ReflectionExtension object for the extension which defined the class
ReflectionClass::getExtensionName (PHP 5, PHP 7) Gets the name of the extension which defined the class
ReflectionClass::getFileName (PHP 5, PHP 7) Gets the filename of the file in which the class has been defined
ReflectionClass::getInterfaceNames (PHP 5 >= 5.2.0, PHP 7) Gets the interface names
ReflectionClass::getInterfaces (PHP 5, PHP 7) Gets the interfaces
ReflectionClass::getMethod (PHP 5, PHP 7) Gets a ReflectionMethod for a class method
ReflectionClass::getMethods (PHP 5, PHP 7) Gets an array of methods
ReflectionClass::getModifiers (PHP 5, PHP 7) Gets the class modifiers
ReflectionClass::getName (PHP 5, PHP 7) Gets class name
ReflectionClass::getNamespaceName (PHP 5 >= 5.3.0, PHP 7) Gets namespace name
ReflectionClass::getParentClass (PHP 5, PHP 7) Gets parent class
ReflectionClass::getProperties (PHP 5, PHP 7) Gets properties
ReflectionClass::getProperty (PHP 5, PHP 7) Gets a ReflectionProperty for a class's property
ReflectionClass::getReflectionConstant (PHP 7 >= 7.1.0) Gets a ReflectionClassConstant for a class's constant
ReflectionClass::getReflectionConstants (PHP 7 >= 7.1.0) Gets class constants
ReflectionClass::getShortName (PHP 5 >= 5.3.0, PHP 7) Gets short name
ReflectionClass::getStartLine (PHP 5, PHP 7) Gets starting line number
ReflectionClass::getStaticProperties (PHP 5, PHP 7) Gets static properties
ReflectionClass::getStaticPropertyValue (PHP 5 >= 5.1.2, PHP 7) Gets static property value
ReflectionClass::getTraitAliases (PHP 5 >= 5.4.0, PHP 7) Returns an array of trait aliases
ReflectionClass::getTraitNames (PHP 5 >= 5.4.0, PHP 7) Returns an array of names of traits used by this class
ReflectionClass::getTraits (PHP 5 >= 5.4.0, PHP 7) Returns an array of traits used by this class
ReflectionClass::hasConstant (PHP 5 >= 5.1.2, PHP 7) Checks if constant is defined
ReflectionClass::hasMethod (PHP 5 >= 5.1.2, PHP 7) Checks if method is defined
ReflectionClass::hasProperty (PHP 5 >= 5.1.2, PHP 7) Checks if property is defined
ReflectionClass::implementsInterface (PHP 5, PHP 7) Implements interface
ReflectionClass::inNamespace (PHP 5 >= 5.3.0, PHP 7) Checks if in namespace
ReflectionClass::isAbstract (PHP 5, PHP 7) Checks if class is abstract
ReflectionClass::isAnonymous (PHP 7) Checks if class is anonymous
ReflectionClass::isCloneable (PHP 5 >= 5.4.0, PHP 7) Returns whether this class is cloneable
ReflectionClass::isFinal (PHP 5, PHP 7) Checks if class is final
ReflectionClass::isInstance (PHP 5, PHP 7) Checks class for instance
ReflectionClass::isInstantiable (PHP 5, PHP 7) Checks if the class is instantiable
ReflectionClass::isInterface (PHP 5, PHP 7) Checks if the class is an interface
ReflectionClass::isInternal (PHP 5, PHP 7) Checks if class is defined internally by an extension, or the core
ReflectionClass::isIterable (PHP 7 >= 7.2.0) Check whether this class is iterable
ReflectionClass::isSubclassOf (PHP 5, PHP 7) Checks if a subclass
ReflectionClass::isTrait (PHP 5 >= 5.4.0, PHP 7) Returns whether this is a trait
ReflectionClass::isUserDefined (PHP 5, PHP 7) Checks if user defined
ReflectionClass::newInstance (PHP 5, PHP 7) Creates a new class instance from given arguments
ReflectionClass::newInstanceArgs (PHP 5 >= 5.1.3, PHP 7) Creates a new class instance from given arguments
ReflectionClass::newInstanceWithoutConstructor (PHP 5 >= 5.4.0, PHP 7) Creates a new class instance without invoking the constructor
ReflectionClass::setStaticPropertyValue (PHP 5 >= 5.1.2, PHP 7) Sets static property value
ReflectionClassConstant::export (PHP 7 >= 7.1.0) Export
ReflectionClassConstant::getDeclaringClass (PHP 7 >= 7.1.0) Gets declaring class
ReflectionClassConstant::getDocComment (PHP 7 >= 7.1.0) Gets doc comments
ReflectionClassConstant::getModifiers (PHP 7 >= 7.1.0) Gets the class constant modifiers
ReflectionClassConstant::getName (PHP 7 >= 7.1.0) Get name of the constant
ReflectionClassConstant::getValue (PHP 7 >= 7.1.0) Gets value
ReflectionClassConstant::isPrivate (PHP 7 >= 7.1.0) Checks if class constant is private
ReflectionClassConstant::isProtected (PHP 7 >= 7.1.0) Checks if class constant is protected
ReflectionClassConstant::isPublic (PHP 7 >= 7.1.0) Checks if class constant is public
ReflectionExtension::export (PHP 5, PHP 7) Export
ReflectionExtension::getClasses (PHP 5, PHP 7) Gets classes
ReflectionExtension::getClassNames (PHP 5, PHP 7) Gets class names
ReflectionExtension::getConstants (PHP 5, PHP 7) Gets constants
ReflectionExtension::getDependencies (PHP 5 >= 5.1.3, PHP 7) Gets dependencies
ReflectionExtension::getFunctions (PHP 5, PHP 7) Gets extension functions
ReflectionExtension::getINIEntries (PHP 5, PHP 7) Gets extension ini entries
ReflectionExtension::getName (PHP 5, PHP 7) Gets extension name
ReflectionExtension::getVersion (PHP 5, PHP 7) Gets extension version
ReflectionExtension::info (PHP 5 >= 5.2.4, PHP 7) Print extension info
ReflectionExtension::isPersistent (PHP 5 >= 5.4.0, PHP 7) Returns whether this extension is persistent
ReflectionExtension::isTemporary (PHP 5 >= 5.4.0, PHP 7) Returns whether this extension is temporary
ReflectionFunction::export (PHP 5, PHP 7) Exports function
ReflectionFunction::getClosure (PHP 5 >= 5.4.0, PHP 7) Returns a dynamically created closure for the function
ReflectionFunction::invoke (PHP 5, PHP 7) Invokes function
ReflectionFunction::invokeArgs (PHP 5 >= 5.1.2, PHP 7) Invokes function args
ReflectionFunction::isDisabled (PHP 5 >= 5.2.0, PHP 7) Checks if function is disabled
ReflectionFunctionAbstract::getClosureScopeClass (PHP 5 >= 5.4.0, PHP 7) Returns the scope associated to the closure
ReflectionFunctionAbstract::getClosureThis (PHP 5 >= 5.4.0, PHP 7) Returns this pointer bound to closure
ReflectionFunctionAbstract::getDocComment (PHP 5 >= 5.1.0, PHP 7) Gets doc comment
ReflectionFunctionAbstract::getEndLine (PHP 5 >= 5.2.0, PHP 7) Gets end line number
ReflectionFunctionAbstract::getExtension (PHP 5 >= 5.2.0, PHP 7) Gets extension info
ReflectionFunctionAbstract::getExtensionName (PHP 5 >= 5.2.0, PHP 7) Gets extension name
ReflectionFunctionAbstract::getFileName (PHP 5 >= 5.2.0, PHP 7) Gets file name
ReflectionFunctionAbstract::getName (PHP 5 >= 5.2.0, PHP 7) Gets function name
ReflectionFunctionAbstract::getNamespaceName (PHP 5 >= 5.3.0, PHP 7) Gets namespace name
ReflectionFunctionAbstract::getNumberOfParameters (PHP 5 >= 5.3.0, PHP 7) Gets number of parameters
ReflectionFunctionAbstract::getNumberOfRequiredParameters (PHP 5 >= 5.3.0, PHP 7) Gets number of required parameters
ReflectionFunctionAbstract::getParameters (PHP 5 >= 5.2.0, PHP 7) Gets parameters
ReflectionFunctionAbstract::getReturnType (PHP 7) Gets the specified return type of a function
ReflectionFunctionAbstract::getShortName (PHP 5 >= 5.3.0, PHP 7) Gets function short name
ReflectionFunctionAbstract::getStartLine (PHP 5 >= 5.2.0, PHP 7) Gets starting line number
ReflectionFunctionAbstract::getStaticVariables (PHP 5 >= 5.2.0, PHP 7) Gets static variables
ReflectionFunctionAbstract::hasReturnType (PHP 7) Checks if the function has a specified return type
ReflectionFunctionAbstract::inNamespace (PHP 5 >= 5.3.0, PHP 7) Checks if function in namespace
ReflectionFunctionAbstract::isClosure (PHP 5 >= 5.3.0, PHP 7) Checks if closure
ReflectionFunctionAbstract::isDeprecated (PHP 5 >= 5.2.0, PHP 7) Checks if deprecated
ReflectionFunctionAbstract::isGenerator (PHP 5 >= 5.5.0, PHP 7) Returns whether this function is a generator
ReflectionFunctionAbstract::isInternal (PHP 5 >= 5.2.0, PHP 7) Checks if is internal
ReflectionFunctionAbstract::isUserDefined (PHP 5 >= 5.2.0, PHP 7) Checks if user defined
ReflectionFunctionAbstract::isVariadic (PHP 5 >= 5.6.0, PHP 7) Checks if the function is variadic
ReflectionFunctionAbstract::returnsReference (PHP 5 >= 5.2.0, PHP 7) Checks if returns reference
ReflectionGenerator::getExecutingFile (PHP 7) Gets the file name of the currently executing generator
ReflectionGenerator::getExecutingGenerator (PHP 7) Gets the executing Generator object
ReflectionGenerator::getExecutingLine (PHP 7) Gets the currently executing line of the generator
ReflectionGenerator::getFunction (PHP 7) Gets the function name of the generator
ReflectionGenerator::getThis (PHP 7) Gets the $this value of the generator
ReflectionGenerator::getTrace (PHP 7) Gets the trace of the executing generator
ReflectionMethod::export (PHP 5, PHP 7) Export a reflection method
ReflectionMethod::getClosure (PHP 5 >= 5.4.0, PHP 7) Returns a dynamically created closure for the method
ReflectionMethod::getDeclaringClass (PHP 5, PHP 7) Gets declaring class for the reflected method
ReflectionMethod::getModifiers (PHP 5, PHP 7) Gets the method modifiers
ReflectionMethod::getPrototype (PHP 5 >= 5.1.2, PHP 7) Gets the method prototype (if there is one)
ReflectionMethod::invoke (PHP 5, PHP 7) Invoke
ReflectionMethod::invokeArgs (PHP 5 >= 5.1.2, PHP 7) Invoke args
ReflectionMethod::isAbstract (PHP 5, PHP 7) Checks if method is abstract
ReflectionMethod::isConstructor (PHP 5, PHP 7) Checks if method is a constructor
ReflectionMethod::isDestructor (PHP 5, PHP 7) Checks if method is a destructor
ReflectionMethod::isFinal (PHP 5, PHP 7) Checks if method is final
ReflectionMethod::isPrivate (PHP 5, PHP 7) Checks if method is private
ReflectionMethod::isProtected (PHP 5, PHP 7) Checks if method is protected
ReflectionMethod::isPublic (PHP 5, PHP 7) Checks if method is public
ReflectionMethod::isStatic (PHP 5, PHP 7) Checks if method is static
ReflectionMethod::setAccessible (PHP 5 >= 5.3.2, PHP 7) Set method accessibility
ReflectionNamedType::getName (PHP 7 >= 7.1.0) Get the text of the type hint
ReflectionObject::export (PHP 5, PHP 7) Export
ReflectionParameter::allowsNull (PHP 5, PHP 7) Checks if null is allowed
ReflectionParameter::canBePassedByValue (PHP 5 >= 5.4.0, PHP 7) Returns whether this parameter can be passed by value
ReflectionParameter::export (PHP 5, PHP 7) Exports
ReflectionParameter::getClass (PHP 5, PHP 7) Get the type hinted class
ReflectionParameter::getDeclaringClass (PHP 5 >= 5.1.3, PHP 7) Gets declaring class
ReflectionParameter::getDeclaringFunction (PHP 5 >= 5.1.3, PHP 7) Gets declaring function
ReflectionParameter::getDefaultValue (PHP 5 >= 5.0.3, PHP 7) Gets default parameter value
ReflectionParameter::getDefaultValueConstantName (PHP 5 >= 5.4.6, PHP 7) Returns the default value's constant name if default value is constant or null
ReflectionParameter::getName (PHP 5, PHP 7) Gets parameter name
ReflectionParameter::getPosition (PHP 5 >= 5.1.3, PHP 7) Gets parameter position
ReflectionParameter::getType (PHP 7) Gets a parameter's type
ReflectionParameter::hasType (PHP 7) Checks if parameter has a type
ReflectionParameter::isArray (PHP 5 >= 5.1.2, PHP 7) Checks if parameter expects an array
ReflectionParameter::isCallable (PHP 5 >= 5.4.0, PHP 7) Returns whether parameter MUST be callable
ReflectionParameter::isDefaultValueAvailable (PHP 5 >= 5.0.3, PHP 7) Checks if a default value is available
ReflectionParameter::isDefaultValueConstant (PHP 5 >= 5.4.6, PHP 7) Returns whether the default value of this parameter is a constant
ReflectionParameter::isOptional (PHP 5 >= 5.0.3, PHP 7) Checks if optional
ReflectionParameter::isPassedByReference (PHP 5, PHP 7) Checks if passed by reference
ReflectionParameter::isVariadic (PHP 5 >= 5.6.0, PHP 7) Checks if the parameter is variadic
ReflectionProperty::export (PHP 5, PHP 7) Export
ReflectionProperty::getDeclaringClass (PHP 5, PHP 7) Gets declaring class
ReflectionProperty::getDocComment (PHP 5 >= 5.1.0, PHP 7) Gets the property doc comment
ReflectionProperty::getModifiers (PHP 5, PHP 7) Gets the property modifiers
ReflectionProperty::getName (PHP 5, PHP 7) Gets property name
ReflectionProperty::getValue (PHP 5, PHP 7) Gets value
ReflectionProperty::isDefault (PHP 5, PHP 7) Checks if property is a default property
ReflectionProperty::isPrivate (PHP 5, PHP 7) Checks if property is private
ReflectionProperty::isProtected (PHP 5, PHP 7) Checks if property is protected
ReflectionProperty::isPublic (PHP 5, PHP 7) Checks if property is public
ReflectionProperty::isStatic (PHP 5, PHP 7) Checks if property is static
ReflectionProperty::setAccessible (PHP 5 >= 5.3.0, PHP 7) Set property accessibility
ReflectionProperty::setValue (PHP 5, PHP 7) Set property value
ReflectionType::allowsNull (PHP 7) Checks if null is allowed
ReflectionType::isBuiltin (PHP 7) Checks if it is a built-in type
ReflectionZendExtension::export (PHP 5 >= 5.4.0, PHP 7) Export
ReflectionZendExtension::getAuthor (PHP 5 >= 5.4.0, PHP 7) Gets author
ReflectionZendExtension::getCopyright (PHP 5 >= 5.4.0, PHP 7) Gets copyright
ReflectionZendExtension::getName (PHP 5 >= 5.4.0, PHP 7) Gets name
ReflectionZendExtension::getURL (PHP 5 >= 5.4.0, PHP 7) Gets URL
ReflectionZendExtension::getVersion (PHP 5 >= 5.4.0, PHP 7) Gets version
Reflector::export (PHP 5, PHP 7) Exports
RegexIterator::accept (PHP 5 >= 5.2.0, PHP 7) Get accept status
RegexIterator::getFlags (PHP 5 >= 5.2.0, PHP 7) Get flags
RegexIterator::getMode (PHP 5 >= 5.2.0, PHP 7) Returns operation mode
RegexIterator::getPregFlags (PHP 5 >= 5.2.0, PHP 7) Returns the regular expression flags
RegexIterator::getRegex (PHP 5 >= 5.4.0, PHP 7) Returns current regular expression
RegexIterator::setFlags (PHP 5 >= 5.2.0, PHP 7) Sets the flags
RegexIterator::setMode (PHP 5 >= 5.2.0, PHP 7) Sets the operation mode
RegexIterator::setPregFlags (PHP 5 >= 5.2.0, PHP 7) Sets the regular expression flags
ResourceBundle::count (PHP 5 >= 5.3.2, PHP 7, PECL intl >= 2.0.0) Get number of elements in the bundle
ResourceBundle::create (PHP 5 >= 5.3.2, PHP 7, PECL intl >= 2.0.0) Create a resource bundle
ResourceBundle::get (PHP 5 >= 5.3.2, PHP 7, PECL intl >= 2.0.0) Get data from the bundle
ResourceBundle::getErrorCode (PHP 5 >= 5.3.2, PHP 7, PECL intl >= 2.0.0) Get bundle's last error code
ResourceBundle::getErrorMessage (PHP 5 >= 5.3.2, PHP 7, PECL intl >= 2.0.0) Get bundle's last error message
RRDCreator::addArchive (PECL rrd >= 0.9.0) Adds RRA - archive of data values for each data source
RRDCreator::addDataSource (PECL rrd >= 0.9.0) Adds data source definition for RRD database
RRDCreator::save (PECL rrd >= 0.9.0) Saves the RRD database to a file
RRDGraph::save (PECL rrd >= 0.9.0) Saves the result of query into image
RRDGraph::saveVerbose (PECL rrd >= 0.9.0) Saves the RRD database query into image and returns the verbose information about generated graph
RRDGraph::setOptions (PECL rrd >= 0.9.0) Sets the options for rrd graph export
RRDUpdater::update (PECL rrd >= 0.9.0) Update the RRD database file
SeasLog::alert (PECL seaslog >=1.0.0) Record alert log information
SeasLog::analyzerCount (PECL seaslog >=1.1.6) Get log count by level, log_path and key_word
SeasLog::analyzerDetail (PECL seaslog >=1.1.6) Get log detail by level, log_path, key_word, start, limit, order
SeasLog::closeLoggerStream (PECL seaslog >=1.8.6) Manually release stream flow from logger
SeasLog::critical (PECL seaslog >=1.0.0) Record critical log information
SeasLog::debug (PECL seaslog >=1.0.0) Record debug log information
SeasLog::emergency (PECL seaslog >=1.0.0) Record emergency log information
SeasLog::error (PECL seaslog >=1.0.0) Record error log information
SeasLog::flushBuffer (PECL seaslog >=1.0.0) Flush logs buffer, dump to appender file, or send to remote api with tcp/udp
SeasLog::getBasePath (PECL seaslog >=1.0.0) Get SeasLog base path.
SeasLog::getBuffer (PECL seaslog >=1.0.0) Get the logs buffer in memory as array
SeasLog::getBufferEnabled (PECL seaslog >=1.0.0) Determin if buffer enabled
SeasLog::getDatetimeFormat (PECL seaslog >=1.0.0) Get SeasLog datetime format style
SeasLog::getLastLogger (PECL seaslog >=1.0.0) Get SeasLog last logger path
SeasLog::getRequestID (PECL seaslog >=1.0.0) Get SeasLog request_id differentiated requests
SeasLog::getRequestVariable (PECL seaslog >=1.9.0) Get SeasLog request variable
SeasLog::info (PECL seaslog >=1.0.0) Record info log information
SeasLog::log (PECL seaslog >=1.0.0) The Common Record Log Function
SeasLog::notice (PECL seaslog >=1.0.0) Record notice log information
SeasLog::setBasePath (PECL seaslog >=1.0.0) Set SeasLog base path
SeasLog::setDatetimeFormat (PECL seaslog >=1.0.0) Set SeasLog datetime format style
SeasLog::setLogger (PECL seaslog >=1.0.0) Set SeasLog logger name
SeasLog::setRequestID (PECL seaslog >=1.0.0) Set SeasLog request_id differentiated requests
SeasLog::setRequestVariable (PECL seaslog >=1.9.0) Manually set SeasLog request variable
SeasLog::warning (PECL seaslog >=1.0.0) Record warning log information
SeekableIterator::seek (PHP 5 >= 5.1.0, PHP 7) Seeks to a position
Serializable::serialize (PHP 5 >= 5.1.0, PHP 7) String representation of object
Serializable::unserialize (PHP 5 >= 5.1.0, PHP 7) Constructs the object
SessionHandler::close (PHP 5 >= 5.4.0, PHP 7) Close the session
SessionHandler::destroy (PHP 5 >= 5.4.0, PHP 7) Destroy a session
SessionHandler::gc (PHP 5 >= 5.4.0, PHP 7) Cleanup old sessions
SessionHandler::open (PHP 5 >= 5.4.0, PHP 7) Initialize session
SessionHandler::read (PHP 5 >= 5.4.0, PHP 7) Read session data
SessionHandler::write (PHP 5 >= 5.4.0, PHP 7) Write session data
SessionHandlerInterface::close (PHP 5 >= 5.4.0, PHP 7) Close the session
SessionHandlerInterface::destroy (PHP 5 >= 5.4.0, PHP 7) Destroy a session
SessionHandlerInterface::gc (PHP 5 >= 5.4.0, PHP 7) Cleanup old sessions
SessionHandlerInterface::open (PHP 5 >= 5.4.0, PHP 7) Initialize session
SessionHandlerInterface::read (PHP 5 >= 5.4.0, PHP 7) Read session data
SessionHandlerInterface::write (PHP 5 >= 5.4.0, PHP 7) Write session data
SessionUpdateTimestampHandlerInterface::updateTimestamp (PHP 7) Update timestamp
SessionUpdateTimestampHandlerInterface::validateId (PHP 7) Validate ID
SimpleXMLElement::addAttribute (PHP 5 >= 5.1.3, PHP 7) Adds an attribute to the SimpleXML element
SimpleXMLElement::addChild (PHP 5 >= 5.1.3, PHP 7) Adds a child element to the XML node
SimpleXMLElement::asXML (PHP 5, PHP 7) Return a well-formed XML string based on SimpleXML element
SimpleXMLElement::attributes (PHP 5, PHP 7) Identifies an element's attributes
SimpleXMLElement::children (PHP 5, PHP 7) Finds children of given node
SimpleXMLElement::count (PHP 5 >= 5.3.0, PHP 7) Counts the children of an element
SimpleXMLElement::getDocNamespaces (PHP 5 >= 5.1.2, PHP 7) Returns namespaces declared in document
SimpleXMLElement::getName (PHP 5 >= 5.1.3, PHP 7) Gets the name of the XML element
SimpleXMLElement::getNamespaces (PHP 5 >= 5.1.2, PHP 7) Returns namespaces used in document
SimpleXMLElement::registerXPathNamespace (PHP 5 >= 5.1.0, PHP 7) Creates a prefix/ns context for the next XPath query
SimpleXMLElement::xpath (PHP 5, PHP 7) Runs XPath query on XML data
SimpleXMLIterator::current (PHP 5, PHP 7) Returns the current element
SimpleXMLIterator::getChildren (PHP 5, PHP 7) Returns the sub-elements of the current element
SimpleXMLIterator::hasChildren (PHP 5, PHP 7) Checks whether the current element has sub elements
SimpleXMLIterator::key (PHP 5, PHP 7) Return current key
SimpleXMLIterator::next (PHP 5, PHP 7) Move to next element
SimpleXMLIterator::rewind (PHP 5, PHP 7) Rewind to the first element
SimpleXMLIterator::valid (PHP 5, PHP 7) Check whether the current element is valid
SNMP::close (PHP 5 >= 5.4.0, PHP 7) Close SNMP session
SNMP::get (PHP 5 >= 5.4.0, PHP 7) Fetch an SNMP object
SNMP::getErrno (PHP 5 >= 5.4.0, PHP 7) Get last error code
SNMP::getError (PHP 5 >= 5.4.0, PHP 7) Get last error message
SNMP::getnext (PHP 5 >= 5.4.0, PHP 7) Fetch an SNMP object which follows the given object id
SNMP::set (PHP 5 >= 5.4.0, PHP 7) Set the value of an SNMP object
SNMP::setSecurity (PHP 5 >= 5.4.0, PHP 7) Configures security-related SNMP v3 session parameters
SNMP::walk (PHP 5 >= 5.4.0, PHP 7) Fetch SNMP object subtree
SoapClient::SoapClient (PHP 5, PHP 7) SoapClient constructor
SoapFault::SoapFault (PHP 5, PHP 7) SoapFault constructor
SoapHeader::SoapHeader (PHP 5, PHP 7) SoapHeader constructor
SoapParam::SoapParam (PHP 5, PHP 7) SoapParam constructor
SoapServer::addFunction (PHP 5, PHP 7) Adds one or more functions to handle SOAP requests
SoapServer::addSoapHeader (PHP 5 >= 5.1.3, PHP 7) Add a SOAP header to the response
SoapServer::fault (PHP 5, PHP 7) Issue SoapServer fault indicating an error
SoapServer::getFunctions (PHP 5, PHP 7) Returns list of defined functions
SoapServer::handle (PHP 5, PHP 7) Handles a SOAP request
SoapServer::setClass (PHP 5, PHP 7) Sets the class which handles SOAP requests
SoapServer::setObject (PHP 5 >= 5.2.0, PHP 7) Sets the object which will be used to handle SOAP requests
SoapServer::setPersistence (PHP 5, PHP 7) Sets SoapServer persistence mode
SoapServer::SoapServer (PHP 5, PHP 7) SoapServer constructor
SoapVar::SoapVar (PHP 5, PHP 7) SoapVar constructor
SolrClient::addDocument (PECL solr >= 0.9.2) Adds a document to the index
SolrClient::addDocuments (PECL solr >= 0.9.2) Adds a collection of SolrInputDocument instances to the index
SolrClient::commit (PECL solr >= 0.9.2) Finalizes all add/deletes made to the index
SolrClient::deleteById (PECL solr >= 0.9.2) Delete by Id
SolrClient::deleteByIds (PECL solr >= 0.9.2) Deletes by Ids
SolrClient::deleteByQueries (PECL solr >= 0.9.2) Removes all documents matching any of the queries
SolrClient::deleteByQuery (PECL solr >= 0.9.2) Deletes all documents matching the given query
SolrClient::getById (PECL solr >= 2.2.0) Get Document By Id. Utilizes Solr Realtime Get (RTG)
SolrClient::getByIds (PECL solr >= 2.2.0) Get Documents by their Ids. Utilizes Solr Realtime Get (RTG)
SolrClient::getDebug (PECL solr >= 0.9.7) Returns the debug data for the last connection attempt
SolrClient::getOptions (PECL solr >= 0.9.6) Returns the client options set internally
SolrClient::optimize (PECL solr >= 0.9.2) Defragments the index
SolrClient::ping (PECL solr >= 0.9.2) Checks if Solr server is still up
SolrClient::query (PECL solr >= 0.9.2) Sends a query to the server
SolrClient::request (PECL solr >= 0.9.2) Sends a raw update request
SolrClient::rollback (PECL solr >= 0.9.2) Rollbacks all add/deletes made to the index since the last commit
SolrClient::setResponseWriter (PECL solr >= 0.9.11) Sets the response writer used to prepare the response from Solr
SolrClient::setServlet (PECL solr >= 0.9.2) Changes the specified servlet type to a new value
SolrClient::system (PECL solr >= 2.0.0) Retrieve Solr Server information
SolrClient::threads (PECL solr >= 0.9.2) Checks the threads status
SolrClientException::getInternalInfo (PECL solr >= 0.9.2) Returns internal information where the Exception was thrown
SolrCollapseFunction::getField (PECL solr >= 2.2.0) Returns the field that is being collapsed on
SolrCollapseFunction::getHint (PECL solr >= 2.2.0) Returns collapse hint
SolrCollapseFunction::getMax (PECL solr >= 2.2.0) Returns max parameter
SolrCollapseFunction::getMin (PECL solr >= 2.2.0) Returns min parameter
SolrCollapseFunction::getNullPolicy (PECL solr >= 2.2.0) Returns null policy
SolrCollapseFunction::getSize (PECL solr >= 2.2.0) Returns size parameter
SolrCollapseFunction::setField (PECL solr >= 2.2.0) Sets the field to collapse on
SolrCollapseFunction::setHint (PECL solr >= 2.2.0) Sets collapse hint
SolrCollapseFunction::setMax (PECL solr >= 2.2.0) Selects the group heads by the max value of a numeric field or function query
SolrCollapseFunction::setMin (PECL solr >= 2.2.0) Sets the initial size of the collapse data structures when collapsing on a numeric field only
SolrCollapseFunction::setNullPolicy (PECL solr >= 2.2.0) Sets the NULL Policy
SolrCollapseFunction::setSize (PECL solr >= 2.2.0) Sets the initial size of the collapse data structures when collapsing on a numeric field only
SolrDisMaxQuery::addBigramPhraseField (No version information available, might only be in Git) Adds a Phrase Bigram Field (pf2 parameter)
SolrDisMaxQuery::addBoostQuery (No version information available, might only be in Git) Adds a boost query field with value and optional boost (bq parameter)
SolrDisMaxQuery::addPhraseField (No version information available, might only be in Git) Adds a Phrase Field (pf parameter)
SolrDisMaxQuery::addQueryField (No version information available, might only be in Git) Add a query field with optional boost (qf parameter)
SolrDisMaxQuery::addTrigramPhraseField (No version information available, might only be in Git) Adds a Trigram Phrase Field (pf3 parameter)
SolrDisMaxQuery::addUserField (No version information available, might only be in Git) Adds a field to User Fields Parameter (uf)
SolrDisMaxQuery::removeBigramPhraseField (No version information available, might only be in Git) Removes phrase bigram field (pf2 parameter)
SolrDisMaxQuery::removeBoostQuery (No version information available, might only be in Git) Removes a boost query partial by field name (bq)
SolrDisMaxQuery::removePhraseField (No version information available, might only be in Git) Removes a Phrase Field (pf parameter)
SolrDisMaxQuery::removeQueryField (No version information available, might only be in Git) Removes a Query Field (qf parameter)
SolrDisMaxQuery::removeTrigramPhraseField (No version information available, might only be in Git) Removes a Trigram Phrase Field (pf3 parameter)
SolrDisMaxQuery::removeUserField (No version information available, might only be in Git) Removes a field from The User Fields Parameter (uf)
SolrDisMaxQuery::setBigramPhraseFields (No version information available, might only be in Git) Sets Bigram Phrase Fields and their boosts (and slops) using pf2 parameter
SolrDisMaxQuery::setBigramPhraseSlop (No version information available, might only be in Git) Sets Bigram Phrase Slop (ps2 parameter)
SolrDisMaxQuery::setBoostFunction (No version information available, might only be in Git) Sets a Boost Function (bf parameter)
SolrDisMaxQuery::setBoostQuery (No version information available, might only be in Git) Directly Sets Boost Query Parameter (bq)
SolrDisMaxQuery::setMinimumMatch (No version information available, might only be in Git) Set Minimum "Should" Match (mm)
SolrDisMaxQuery::setPhraseFields (No version information available, might only be in Git) Sets Phrase Fields and their boosts (and slops) using pf2 parameter
SolrDisMaxQuery::setPhraseSlop (No version information available, might only be in Git) Sets the default slop on phrase queries (ps parameter)
SolrDisMaxQuery::setQueryAlt (No version information available, might only be in Git) Set Query Alternate (q.alt parameter)
SolrDisMaxQuery::setQueryPhraseSlop (No version information available, might only be in Git) Specifies the amount of slop permitted on phrase queries explicitly included in the user's query string (qf parameter)
SolrDisMaxQuery::setTieBreaker (No version information available, might only be in Git) Sets Tie Breaker parameter (tie parameter)
SolrDisMaxQuery::setTrigramPhraseFields (No version information available, might only be in Git) Directly Sets Trigram Phrase Fields (pf3 parameter)
SolrDisMaxQuery::setTrigramPhraseSlop (No version information available, might only be in Git) Sets Trigram Phrase Slop (ps3 parameter)
SolrDisMaxQuery::setUserFields (No version information available, might only be in Git) Sets User Fields parameter (uf)
SolrDisMaxQuery::useDisMaxQueryParser (No version information available, might only be in Git) Switch QueryParser to be DisMax Query Parser
SolrDisMaxQuery::useEDisMaxQueryParser (No version information available, might only be in Git) Switch QueryParser to be EDisMax
SolrDocument::addField (PECL solr >= 0.9.2) Adds a field to the document
SolrDocument::clear (PECL solr >= 0.9.2) Drops all the fields in the document
SolrDocument::current (PECL solr >= 0.9.2) Retrieves the current field
SolrDocument::deleteField (PECL solr >= 0.9.2) Removes a field from the document
SolrDocument::fieldExists (PECL solr >= 0.9.2) Checks if a field exists in the document
SolrDocument::getChildDocuments (PECL solr >= 2.3.0) Returns an array of child documents (SolrDocument)
SolrDocument::getChildDocumentsCount (PECL solr >= 2.3.0) Returns the number of child documents
SolrDocument::getField (PECL solr >= 0.9.2) Retrieves a field by name
SolrDocument::getFieldCount (PECL solr >= 0.9.2) Returns the number of fields in this document
SolrDocument::getFieldNames (PECL solr >= 0.9.2) Returns an array of fields names in the document
SolrDocument::getInputDocument (PECL solr >= 0.9.2) Returns a SolrInputDocument equivalent of the object
SolrDocument::hasChildDocuments (PECL solr >= 2.3.0) Checks whether the document has any child documents
SolrDocument::key (PECL solr >= 0.9.2) Retrieves the current key
SolrDocument::merge (PECL solr >= 0.9.2) Merges source to the current SolrDocument
SolrDocument::next (PECL solr >= 0.9.2) Moves the internal pointer to the next field
SolrDocument::offsetExists (PECL solr >= 0.9.2) Checks if a particular field exists
SolrDocument::offsetGet (PECL solr >= 0.9.2) Retrieves a field
SolrDocument::offsetSet (PECL solr >= 0.9.2) Adds a field to the document
SolrDocument::offsetUnset (PECL solr >= 0.9.2) Removes a field
SolrDocument::reset (PECL solr >= 0.9.2) This is an alias to SolrDocument::clear()
SolrDocument::rewind (PECL solr >= 0.9.2) Resets the internal pointer to the beginning
SolrDocument::serialize (PECL solr >= 0.9.2) Used for custom serialization
SolrDocument::sort (PECL solr >= 0.9.2) Sorts the fields in the document
SolrDocument::toArray (PECL solr >= 0.9.2) Returns an array representation of the document
SolrDocument::unserialize (PECL solr >= 0.9.2) Custom serialization of SolrDocument objects
SolrDocument::valid (PECL solr >= 0.9.2) Checks if the current position internally is still valid
SolrException::getInternalInfo (PECL solr >= 0.9.2) Returns internal information where the Exception was thrown
SolrIllegalArgumentException::getInternalInfo (PECL solr >= 0.9.2) Returns internal information where the Exception was thrown
SolrIllegalOperationException::getInternalInfo (PECL solr >= 0.9.2) Returns internal information where the Exception was thrown
SolrInputDocument::addChildDocument (PECL solr >= 2.3.0) Adds a child document for block indexing
SolrInputDocument::addChildDocuments (PECL solr >= 2.3.0) Adds an array of child documents
SolrInputDocument::addField (PECL solr >= 0.9.2) Adds a field to the document
SolrInputDocument::clear (PECL solr >= 0.9.2) Resets the input document
SolrInputDocument::deleteField (PECL solr >= 0.9.2) Removes a field from the document
SolrInputDocument::fieldExists (PECL solr >= 0.9.2) Checks if a field exists
SolrInputDocument::getBoost (PECL solr >= 0.9.2) Retrieves the current boost value for the document
SolrInputDocument::getChildDocuments (PECL solr >= 2.3.0) Returns an array of child documents (SolrInputDocument)
SolrInputDocument::getChildDocumentsCount (PECL solr >= 2.3.0) Returns the number of child documents
SolrInputDocument::getField (PECL solr >= 0.9.2) Retrieves a field by name
SolrInputDocument::getFieldBoost (PECL solr >= 0.9.2) Retrieves the boost value for a particular field
SolrInputDocument::getFieldCount (PECL solr >= 0.9.2) Returns the number of fields in the document
SolrInputDocument::getFieldNames (PECL solr >= 0.9.2) Returns an array containing all the fields in the document
SolrInputDocument::hasChildDocuments (PECL solr >= 2.3.0) Returns true if the document has any child documents
SolrInputDocument::merge (PECL solr >= 0.9.2) Merges one input document into another
SolrInputDocument::reset (PECL solr >= 0.9.2) This is an alias of SolrInputDocument::clear
SolrInputDocument::setBoost (PECL solr >= 0.9.2) Sets the boost value for this document
SolrInputDocument::setFieldBoost (PECL solr >= 0.9.2) Sets the index-time boost value for a field
SolrInputDocument::sort (PECL solr >= 0.9.2) Sorts the fields within the document
SolrInputDocument::toArray (PECL solr >= 0.9.2) Returns an array representation of the input document
SolrObject::getPropertyNames (PECL solr >= 0.9.2) Returns an array of all the names of the properties
SolrObject::offsetExists (PECL solr >= 0.9.2) Checks if the property exists
SolrObject::offsetGet (PECL solr >= 0.9.2) Used to retrieve a property
SolrObject::offsetSet (PECL solr >= 0.9.2) Sets the value for a property
SolrObject::offsetUnset (PECL solr >= 0.9.2) Unsets the value for the property
SolrParams::add (PECL solr >= 0.9.2) This is an alias for SolrParams::addParam
SolrParams::addParam (PECL solr >= 0.9.2) Adds a parameter to the object
SolrParams::get (PECL solr >= 0.9.2) This is an alias for SolrParams::getParam
SolrParams::getParam (PECL solr >= 0.9.2) Returns a parameter value
SolrParams::getParams (PECL solr >= 0.9.2) Returns an array of non URL-encoded parameters
SolrParams::getPreparedParams (PECL solr >= 0.9.2) Returns an array of URL-encoded parameters
SolrParams::serialize (PECL solr >= 0.9.2) Used for custom serialization
SolrParams::set (PECL solr >= 0.9.2) An alias of SolrParams::setParam
SolrParams::setParam (PECL solr >= 0.9.2) Sets the parameter to the specified value
SolrParams::toString (PECL solr >= 0.9.2) Returns all the name-value pair parameters in the object
SolrParams::unserialize (PECL solr >= 0.9.2) Used for custom serialization
SolrPingResponse::getResponse (PECL solr >= 0.9.2) Returns the response from the server
SolrQuery::addExpandFilterQuery (PECL solr >= 2.2.0) Overrides main filter query, determines which documents to include in the main group
SolrQuery::addExpandSortField (PECL solr >= 2.2.0) Orders the documents within the expanded groups (expand.sort parameter)
SolrQuery::addFacetDateField (PECL solr >= 0.9.2) Maps to facet.date
SolrQuery::addFacetDateOther (PECL solr >= 0.9.2) Adds another facet.date.other parameter
SolrQuery::addFacetField (PECL solr >= 0.9.2) Adds another field to the facet
SolrQuery::addFacetQuery (PECL solr >= 0.9.2) Adds a facet query
SolrQuery::addField (PECL solr >= 0.9.2) Specifies which fields to return in the result
SolrQuery::addFilterQuery (PECL solr >= 0.9.2) Specifies a filter query
SolrQuery::addGroupField (PECL solr >= 2.2.0) Add a field to be used to group results
SolrQuery::addGroupFunction (PECL solr >= 2.2.0) Allows grouping results based on the unique values of a function query (group.func parameter)
SolrQuery::addGroupQuery (PECL solr >= 2.2.0) Allows grouping of documents that match the given query
SolrQuery::addGroupSortField (PECL solr >= 2.2.0) Add a group sort field (group.sort parameter)
SolrQuery::addHighlightField (PECL solr >= 0.9.2) Maps to hl.fl
SolrQuery::addMltField (PECL solr >= 0.9.2) Sets a field to use for similarity
SolrQuery::addMltQueryField (PECL solr >= 0.9.2) Maps to mlt.qf
SolrQuery::addSortField (PECL solr >= 0.9.2) Used to control how the results should be sorted
SolrQuery::addStatsFacet (PECL solr >= 0.9.2) Requests a return of sub results for values within the given facet
SolrQuery::addStatsField (PECL solr >= 0.9.2) Maps to stats.field parameter
SolrQuery::collapse (No version information available, might only be in Git) Collapses the result set to a single document per group
SolrQuery::getExpand (PECL solr >= 2.2.0) Returns true if group expanding is enabled
SolrQuery::getExpandFilterQueries (PECL solr >= 2.2.0) Returns the expand filter queries
SolrQuery::getExpandQuery (PECL solr >= 2.2.0) Returns the expand query expand.q parameter
SolrQuery::getExpandRows (PECL solr >= 2.2.0) Returns The number of rows to display in each group (expand.rows)
SolrQuery::getExpandSortFields (PECL solr >= 2.2.0) Returns an array of fields
SolrQuery::getFacet (PECL solr >= 0.9.2) Returns the value of the facet parameter
SolrQuery::getFacetDateEnd (PECL solr >= 0.9.2) Returns the value for the facet.date.end parameter
SolrQuery::getFacetDateFields (PECL solr >= 0.9.2) Returns all the facet.date fields
SolrQuery::getFacetDateGap (PECL solr >= 0.9.2) Returns the value of the facet.date.gap parameter
SolrQuery::getFacetDateHardEnd (PECL solr >= 0.9.2) Returns the value of the facet.date.hardend parameter
SolrQuery::getFacetDateOther (PECL solr >= 0.9.2) Returns the value for the facet.date.other parameter
SolrQuery::getFacetDateStart (PECL solr >= 0.9.2) Returns the lower bound for the first date range for all date faceting on this field
SolrQuery::getFacetFields (PECL solr >= 0.9.2) Returns all the facet fields
SolrQuery::getFacetLimit (PECL solr >= 0.9.2) Returns the maximum number of constraint counts that should be returned for the facet fields
SolrQuery::getFacetMethod (PECL solr >= 0.9.2) Returns the value of the facet.method parameter
SolrQuery::getFacetMinCount (PECL solr >= 0.9.2) Returns the minimum counts for facet fields should be included in the response
SolrQuery::getFacetMissing (PECL solr >= 0.9.2) Returns the current state of the facet.missing parameter
SolrQuery::getFacetOffset (PECL solr >= 0.9.2) Returns an offset into the list of constraints to be used for pagination
SolrQuery::getFacetPrefix (PECL solr >= 0.9.2) Returns the facet prefix
SolrQuery::getFacetQueries (PECL solr >= 0.9.2) Returns all the facet queries
SolrQuery::getFacetSort (PECL solr >= 0.9.2) Returns the facet sort type
SolrQuery::getFields (PECL solr >= 0.9.2) Returns the list of fields that will be returned in the response
SolrQuery::getFilterQueries (PECL solr >= 0.9.2) Returns an array of filter queries
SolrQuery::getGroup (PECL solr >= 2.2.0) Returns true if grouping is enabled
SolrQuery::getGroupCachePercent (PECL solr >= 2.2.0) Returns group cache percent value
SolrQuery::getGroupFacet (PECL solr >= 2.2.0) Returns the group.facet parameter value
SolrQuery::getGroupFields (PECL solr >= 2.2.0) Returns group fields (group.field parameter values)
SolrQuery::getGroupFormat (PECL solr >= 2.2.0) Returns the group.format value
SolrQuery::getGroupFunctions (PECL solr >= 2.2.0) Returns group functions (group.func parameter values)
SolrQuery::getGroupLimit (PECL solr >= 2.2.0) Returns the group.limit value
SolrQuery::getGroupMain (PECL solr >= 2.2.0) Returns the group.main value
SolrQuery::getGroupNGroups (PECL solr >= 2.2.0) Returns the group.ngroups value
SolrQuery::getGroupOffset (PECL solr >= 2.2.0) Returns the group.offset value
SolrQuery::getGroupQueries (PECL solr >= 2.2.0) Returns all the group.query parameter values
SolrQuery::getGroupSortFields (PECL solr >= 2.2.0) Returns the group.sort value
SolrQuery::getGroupTruncate (PECL solr >= 2.2.0) Returns the group.truncate value
SolrQuery::getHighlight (PECL solr >= 0.9.2) Returns the state of the hl parameter
SolrQuery::getHighlightAlternateField (PECL solr >= 0.9.2) Returns the highlight field to use as backup or default
SolrQuery::getHighlightFields (PECL solr >= 0.9.2) Returns all the fields that Solr should generate highlighted snippets for
SolrQuery::getHighlightFormatter (PECL solr >= 0.9.2) Returns the formatter for the highlighted output
SolrQuery::getHighlightFragmenter (PECL solr >= 0.9.2) Returns the text snippet generator for highlighted text
SolrQuery::getHighlightFragsize (PECL solr >= 0.9.2) Returns the number of characters of fragments to consider for highlighting
SolrQuery::getHighlightHighlightMultiTerm (PECL solr >= 0.9.2) Returns whether or not to enable highlighting for range/wildcard/fuzzy/prefix queries
SolrQuery::getHighlightMaxAlternateFieldLength (PECL solr >= 0.9.2) Returns the maximum number of characters of the field to return
SolrQuery::getHighlightMaxAnalyzedChars (PECL solr >= 0.9.2) Returns the maximum number of characters into a document to look for suitable snippets
SolrQuery::getHighlightMergeContiguous (PECL solr >= 0.9.2) Returns whether or not the collapse contiguous fragments into a single fragment
SolrQuery::getHighlightRegexMaxAnalyzedChars (PECL solr >= 0.9.2) Returns the maximum number of characters from a field when using the regex fragmenter
SolrQuery::getHighlightRegexPattern (PECL solr >= 0.9.2) Returns the regular expression for fragmenting
SolrQuery::getHighlightRegexSlop (PECL solr >= 0.9.2) Returns the deviation factor from the ideal fragment size
SolrQuery::getHighlightRequireFieldMatch (PECL solr >= 0.9.2) Returns if a field will only be highlighted if the query matched in this particular field
SolrQuery::getHighlightSimplePost (PECL solr >= 0.9.2) Returns the text which appears after a highlighted term
SolrQuery::getHighlightSimplePre (PECL solr >= 0.9.2) Returns the text which appears before a highlighted term
SolrQuery::getHighlightSnippets (PECL solr >= 0.9.2) Returns the maximum number of highlighted snippets to generate per field
SolrQuery::getHighlightUsePhraseHighlighter (PECL solr >= 0.9.2) Returns the state of the hl.usePhraseHighlighter parameter
SolrQuery::getMlt (PECL solr >= 0.9.2) Returns whether or not MoreLikeThis results should be enabled
SolrQuery::getMltBoost (PECL solr >= 0.9.2) Returns whether or not the query will be boosted by the interesting term relevance
SolrQuery::getMltCount (PECL solr >= 0.9.2) Returns the number of similar documents to return for each result
SolrQuery::getMltFields (PECL solr >= 0.9.2) Returns all the fields to use for similarity
SolrQuery::getMltMaxNumQueryTerms (PECL solr >= 0.9.2) Returns the maximum number of query terms that will be included in any generated query
SolrQuery::getMltMaxNumTokens (PECL solr >= 0.9.2) Returns the maximum number of tokens to parse in each document field that is not stored with TermVector support
SolrQuery::getMltMaxWordLength (PECL solr >= 0.9.2) Returns the maximum word length above which words will be ignored
SolrQuery::getMltMinDocFrequency (PECL solr >= 0.9.2) Returns the treshold frequency at which words will be ignored which do not occur in at least this many docs
SolrQuery::getMltMinTermFrequency (PECL solr >= 0.9.2) Returns the frequency below which terms will be ignored in the source document
SolrQuery::getMltMinWordLength (PECL solr >= 0.9.2) Returns the minimum word length below which words will be ignored
SolrQuery::getMltQueryFields (PECL solr >= 0.9.2) Returns the query fields and their boosts
SolrQuery::getQuery (PECL solr >= 0.9.2) Returns the main query
SolrQuery::getRows (PECL solr >= 0.9.2) Returns the maximum number of documents
SolrQuery::getSortFields (PECL solr >= 0.9.2) Returns all the sort fields
SolrQuery::getStart (PECL solr >= 0.9.2) Returns the offset in the complete result set
SolrQuery::getStats (PECL solr >= 0.9.2) Returns whether or not stats is enabled
SolrQuery::getStatsFacets (PECL solr >= 0.9.2) Returns all the stats facets that were set
SolrQuery::getStatsFields (PECL solr >= 0.9.2) Returns all the statistics fields
SolrQuery::getTerms (PECL solr >= 0.9.2) Returns whether or not the TermsComponent is enabled
SolrQuery::getTermsField (PECL solr >= 0.9.2) Returns the field from which the terms are retrieved
SolrQuery::getTermsIncludeLowerBound (PECL solr >= 0.9.2) Returns whether or not to include the lower bound in the result set
SolrQuery::getTermsIncludeUpperBound (PECL solr >= 0.9.2) Returns whether or not to include the upper bound term in the result set
SolrQuery::getTermsLimit (PECL solr >= 0.9.2) Returns the maximum number of terms Solr should return
SolrQuery::getTermsLowerBound (PECL solr >= 0.9.2) Returns the term to start at
SolrQuery::getTermsMaxCount (PECL solr >= 0.9.2) Returns the maximum document frequency
SolrQuery::getTermsMinCount (PECL solr >= 0.9.2) Returns the minimum document frequency to return in order to be included
SolrQuery::getTermsPrefix (PECL solr >= 0.9.2) Returns the term prefix
SolrQuery::getTermsReturnRaw (PECL solr >= 0.9.2) Whether or not to return raw characters
SolrQuery::getTermsSort (PECL solr >= 0.9.2) Returns an integer indicating how terms are sorted
SolrQuery::getTermsUpperBound (PECL solr >= 0.9.2) Returns the term to stop at
SolrQuery::getTimeAllowed (PECL solr >= 0.9.2) Returns the time in milliseconds allowed for the query to finish
SolrQuery::removeExpandFilterQuery (PECL solr >= 2.2.0) Removes an expand filter query
SolrQuery::removeExpandSortField (PECL solr >= 2.2.0) Removes an expand sort field from the expand.sort parameter
SolrQuery::removeFacetDateField (PECL solr >= 0.9.2) Removes one of the facet date fields
SolrQuery::removeFacetDateOther (PECL solr >= 0.9.2) Removes one of the facet.date.other parameters
SolrQuery::removeFacetField (PECL solr >= 0.9.2) Removes one of the facet.date parameters
SolrQuery::removeFacetQuery (PECL solr >= 0.9.2) Removes one of the facet.query parameters
SolrQuery::removeField (PECL solr >= 0.9.2) Removes a field from the list of fields
SolrQuery::removeFilterQuery (PECL solr >= 0.9.2) Removes a filter query
SolrQuery::removeHighlightField (PECL solr >= 0.9.2) Removes one of the fields used for highlighting
SolrQuery::removeMltField (PECL solr >= 0.9.2) Removes one of the moreLikeThis fields
SolrQuery::removeMltQueryField (PECL solr >= 0.9.2) Removes one of the moreLikeThis query fields
SolrQuery::removeSortField (PECL solr >= 0.9.2) Removes one of the sort fields
SolrQuery::removeStatsFacet (PECL solr >= 0.9.2) Removes one of the stats.facet parameters
SolrQuery::removeStatsField (PECL solr >= 0.9.2) Removes one of the stats.field parameters
SolrQuery::setEchoHandler (PECL solr >= 0.9.2) Toggles the echoHandler parameter
SolrQuery::setEchoParams (PECL solr >= 0.9.2) Determines what kind of parameters to include in the response
SolrQuery::setExpand (PECL solr >= 2.2.0) Enables/Disables the Expand Component
SolrQuery::setExpandQuery (PECL solr >= 2.2.0) Sets the expand.q parameter
SolrQuery::setExpandRows (PECL solr >= 2.2.0) Sets the number of rows to display in each group (expand.rows). Server Default 5
SolrQuery::setExplainOther (PECL solr >= 0.9.2) Sets the explainOther common query parameter
SolrQuery::setFacet (PECL solr >= 0.9.2) Maps to the facet parameter. Enables or disables facetting
SolrQuery::setFacetDateEnd (PECL solr >= 0.9.2) Maps to facet.date.end
SolrQuery::setFacetDateGap (PECL solr >= 0.9.2) Maps to facet.date.gap
SolrQuery::setFacetDateHardEnd (PECL solr >= 0.9.2) Maps to facet.date.hardend
SolrQuery::setFacetDateStart (PECL solr >= 0.9.2) Maps to facet.date.start
SolrQuery::setFacetEnumCacheMinDefaultFrequency (PECL solr >= 0.9.2) Sets the minimum document frequency used for determining term count
SolrQuery::setFacetLimit (PECL solr >= 0.9.2) Maps to facet.limit
SolrQuery::setFacetMethod (PECL solr >= 0.9.2) Specifies the type of algorithm to use when faceting a field
SolrQuery::setFacetMinCount (PECL solr >= 0.9.2) Maps to facet.mincount
SolrQuery::setFacetMissing (PECL solr >= 0.9.2) Maps to facet.missing
SolrQuery::setFacetOffset (PECL solr >= 0.9.2) Sets the offset into the list of constraints to allow for pagination
SolrQuery::setFacetPrefix (PECL solr >= 0.9.2) Specifies a string prefix with which to limits the terms on which to facet
SolrQuery::setFacetSort (PECL solr >= 0.9.2) Determines the ordering of the facet field constraints
SolrQuery::setGroup (PECL solr >= 2.2.0) Enable/Disable result grouping (group parameter)
SolrQuery::setGroupCachePercent (PECL solr >= 2.2.0) Enables caching for result grouping
SolrQuery::setGroupFacet (PECL solr >= 2.2.0) Sets group.facet parameter
SolrQuery::setGroupFormat (PECL solr >= 2.2.0) Sets the group format, result structure (group.format parameter)
SolrQuery::setGroupLimit (PECL solr >= 2.2.0) Specifies the number of results to return for each group. The server default value is 1
SolrQuery::setGroupMain (PECL solr >= 2.2.0) If true, the result of the first field grouping command is used as the main result list in the response, using group.format=simple
SolrQuery::setGroupNGroups (PECL solr >= 2.2.0) If true, Solr includes the number of groups that have matched the query in the results
SolrQuery::setGroupOffset (PECL solr >= 2.2.0) Sets the group.offset parameter
SolrQuery::setGroupTruncate (PECL solr >= 2.2.0) If true, facet counts are based on the most relevant document of each group matching the query
SolrQuery::setHighlight (PECL solr >= 0.9.2) Enables or disables highlighting
SolrQuery::setHighlightAlternateField (PECL solr >= 0.9.2) Specifies the backup field to use
SolrQuery::setHighlightFormatter (PECL solr >= 0.9.2) Specify a formatter for the highlight output
SolrQuery::setHighlightFragmenter (PECL solr >= 0.9.2) Sets a text snippet generator for highlighted text
SolrQuery::setHighlightFragsize (PECL solr >= 0.9.2) The size of fragments to consider for highlighting
SolrQuery::setHighlightHighlightMultiTerm (PECL solr >= 0.9.2) Use SpanScorer to highlight phrase terms
SolrQuery::setHighlightMaxAlternateFieldLength (PECL solr >= 0.9.2) Sets the maximum number of characters of the field to return
SolrQuery::setHighlightMaxAnalyzedChars (PECL solr >= 0.9.2) Specifies the number of characters into a document to look for suitable snippets
SolrQuery::setHighlightMergeContiguous (PECL solr >= 0.9.2) Whether or not to collapse contiguous fragments into a single fragment
SolrQuery::setHighlightRegexMaxAnalyzedChars (PECL solr >= 0.9.2) Specify the maximum number of characters to analyze
SolrQuery::setHighlightRegexPattern (PECL solr >= 0.9.2) Specify the regular expression for fragmenting
SolrQuery::setHighlightRegexSlop (PECL solr >= 0.9.2) Sets the factor by which the regex fragmenter can stray from the ideal fragment size
SolrQuery::setHighlightRequireFieldMatch (PECL solr >= 0.9.2) Require field matching during highlighting
SolrQuery::setHighlightSimplePost (PECL solr >= 0.9.2) Sets the text which appears after a highlighted term
SolrQuery::setHighlightSimplePre (PECL solr >= 0.9.2) Sets the text which appears before a highlighted term
SolrQuery::setHighlightSnippets (PECL solr >= 0.9.2) Sets the maximum number of highlighted snippets to generate per field
SolrQuery::setHighlightUsePhraseHighlighter (PECL solr >= 0.9.2) Whether to highlight phrase terms only when they appear within the query phrase
SolrQuery::setMlt (PECL solr >= 0.9.2) Enables or disables moreLikeThis
SolrQuery::setMltBoost (PECL solr >= 0.9.2) Set if the query will be boosted by the interesting term relevance
SolrQuery::setMltCount (PECL solr >= 0.9.2) Set the number of similar documents to return for each result
SolrQuery::setMltMaxNumQueryTerms (PECL solr >= 0.9.2) Sets the maximum number of query terms included
SolrQuery::setMltMaxNumTokens (PECL solr >= 0.9.2) Specifies the maximum number of tokens to parse
SolrQuery::setMltMaxWordLength (PECL solr >= 0.9.2) Sets the maximum word length
SolrQuery::setMltMinDocFrequency (PECL solr >= 0.9.2) Sets the mltMinDoc frequency
SolrQuery::setMltMinTermFrequency (PECL solr >= 0.9.2) Sets the frequency below which terms will be ignored in the source docs
SolrQuery::setMltMinWordLength (PECL solr >= 0.9.2) Sets the minimum word length
SolrQuery::setOmitHeader (PECL solr >= 0.9.2) Exclude the header from the returned results
SolrQuery::setQuery (PECL solr >= 0.9.2) Sets the search query
SolrQuery::setRows (PECL solr >= 0.9.2) Specifies the maximum number of rows to return in the result
SolrQuery::setShowDebugInfo (PECL solr >= 0.9.2) Flag to show debug information
SolrQuery::setStart (PECL solr >= 0.9.2) Specifies the number of rows to skip
SolrQuery::setStats (PECL solr >= 0.9.2) Enables or disables the Stats component
SolrQuery::setTerms (PECL solr >= 0.9.2) Enables or disables the TermsComponent
SolrQuery::setTermsField (PECL solr >= 0.9.2) Sets the name of the field to get the Terms from
SolrQuery::setTermsIncludeLowerBound (PECL solr >= 0.9.2) Include the lower bound term in the result set
SolrQuery::setTermsIncludeUpperBound (PECL solr >= 0.9.2) Include the upper bound term in the result set
SolrQuery::setTermsLimit (PECL solr >= 0.9.2) Sets the maximum number of terms to return
SolrQuery::setTermsLowerBound (PECL solr >= 0.9.2) Specifies the Term to start from
SolrQuery::setTermsMaxCount (PECL solr >= 0.9.2) Sets the maximum document frequency
SolrQuery::setTermsMinCount (PECL solr >= 0.9.2) Sets the minimum document frequency
SolrQuery::setTermsPrefix (PECL solr >= 0.9.2) Restrict matches to terms that start with the prefix
SolrQuery::setTermsReturnRaw (PECL solr >= 0.9.2) Return the raw characters of the indexed term
SolrQuery::setTermsSort (PECL solr >= 0.9.2) Specifies how to sort the returned terms
SolrQuery::setTermsUpperBound (PECL solr >= 0.9.2) Sets the term to stop at
SolrQuery::setTimeAllowed (PECL solr >= 0.9.2) The time allowed for search to finish
SolrResponse::getDigestedResponse (PECL solr >= 0.9.2) Returns the XML response as serialized PHP data
SolrResponse::getHttpStatus (PECL solr >= 0.9.2) Returns the HTTP status of the response
SolrResponse::getHttpStatusMessage (PECL solr >= 0.9.2) Returns more details on the HTTP status
SolrResponse::getRawRequest (PECL solr >= 0.9.2) Returns the raw request sent to the Solr server
SolrResponse::getRawRequestHeaders (PECL solr >= 0.9.2) Returns the raw request headers sent to the Solr server
SolrResponse::getRawResponse (PECL solr >= 0.9.2) Returns the raw response from the server
SolrResponse::getRawResponseHeaders (PECL solr >= 0.9.2) Returns the raw response headers from the server
SolrResponse::getRequestUrl (PECL solr >= 0.9.2) Returns the full URL the request was sent to
SolrResponse::getResponse (PECL solr >= 0.9.2) Returns a SolrObject representing the XML response from the server
SolrResponse::setParseMode (PECL solr >= 0.9.2) Sets the parse mode
SolrResponse::success (PECL solr >= 0.9.2) Was the request a success
SolrServerException::getInternalInfo (PECL solr >= 1.1.0, >=2.0.0) Returns internal information where the Exception was thrown
SolrUtils::digestXmlResponse (PECL solr >= 0.9.2) Parses an response XML string into a SolrObject
SolrUtils::escapeQueryChars (PECL solr >= 0.9.2) Escapes a lucene query string
SolrUtils::getSolrVersion (PECL solr >= 0.9.2) Returns the current version of the Solr extension
SolrUtils::queryPhrase (PECL solr >= 0.9.2) Prepares a phrase from an unescaped lucene string
SphinxClient::addQuery (PECL sphinx >= 0.1.0) Add query to multi-query batch
SphinxClient::buildExcerpts (PECL sphinx >= 0.1.0) Build text snippets
SphinxClient::buildKeywords (PECL sphinx >= 0.1.0) Extract keywords from query
SphinxClient::close (PECL sphinx >= 1.0.3) Closes previously opened persistent connection
SphinxClient::escapeString (PECL sphinx >= 0.1.0) Escape special characters
SphinxClient::getLastError (PECL sphinx >= 0.1.0) Get the last error message
SphinxClient::getLastWarning (PECL sphinx >= 0.1.0) Get the last warning
SphinxClient::open (PECL sphinx >= 1.0.3) Opens persistent connection to the server
SphinxClient::query (PECL sphinx >= 0.1.0) Execute search query
SphinxClient::resetFilters (PECL sphinx >= 0.1.0) Clear all filters
SphinxClient::resetGroupBy (PECL sphinx >= 0.1.0) Clear all group-by settings
SphinxClient::runQueries (PECL sphinx >= 0.1.0) Run a batch of search queries
SphinxClient::setArrayResult (PECL sphinx >= 0.1.0) Change the format of result set array
SphinxClient::setConnectTimeout (PECL sphinx >= 0.1.0) Set connection timeout
SphinxClient::setFieldWeights (PECL sphinx >= 0.1.0) Set field weights
SphinxClient::setFilter (PECL sphinx >= 0.1.0) Add new integer values set filter
SphinxClient::setFilterFloatRange (PECL sphinx >= 0.1.0) Add new float range filter
SphinxClient::setFilterRange (PECL sphinx >= 0.1.0) Add new integer range filter
SphinxClient::setGeoAnchor (PECL sphinx >= 0.1.0) Set anchor point for a geosphere distance calculations
SphinxClient::setGroupBy (PECL sphinx >= 0.1.0) Set grouping attribute
SphinxClient::setGroupDistinct (PECL sphinx >= 0.1.0) Set attribute name for per-group distinct values count calculations
SphinxClient::setIDRange (PECL sphinx >= 0.1.0) Set a range of accepted document IDs
SphinxClient::setIndexWeights (PECL sphinx >= 0.1.0) Set per-index weights
SphinxClient::setLimits (PECL sphinx >= 0.1.0) Set offset and limit of the result set
SphinxClient::setMatchMode (PECL sphinx >= 0.1.0) Set full-text query matching mode
SphinxClient::setMaxQueryTime (PECL sphinx >= 0.1.0) Set maximum query time
SphinxClient::setOverride (PECL sphinx >= 1.0.3) Sets temporary per-document attribute value overrides
SphinxClient::setRankingMode (PECL sphinx >= 0.1.0) Set ranking mode
SphinxClient::setRetries (PECL sphinx >= 0.1.0) Set retry count and delay
SphinxClient::setSelect (PECL sphinx >= 1.0.1) Set select clause
SphinxClient::setServer (PECL sphinx >= 0.1.0) Set searchd host and port
SphinxClient::setSortMode (PECL sphinx >= 0.1.0) Set matches sorting mode
SphinxClient::status (PECL sphinx >= 1.0.3) Queries searchd status
SphinxClient::updateAttributes (PECL sphinx >= 0.1.0) Update document attributes
SplDoublyLinkedList::add (PHP 5 >= 5.5.0, PHP 7) Add/insert a new value at the specified index
SplDoublyLinkedList::bottom (PHP 5 >= 5.3.0, PHP 7) Peeks at the node from the beginning of the doubly linked list
SplDoublyLinkedList::count (PHP 5 >= 5.3.0, PHP 7) Counts the number of elements in the doubly linked list
SplDoublyLinkedList::current (PHP 5 >= 5.3.0, PHP 7) Return current array entry
SplDoublyLinkedList::getIteratorMode (PHP 5 >= 5.3.0, PHP 7) Returns the mode of iteration
SplDoublyLinkedList::isEmpty (PHP 5 >= 5.3.0, PHP 7) Checks whether the doubly linked list is empty
SplDoublyLinkedList::key (PHP 5 >= 5.3.0, PHP 7) Return current node index
SplDoublyLinkedList::next (PHP 5 >= 5.3.0, PHP 7) Move to next entry
SplDoublyLinkedList::offsetExists (PHP 5 >= 5.3.0, PHP 7) Returns whether the requested $index exists
SplDoublyLinkedList::offsetGet (PHP 5 >= 5.3.0, PHP 7) Returns the value at the specified $index
SplDoublyLinkedList::offsetSet (PHP 5 >= 5.3.0, PHP 7) Sets the value at the specified $index to $newval
SplDoublyLinkedList::offsetUnset (PHP 5 >= 5.3.0, PHP 7) Unsets the value at the specified $index
SplDoublyLinkedList::pop (PHP 5 >= 5.3.0, PHP 7) Pops a node from the end of the doubly linked list
SplDoublyLinkedList::prev (PHP 5 >= 5.3.0, PHP 7) Move to previous entry
SplDoublyLinkedList::push (PHP 5 >= 5.3.0, PHP 7) Pushes an element at the end of the doubly linked list
SplDoublyLinkedList::rewind (PHP 5 >= 5.3.0, PHP 7) Rewind iterator back to the start
SplDoublyLinkedList::serialize (PHP 5 >= 5.4.0, PHP 7) Serializes the storage
SplDoublyLinkedList::setIteratorMode (PHP 5 >= 5.3.0, PHP 7) Sets the mode of iteration
SplDoublyLinkedList::shift (PHP 5 >= 5.3.0, PHP 7) Shifts a node from the beginning of the doubly linked list
SplDoublyLinkedList::top (PHP 5 >= 5.3.0, PHP 7) Peeks at the node from the end of the doubly linked list
SplDoublyLinkedList::unserialize (PHP 5 >= 5.4.0, PHP 7) Unserializes the storage
SplDoublyLinkedList::unshift (PHP 5 >= 5.3.0, PHP 7) Prepends the doubly linked list with an element
SplDoublyLinkedList::valid (PHP 5 >= 5.3.0, PHP 7) Check whether the doubly linked list contains more nodes
SplEnum::getConstList (PECL spl_types >= 0.1.0) Returns all consts (possible values) as an array
SplFileInfo::getATime (PHP 5 >= 5.1.2, PHP 7) Gets last access time of the file
SplFileInfo::getBasename (PHP 5 >= 5.2.2, PHP 7) Gets the base name of the file
SplFileInfo::getCTime (PHP 5 >= 5.1.2, PHP 7) Gets the inode change time
SplFileInfo::getExtension (PHP 5 >= 5.3.6, PHP 7) Gets the file extension
SplFileInfo::getFileInfo (PHP 5 >= 5.1.2, PHP 7) Gets an SplFileInfo object for the file
SplFileInfo::getFilename (PHP 5 >= 5.1.2, PHP 7) Gets the filename
SplFileInfo::getGroup (PHP 5 >= 5.1.2, PHP 7) Gets the file group
SplFileInfo::getInode (PHP 5 >= 5.1.2, PHP 7) Gets the inode for the file
SplFileInfo::getLinkTarget (PHP 5 >= 5.2.2, PHP 7) Gets the target of a link
SplFileInfo::getMTime (PHP 5 >= 5.1.2, PHP 7) Gets the last modified time
SplFileInfo::getOwner (PHP 5 >= 5.1.2, PHP 7) Gets the owner of the file
SplFileInfo::getPath (PHP 5 >= 5.1.2, PHP 7) Gets the path without filename
SplFileInfo::getPathInfo (PHP 5 >= 5.1.2, PHP 7) Gets an SplFileInfo object for the path
SplFileInfo::getPathname (PHP 5 >= 5.1.2, PHP 7) Gets the path to the file
SplFileInfo::getPerms (PHP 5 >= 5.1.2, PHP 7) Gets file permissions
SplFileInfo::getRealPath (PHP 5 >= 5.2.2, PHP 7) Gets absolute path to file
SplFileInfo::getSize (PHP 5 >= 5.1.2, PHP 7) Gets file size
SplFileInfo::getType (PHP 5 >= 5.1.2, PHP 7) Gets file type
SplFileInfo::isDir (PHP 5 >= 5.1.2, PHP 7) Tells if the file is a directory
SplFileInfo::isExecutable (PHP 5 >= 5.1.2, PHP 7) Tells if the file is executable
SplFileInfo::isFile (PHP 5 >= 5.1.2, PHP 7) Tells if the object references a regular file
SplFileInfo::isLink (PHP 5 >= 5.1.2, PHP 7) Tells if the file is a link
SplFileInfo::isReadable (PHP 5 >= 5.1.2, PHP 7) Tells if file is readable
SplFileInfo::isWritable (PHP 5 >= 5.1.2, PHP 7) Tells if the entry is writable
SplFileInfo::openFile (PHP 5 >= 5.1.2, PHP 7) Gets an SplFileObject object for the file
SplFileInfo::setFileClass (PHP 5 >= 5.1.2, PHP 7) Sets the class used with SplFileInfo::openFile()
SplFileInfo::setInfoClass (PHP 5 >= 5.1.2, PHP 7) Sets the class used with SplFileInfo::getFileInfo()
SplFileObject::current (PHP 5 >= 5.1.0, PHP 7) Retrieve current line of file
SplFileObject::eof (PHP 5 >= 5.1.0, PHP 7) Reached end of file
SplFileObject::fflush (PHP 5 >= 5.1.0, PHP 7) Flushes the output to the file
SplFileObject::fgetc (PHP 5 >= 5.1.0, PHP 7) Gets character from file
SplFileObject::fgetcsv (PHP 5 >= 5.1.0, PHP 7) Gets line from file and parse as CSV fields
SplFileObject::fgets (PHP 5 >= 5.1.0, PHP 7) Gets line from file
SplFileObject::fgetss (PHP 5 >= 5.1.0, PHP 7) Gets line from file and strip HTML tags
SplFileObject::flock (PHP 5 >= 5.1.0, PHP 7) Portable file locking
SplFileObject::fpassthru (PHP 5 >= 5.1.0, PHP 7) Output all remaining data on a file pointer
SplFileObject::fputcsv (PHP 5 >= 5.4.0, PHP 7) Write a field array as a CSV line
SplFileObject::fread (PHP 5 >= 5.5.11, PHP 7) Read from file
SplFileObject::fscanf (PHP 5 >= 5.1.0, PHP 7) Parses input from file according to a format
SplFileObject::fseek (PHP 5 >= 5.1.0, PHP 7) Seek to a position
SplFileObject::fstat (PHP 5 >= 5.1.0, PHP 7) Gets information about the file
SplFileObject::ftell (PHP 5 >= 5.1.0, PHP 7) Return current file position
SplFileObject::ftruncate (PHP 5 >= 5.1.0, PHP 7) Truncates the file to a given length
SplFileObject::fwrite (PHP 5 >= 5.1.0, PHP 7) Write to file
SplFileObject::getChildren (PHP 5 >= 5.1.0, PHP 7) No purpose
SplFileObject::getCsvControl (PHP 5 >= 5.2.0, PHP 7) Get the delimiter, enclosure and escape character for CSV
SplFileObject::getFlags (PHP 5 >= 5.1.0, PHP 7) Gets flags for the SplFileObject
SplFileObject::getMaxLineLen (PHP 5 >= 5.1.0, PHP 7) Get maximum line length
SplFileObject::hasChildren (PHP 5 >= 5.1.2, PHP 7) SplFileObject does not have children
SplFileObject::key (PHP 5 >= 5.1.0, PHP 7) Get line number
SplFileObject::next (PHP 5 >= 5.1.0, PHP 7) Read next line
SplFileObject::rewind (PHP 5 >= 5.1.0, PHP 7) Rewind the file to the first line
SplFileObject::seek (PHP 5 >= 5.1.0, PHP 7) Seek to specified line
SplFileObject::setCsvControl (PHP 5 >= 5.2.0, PHP 7) Set the delimiter, enclosure and escape character for CSV
SplFileObject::setFlags (PHP 5 >= 5.1.0, PHP 7) Sets flags for the SplFileObject
SplFileObject::setMaxLineLen (PHP 5 >= 5.1.0, PHP 7) Set maximum line length
SplFileObject::valid (PHP 5 >= 5.1.0, PHP 7) Not at EOF
SplFixedArray::count (PHP 5 >= 5.3.0, PHP 7) Returns the size of the array
SplFixedArray::current (PHP 5 >= 5.3.0, PHP 7) Return current array entry
SplFixedArray::fromArray (PHP 5 >= 5.3.0, PHP 7) Import a PHP array in a SplFixedArray instance
SplFixedArray::getSize (PHP 5 >= 5.3.0, PHP 7) Gets the size of the array
SplFixedArray::key (PHP 5 >= 5.3.0, PHP 7) Return current array index
SplFixedArray::next (PHP 5 >= 5.3.0, PHP 7) Move to next entry
SplFixedArray::offsetExists (PHP 5 >= 5.3.0, PHP 7) Returns whether the requested index exists
SplFixedArray::offsetGet (PHP 5 >= 5.3.0, PHP 7) Returns the value at the specified index
SplFixedArray::offsetSet (PHP 5 >= 5.3.0, PHP 7) Sets a new value at a specified index
SplFixedArray::offsetUnset (PHP 5 >= 5.3.0, PHP 7) Unsets the value at the specified $index
SplFixedArray::rewind (PHP 5 >= 5.3.0, PHP 7) Rewind iterator back to the start
SplFixedArray::setSize (PHP 5 >= 5.3.0, PHP 7) Change the size of an array
SplFixedArray::toArray (PHP 5 >= 5.3.0, PHP 7) Returns a PHP array from the fixed array
SplFixedArray::valid (PHP 5 >= 5.3.0, PHP 7) Check whether the array contains more elements
SplHeap::compare (PHP 5 >= 5.3.0, PHP 7) Compare elements in order to place them correctly in the heap while sifting up
SplHeap::count (PHP 5 >= 5.3.0, PHP 7) Counts the number of elements in the heap
SplHeap::current (PHP 5 >= 5.3.0, PHP 7) Return current node pointed by the iterator
SplHeap::extract (PHP 5 >= 5.3.0, PHP 7) Extracts a node from top of the heap and sift up
SplHeap::insert (PHP 5 >= 5.3.0, PHP 7) Inserts an element in the heap by sifting it up
SplHeap::isCorrupted (PHP 7) Tells if the heap is in a corrupted state
SplHeap::isEmpty (PHP 5 >= 5.3.0, PHP 7) Checks whether the heap is empty
SplHeap::key (PHP 5 >= 5.3.0, PHP 7) Return current node index
SplHeap::next (PHP 5 >= 5.3.0, PHP 7) Move to the next node
SplHeap::recoverFromCorruption (PHP 5 >= 5.3.0, PHP 7) Recover from the corrupted state and allow further actions on the heap
SplHeap::rewind (PHP 5 >= 5.3.0, PHP 7) Rewind iterator back to the start (no-op)
SplHeap::top (PHP 5 >= 5.3.0, PHP 7) Peeks at the node from the top of the heap
SplHeap::valid (PHP 5 >= 5.3.0, PHP 7) Check whether the heap contains more nodes
SplMaxHeap::compare (PHP 5 >= 5.3.0, PHP 7) Compare elements in order to place them correctly in the heap while sifting up
SplMinHeap::compare (PHP 5 >= 5.3.0, PHP 7) Compare elements in order to place them correctly in the heap while sifting up
SplObjectStorage::addAll (PHP 5 >= 5.3.0, PHP 7) Adds all objects from another storage
SplObjectStorage::attach (PHP 5 >= 5.1.0, PHP 7) Adds an object in the storage
SplObjectStorage::contains (PHP 5 >= 5.1.0, PHP 7) Checks if the storage contains a specific object
SplObjectStorage::count (PHP 5 >= 5.1.0, PHP 7) Returns the number of objects in the storage
SplObjectStorage::current (PHP 5 >= 5.1.0, PHP 7) Returns the current storage entry
SplObjectStorage::detach (PHP 5 >= 5.1.0, PHP 7) Removes an object
SplObjectStorage::getHash (PHP 5 >= 5.4.0, PHP 7) Calculate a unique identifier for the contained objects
SplObjectStorage::getInfo (PHP 5 >= 5.3.0, PHP 7) Returns the data associated with the current iterator entry
SplObjectStorage::key (PHP 5 >= 5.1.0, PHP 7) Returns the index at which the iterator currently is
SplObjectStorage::next (PHP 5 >= 5.1.0, PHP 7) Move to the next entry
SplObjectStorage::offsetExists (PHP 5 >= 5.3.0, PHP 7) Checks whether an object exists in the storage
SplObjectStorage::offsetGet (PHP 5 >= 5.3.0, PHP 7) Returns the data associated with an object
SplObjectStorage::offsetSet (PHP 5 >= 5.3.0, PHP 7) Associates data to an object in the storage
SplObjectStorage::offsetUnset (PHP 5 >= 5.3.0, PHP 7) Removes an object from the storage
SplObjectStorage::removeAll (PHP 5 >= 5.3.0, PHP 7) Removes objects contained in another storage from the current storage
SplObjectStorage::removeAllExcept (PHP 5 >= 5.3.6, PHP 7) Removes all objects except for those contained in another storage from the current storage
SplObjectStorage::rewind (PHP 5 >= 5.1.0, PHP 7) Rewind the iterator to the first storage element
SplObjectStorage::serialize (PHP 5 >= 5.2.2, PHP 7) Serializes the storage
SplObjectStorage::setInfo (PHP 5 >= 5.3.0, PHP 7) Sets the data associated with the current iterator entry
SplObjectStorage::unserialize (PHP 5 >= 5.2.2, PHP 7) Unserializes a storage from its string representation
SplObjectStorage::valid (PHP 5 >= 5.1.0, PHP 7) Returns if the current iterator entry is valid
SplObserver::update (PHP 5 >= 5.1.0, PHP 7) Receive update from subject
SplPriorityQueue::compare (PHP 5 >= 5.3.0, PHP 7) Compare priorities in order to place elements correctly in the heap while sifting up
SplPriorityQueue::count (PHP 5 >= 5.3.0, PHP 7) Counts the number of elements in the queue
SplPriorityQueue::current (PHP 5 >= 5.3.0, PHP 7) Return current node pointed by the iterator
SplPriorityQueue::extract (PHP 5 >= 5.3.0, PHP 7) Extracts a node from top of the heap and sift up
SplPriorityQueue::getExtractFlags (PHP 7) Get the flags of extraction
SplPriorityQueue::insert (PHP 5 >= 5.3.0, PHP 7) Inserts an element in the queue by sifting it up
SplPriorityQueue::isCorrupted (No version information available, might only be in Git) Tells if the priority queue is in a corrupted state
SplPriorityQueue::isEmpty (PHP 5 >= 5.3.0, PHP 7) Checks whether the queue is empty
SplPriorityQueue::key (PHP 5 >= 5.3.0, PHP 7) Return current node index
SplPriorityQueue::next (PHP 5 >= 5.3.0, PHP 7) Move to the next node
SplPriorityQueue::recoverFromCorruption (PHP 5 >= 5.3.0, PHP 7) Recover from the corrupted state and allow further actions on the queue
SplPriorityQueue::rewind (PHP 5 >= 5.3.0, PHP 7) Rewind iterator back to the start (no-op)
SplPriorityQueue::setExtractFlags (PHP 5 >= 5.3.0, PHP 7) Sets the mode of extraction
SplPriorityQueue::top (PHP 5 >= 5.3.0, PHP 7) Peeks at the node from the top of the queue
SplPriorityQueue::valid (PHP 5 >= 5.3.0, PHP 7) Check whether the queue contains more nodes
SplQueue::dequeue (PHP 5 >= 5.3.0, PHP 7) Dequeues a node from the queue
SplQueue::enqueue (PHP 5 >= 5.3.0, PHP 7) Adds an element to the queue
SplQueue::setIteratorMode (PHP 5 >= 5.3.0, PHP 7) Sets the mode of iteration
SplStack::setIteratorMode (PHP 5 >= 5.3.0, PHP 7) Sets the mode of iteration
SplSubject::attach (PHP 5 >= 5.1.0, PHP 7) Attach an SplObserver
SplSubject::detach (PHP 5 >= 5.1.0, PHP 7) Detach an observer
SplSubject::notify (PHP 5 >= 5.1.0, PHP 7) Notify an observer
Spoofchecker::areConfusable (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Checks if given strings can be confused
Spoofchecker::isSuspicious (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Checks if a given text contains any suspicious characters
Spoofchecker::setAllowedLocales (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Locales to use when running checks
Spoofchecker::setChecks (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Set the checks to run
SQLite3::busyTimeout (PHP 5 >= 5.3.3, PHP 7) Sets the busy connection handler
SQLite3::changes (PHP 5 >= 5.3.0, PHP 7) Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement
SQLite3::close (PHP 5 >= 5.3.0, PHP 7) Closes the database connection
SQLite3::createAggregate (PHP 5 >= 5.3.0, PHP 7) Registers a PHP function for use as an SQL aggregate function
SQLite3::createCollation (PHP 5 >= 5.3.11, PHP 7) Registers a PHP function for use as an SQL collating function
SQLite3::createFunction (PHP 5 >= 5.3.0, PHP 7) Registers a PHP function for use as an SQL scalar function
SQLite3::enableExceptions (PHP 5 >= 5.3.0, PHP 7) Enable throwing exceptions
SQLite3::escapeString (PHP 5 >= 5.3.0, PHP 7) Returns a string that has been properly escaped
SQLite3::exec (PHP 5 >= 5.3.0, PHP 7) Executes a result-less query against a given database
SQLite3::lastErrorCode (PHP 5 >= 5.3.0, PHP 7) Returns the numeric result code of the most recent failed SQLite request
SQLite3::lastErrorMsg (PHP 5 >= 5.3.0, PHP 7) Returns English text describing the most recent failed SQLite request
SQLite3::lastInsertRowID (PHP 5 >= 5.3.0, PHP 7) Returns the row ID of the most recent INSERT into the database
SQLite3::loadExtension (PHP 5 >= 5.3.0, PHP 7) Attempts to load an SQLite extension library
SQLite3::open (PHP 5 >= 5.3.0, PHP 7) Opens an SQLite database
SQLite3::openBlob (PHP 5 >= 5.3.0, PHP 7) Opens a stream resource to read a BLOB
SQLite3::prepare (PHP 5 >= 5.3.0, PHP 7) Prepares an SQL statement for execution
SQLite3::query (PHP 5 >= 5.3.0, PHP 7) Executes an SQL query
SQLite3::querySingle (PHP 5 >= 5.3.0, PHP 7) Executes a query and returns a single result
SQLite3::version (PHP 5 >= 5.3.0, PHP 7) Returns the SQLite3 library version as a string constant and as a number
SQLite3Result::columnName (PHP 5 >= 5.3.0, PHP 7) Returns the name of the nth column
SQLite3Result::columnType (PHP 5 >= 5.3.0, PHP 7) Returns the type of the nth column
SQLite3Result::fetchArray (PHP 5 >= 5.3.0, PHP 7) Fetches a result row as an associative or numerically indexed array or both
SQLite3Result::finalize (PHP 5 >= 5.3.0, PHP 7) Closes the result set
SQLite3Result::numColumns (PHP 5 >= 5.3.0, PHP 7) Returns the number of columns in the result set
SQLite3Result::reset (PHP 5 >= 5.3.0, PHP 7) Resets the result set back to the first row
SQLite3Stmt::bindParam (PHP 5 >= 5.3.0, PHP 7) Binds a parameter to a statement variable
SQLite3Stmt::bindValue (PHP 5 >= 5.3.0, PHP 7) Binds the value of a parameter to a statement variable
SQLite3Stmt::clear (PHP 5 >= 5.3.0, PHP 7) Clears all current bound parameters
SQLite3Stmt::close (PHP 5 >= 5.3.0, PHP 7) Closes the prepared statement
SQLite3Stmt::execute (PHP 5 >= 5.3.0, PHP 7) Executes a prepared statement and returns a result set object
SQLite3Stmt::getSQL (PHP 7 >= 7.4.0) Get the SQL of the statement
SQLite3Stmt::paramCount (PHP 5 >= 5.3.0, PHP 7) Returns the number of parameters within the prepared statement
SQLite3Stmt::readOnly (PHP 5 >= 5.3.6, PHP 7) Returns whether a statement is definitely read only
SQLite3Stmt::reset (PHP 5 >= 5.3.0, PHP 7) Resets the prepared statement
Stomp::abort (PECL stomp >= 0.1.0) Rolls back a transaction in progress
Stomp::ack (PECL stomp >= 0.1.0) Acknowledges consumption of a message
Stomp::begin (PECL stomp >= 0.1.0) Starts a transaction
Stomp::commit (PECL stomp >= 0.1.0) Commits a transaction in progress
Stomp::error (PECL stomp >= 0.1.0) Gets the last stomp error
Stomp::getReadTimeout (PECL stomp >= 0.3.0) Gets read timeout
Stomp::getSessionId (PECL stomp >= 0.1.0) Gets the current stomp session ID
Stomp::hasFrame (PECL stomp >= 0.1.0) Indicates whether or not there is a frame ready to read
Stomp::readFrame (PECL stomp >= 0.1.0) Reads the next frame
Stomp::send (PECL stomp >= 0.1.0) Sends a message
Stomp::setReadTimeout (PECL stomp >= 0.3.0) Sets read timeout
Stomp::subscribe (PECL stomp >= 0.1.0) Registers to listen to a given destination
Stomp::unsubscribe (PECL stomp >= 0.1.0) Removes an existing subscription
streamWrapper::mkdir (PHP 5, PHP 7) Create a directory
streamWrapper::rename (PHP 5, PHP 7) Renames a file or directory
streamWrapper::rmdir (PHP 5, PHP 7) Removes a directory
streamWrapper::unlink (PHP 5, PHP 7) Delete a file
SVM::crossvalidate (PECL svm >= 0.1.0) Test training params on subsets of the training data
SVM::getOptions (PECL svm >= 0.1.0) Return the current training parameters
SVM::setOptions (PECL svm >= 0.1.0) Set training parameters
SVM::train (PECL svm >= 0.1.0) Create a SVMModel based on training data
SVMModel::checkProbabilityModel (PECL svm >= 0.1.5) Returns true if the model has probability information
SVMModel::getLabels (PECL svm >= 0.1.5) Get the labels the model was trained on
SVMModel::getNrClass (PECL svm >= 0.1.5) Returns the number of classes the model was trained with
SVMModel::getSvmType (PECL svm >= 0.1.5) Get the SVM type the model was trained with
SVMModel::getSvrProbability (PECL svm >= 0.1.5) Get the sigma value for regression types
SVMModel::load (PECL svm >= 0.1.00.1.0) Load a saved SVM Model
SVMModel::predict (PECL svm >= 0.1.0) Predict a value for previously unseen data
SVMModel::save (PECL svm >= 0.1.0) Save a model to a file
SWFBitmap::getHeight (PHP 5 < 5.3.0, PECL ming SVN) Returns the bitmap's height
SWFBitmap::getWidth (PHP 5 < 5.3.0, PECL ming SVN) Returns the bitmap's width
SWFButton::addAction (PHP 5 < 5.3.0, PECL ming SVN) Adds an action
SWFButton::addASound (PHP 5 < 5.3.0, PECL ming SVN) Associates a sound with a button transition
SWFButton::addShape (PHP 5 < 5.3.0, PECL ming SVN) Adds a shape to a button
SWFButton::setAction (PHP 5 < 5.3.0, PECL ming SVN) Sets the action
SWFButton::setDown (PHP 5 < 5.3.0, PECL ming SVN) Alias for addShape(shape, SWFBUTTON_DOWN)
SWFButton::setHit (PHP 5 < 5.3.0, PECL ming SVN) Alias for addShape(shape, SWFBUTTON_HIT)
SWFButton::setMenu (PHP 5 < 5.3.0, PECL ming SVN) Enable track as menu button behaviour
SWFButton::setOver (PHP 5 < 5.3.0, PECL ming SVN) Alias for addShape(shape, SWFBUTTON_OVER)
SWFButton::setUp (PHP 5 < 5.3.0, PECL ming SVN) Alias for addShape(shape, SWFBUTTON_UP)
SWFDisplayItem::addAction (PHP 5 < 5.3.0, PECL ming SVN) Adds this SWFAction to the given SWFSprite instance
SWFDisplayItem::addColor (PHP 5 < 5.3.0, PECL ming SVN) Adds the given color to this item's color transform
SWFDisplayItem::endMask (PHP 5 < 5.3.0, PECL ming SVN) Another way of defining a MASK layer
SWFDisplayItem::getRot (PHP 5 < 5.3.0, PECL ming SVN)
SWFDisplayItem::getX (PHP 5 < 5.3.0, PECL ming SVN)
SWFDisplayItem::getXScale (PHP 5 < 5.3.0, PECL ming SVN)
SWFDisplayItem::getXSkew (PHP 5 < 5.3.0, PECL ming SVN)
SWFDisplayItem::getY (PHP 5 < 5.3.0, PECL ming SVN)
SWFDisplayItem::getYScale (PHP 5 < 5.3.0, PECL ming SVN)
SWFDisplayItem::getYSkew (PHP 5 < 5.3.0, PECL ming SVN)
SWFDisplayItem::move (PHP 5 < 5.3.0, PECL ming SVN) Moves object in relative coordinates
SWFDisplayItem::moveTo (PHP 5 < 5.3.0, PECL ming SVN) Moves object in global coordinates
SWFDisplayItem::multColor (PHP 5 < 5.3.0, PECL ming SVN) Multiplies the item's color transform
SWFDisplayItem::remove (PHP 5 < 5.3.0, PECL ming SVN) Removes the object from the movie
SWFDisplayItem::rotate (PHP 5 < 5.3.0, PECL ming SVN) Rotates in relative coordinates
SWFDisplayItem::rotateTo (PHP 5 < 5.3.0, PECL ming SVN) Rotates the object in global coordinates
SWFDisplayItem::scale (PHP 5 < 5.3.0, PECL ming SVN) Scales the object in relative coordinates
SWFDisplayItem::scaleTo (PHP 5 < 5.3.0, PECL ming SVN) Scales the object in global coordinates
SWFDisplayItem::setDepth (PHP 5 < 5.3.0, PECL ming SVN) Sets z-order
SWFDisplayItem::setMaskLevel (PHP 5 < 5.3.0, PECL ming SVN) Defines a MASK layer at level
SWFDisplayItem::setMatrix (PHP 5 < 5.3.0, PECL ming SVN) Sets the item's transform matrix
SWFDisplayItem::setName (PHP 5 < 5.3.0, PECL ming SVN) Sets the object's name
SWFDisplayItem::setRatio (PHP 5 < 5.3.0, PECL ming SVN) Sets the object's ratio
SWFDisplayItem::skewX (PHP 5 < 5.3.0, PECL ming SVN) Sets the X-skew
SWFDisplayItem::skewXTo (PHP 5 < 5.3.0, PECL ming SVN) Sets the X-skew
SWFDisplayItem::skewY (PHP 5 < 5.3.0, PECL ming SVN) Sets the Y-skew
SWFDisplayItem::skewYTo (PHP 5 < 5.3.0, PECL ming SVN) Sets the Y-skew
SWFFill::moveTo (PHP 5 < 5.3.0, PECL ming SVN) Moves fill origin
SWFFill::rotateTo (PHP 5 < 5.3.0, PECL ming SVN) Sets fill's rotation
SWFFill::scaleTo (PHP 5 < 5.3.0, PECL ming SVN) Sets fill's scale
SWFFill::skewXTo (PHP 5 < 5.3.0, PECL ming SVN) Sets fill x-skew
SWFFill::skewYTo (PHP 5 < 5.3.0, PECL ming SVN) Sets fill y-skew
SWFFont::getAscent (PHP 5 < 5.3.0, PECL ming SVN) Returns the ascent of the font, or 0 if not available
SWFFont::getDescent (PHP 5 < 5.3.0, PECL ming SVN) Returns the descent of the font, or 0 if not available
SWFFont::getLeading (PHP 5 < 5.3.0, PECL ming SVN) Returns the leading of the font, or 0 if not available
SWFFont::getShape (PHP 5 < 5.3.0, PECL ming SVN) Returns the glyph shape of a char as a text string
SWFFont::getUTF8Width (PHP 5 < 5.3.0, PECL ming SVN) Calculates the width of the given string in this font at full height
SWFFont::getWidth (PHP 5 < 5.3.0, PECL ming SVN) Returns the string's width
SWFFontChar::addChars (PHP 5 < 5.3.0, PECL ming SVN) Adds characters to a font for exporting font
SWFFontChar::addUTF8Chars (PHP 5 < 5.3.0, PECL ming SVN) Adds characters to a font for exporting font
SWFGradient::addEntry (PHP 5 < 5.3.0, PECL ming SVN) Adds an entry to the gradient list
SWFMorph::getShape1 (PHP 5 < 5.3.0, PECL ming SVN) Gets a handle to the starting shape
SWFMorph::getShape2 (PHP 5 < 5.3.0, PECL ming SVN) Gets a handle to the ending shape
SWFMovie::add (PHP 5 < 5.3.0, PECL ming SVN) Adds any type of data to a movie
SWFMovie::addExport (PHP 5 < 5.3.0, PECL ming SVN)
SWFMovie::addFont (PHP 5 < 5.3.0, PECL ming SVN)
SWFMovie::importChar (PHP 5 < 5.3.0, PECL ming SVN)
SWFMovie::importFont (PHP 5 < 5.3.0, PECL ming SVN)
SWFMovie::labelFrame (PHP 5 < 5.3.0, PECL ming SVN) Labels a frame
SWFMovie::nextFrame (PHP 5 < 5.3.0, PECL ming SVN) Moves to the next frame of the animation
SWFMovie::output (PHP 5 < 5.3.0, PECL ming SVN) Dumps your lovingly prepared movie out
SWFMovie::remove (PHP 5.2.1-5.3.0, PHP 7, PECL ming SVN) Removes the object instance from the display list
SWFMovie::save (PHP 5 < 5.3.0, PECL ming SVN) Saves the SWF movie in a file
SWFMovie::saveToFile (PHP 5 < 5.3.0, PECL ming SVN)
SWFMovie::setbackground (PHP 5 < 5.3.0, PECL ming SVN) Sets the background color
SWFMovie::setDimension (PHP 5 < 5.3.0, PECL ming SVN) Sets the movie's width and height
SWFMovie::setFrames (PHP 5 < 5.3.0, PECL ming SVN) Sets the total number of frames in the animation
SWFMovie::setRate (PHP 5 < 5.3.0, PECL ming SVN) Sets the animation's frame rate
SWFMovie::startSound (PHP 5 < 5.3.0, PECL ming SVN)
SWFMovie::stopSound (PHP 5 < 5.3.0, PECL ming SVN)
SWFMovie::streamMP3 (PHP 5 < 5.3.0, PECL ming SVN) Streams a MP3 file
SWFMovie::writeExports (PHP 5 < 5.3.0, PECL ming SVN)
SWFShape::addFill (PHP 5 < 5.3.0, PECL ming SVN) Adds a solid fill to the shape
SWFShape::drawArc (PHP 5 < 5.3.0, PECL ming SVN) Draws an arc of radius r centered at the current location, from angle startAngle to angle endAngle measured clockwise from 12 o'clock
SWFShape::drawCircle (PHP 5 < 5.3.0, PECL ming SVN) Draws a circle of radius r centered at the current location, in a counter-clockwise fashion
SWFShape::drawCubic (PHP 5 < 5.3.0, PECL ming SVN) Draws a cubic bezier curve using the current position and the three given points as control points
SWFShape::drawCubicTo (PHP 5 < 5.3.0, PECL ming SVN) Draws a cubic bezier curve using the current position and the three given points as control points
SWFShape::drawCurve (PHP 5 < 5.3.0, PECL ming SVN) Draws a curve (relative)
SWFShape::drawCurveTo (PHP 5 < 5.3.0, PECL ming SVN) Draws a curve
SWFShape::drawGlyph (PHP 5 < 5.3.0, PECL ming SVN) Draws the first character in the given string into the shape using the glyph definition from the given font
SWFShape::drawLine (PHP 5 < 5.3.0, PECL ming SVN) Draws a line (relative)
SWFShape::drawLineTo (PHP 5 < 5.3.0, PECL ming SVN) Draws a line
SWFShape::movePen (PHP 5 < 5.3.0, PECL ming SVN) Moves the shape's pen (relative)
SWFShape::movePenTo (PHP 5 < 5.3.0, PECL ming SVN) Moves the shape's pen
SWFShape::setLeftFill (PHP 5 < 5.3.0, PECL ming SVN) Sets left rasterizing color
SWFShape::setLine (PHP 5 < 5.3.0, PECL ming SVN) Sets the shape's line style
SWFShape::setRightFill (PHP 5 < 5.3.0, PECL ming SVN) Sets right rasterizing color
SWFSoundInstance::loopCount (PHP 5 < 5.3.0, PECL ming SVN)
SWFSoundInstance::loopInPoint (PHP 5 < 5.3.0, PECL ming SVN)
SWFSoundInstance::loopOutPoint (PHP 5 < 5.3.0, PECL ming SVN)
SWFSoundInstance::noMultiple (PHP 5 < 5.3.0, PECL ming SVN)
SWFSprite::add (PHP 5 < 5.3.0, PECL ming SVN) Adds an object to a sprite
SWFSprite::labelFrame (PHP 5 < 5.3.0, PECL ming SVN) Labels frame
SWFSprite::nextFrame (PHP 5 < 5.3.0, PECL ming SVN) Moves to the next frame of the animation
SWFSprite::remove (PHP 5 < 5.3.0, PECL ming SVN) Removes an object to a sprite
SWFSprite::setFrames (PHP 5 < 5.3.0, PECL ming SVN) Sets the total number of frames in the animation
SWFSprite::startSound (PHP 5 < 5.3.0, PECL ming SVN)
SWFSprite::stopSound (PHP 5 < 5.3.0, PECL ming SVN)
SWFText::addString (PHP 5 < 5.3.0, PECL ming SVN) Draws a string
SWFText::addUTF8String (PHP 5 < 5.3.0, PECL ming SVN) Writes the given text into this SWFText object at the current pen position, using the current font, height, spacing, and color
SWFText::getAscent (PHP 5 < 5.3.0, PECL ming SVN) Returns the ascent of the current font at its current size, or 0 if not available
SWFText::getDescent (PHP 5 < 5.3.0, PECL ming SVN) Returns the descent of the current font at its current size, or 0 if not available
SWFText::getLeading (PHP 5 < 5.3.0, PECL ming SVN) Returns the leading of the current font at its current size, or 0 if not available
SWFText::getUTF8Width (PHP 5 < 5.3.0, PECL ming SVN) Calculates the width of the given string in this text objects current font and size
SWFText::getWidth (PHP 5 < 5.3.0, PECL ming SVN) Computes string's width
SWFText::moveTo (PHP 5 < 5.3.0, PECL ming SVN) Moves the pen
SWFText::setColor (PHP 5 < 5.3.0, PECL ming SVN) Sets the current text color
SWFText::setFont (PHP 5 < 5.3.0, PECL ming SVN) Sets the current font
SWFText::setHeight (PHP 5 < 5.3.0, PECL ming SVN) Sets the current font height
SWFText::setSpacing (PHP 5 < 5.3.0, PECL ming SVN) Sets the current font spacing
SWFTextField::addChars (PHP 5 < 5.3.0, PECL ming SVN) Adds characters to a font that will be available within a textfield
SWFTextField::addString (PHP 5 < 5.3.0, PECL ming SVN) Concatenates the given string to the text field
SWFTextField::align (PHP 5 < 5.3.0, PECL ming SVN) Sets the text field alignment
SWFTextField::setBounds (PHP 5 < 5.3.0, PECL ming SVN) Sets the text field width and height
SWFTextField::setColor (PHP 5 < 5.3.0, PECL ming SVN) Sets the color of the text field
SWFTextField::setFont (PHP 5 < 5.3.0, PECL ming SVN) Sets the text field font
SWFTextField::setHeight (PHP 5 < 5.3.0, PECL ming SVN) Sets the font height of this text field font
SWFTextField::setIndentation (PHP 5 < 5.3.0, PECL ming SVN) Sets the indentation of the first line
SWFTextField::setLeftMargin (PHP 5 < 5.3.0, PECL ming SVN) Sets the left margin width of the text field
SWFTextField::setLineSpacing (PHP 5 < 5.3.0, PECL ming SVN) Sets the line spacing of the text field
SWFTextField::setMargins (PHP 5 < 5.3.0, PECL ming SVN) Sets the margins width of the text field
SWFTextField::setName (PHP 5 < 5.3.0, PECL ming SVN) Sets the variable name
SWFTextField::setPadding (PHP 5 < 5.3.0, PECL ming SVN) Sets the padding of this textfield
SWFTextField::setRightMargin (PHP 5 < 5.3.0, PECL ming SVN) Sets the right margin width of the text field
SWFVideoStream::getNumFrames (PHP 5.0.5-5.3.0, PHP 7, PECL ming SVN) Returns the number of frames in the video
SWFVideoStream::setDimension (PHP 5.0.5-5.3.0, PHP 7, PECL ming SVN) Sets video dimension
Swoole\Async::dnsLookup (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Async and non-blocking hostname to IP lookup.
Swoole\Async::read (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Read file stream asynchronously.
Swoole\Async::readFile (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Read a file asynchronously.
Swoole\Async::set (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Update the async I/O options.
Swoole\Async::write (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Write data to a file stream asynchronously.
Swoole\Async::writeFile (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Description
Swoole\Atomic::add (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add a number to the value to the atomic object.
Swoole\Atomic::cmpset (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Compare and set the value of the atomic object.
Swoole\Atomic::get (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the current value of the atomic object.
Swoole\Atomic::set (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set a new value to the atomic object.
Swoole\Atomic::sub (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Subtract a number to the value of the atomic object.
Swoole\Buffer::append (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Append the string or binary data at the end of the memory buffer and return the new size of memory allocated.
Swoole\Buffer::clear (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Reset the memory buffer.
Swoole\Buffer::expand (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Expand the size of memory buffer.
Swoole\Buffer::read (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Read data from the memory buffer based on offset and length.
Swoole\Buffer::recycle (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Release the memory to OS which is not used by the memory buffer.
Swoole\Buffer::substr (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Read data from the memory buffer based on offset and length. Or remove data from the memory buffer.
Swoole\Buffer::write (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Write data to the memory buffer. The memory allocated for the buffer will not be changed.
Swoole\Channel::pop (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Read and pop data from swoole channel.
Swoole\Channel::push (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Write and push data into Swoole channel.
Swoole\Channel::stats (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get stats of swoole channel.
Swoole\Client::close (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Close the connection established.
Swoole\Client::connect (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Connect to the remote TCP or UDP port.
Swoole\Client::getpeername (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the remote socket name of the connection.
Swoole\Client::getsockname (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the local socket name of the connection.
Swoole\Client::isConnected (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if the connection is established.
Swoole\Client::on (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add callback functions triggered by events.
Swoole\Client::pause (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Pause receiving data.
Swoole\Client::pipe (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Redirect the data to another file descriptor.
Swoole\Client::recv (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Receive data from the remote socket.
Swoole\Client::resume (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Resume receiving data.
Swoole\Client::send (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data to the remote TCP socket.
Swoole\Client::sendfile (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send file to the remote TCP socket.
Swoole\Client::sendto (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data to the remote UDP address.
Swoole\Client::set (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the Swoole client parameters before the connection is established.
Swoole\Client::sleep (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Remove the TCP client from system event loop.
Swoole\Client::wakeup (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add the TCP client back into the system event loop.
Swoole\Connection\Iterator::count (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Count connections.
Swoole\Connection\Iterator::current (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Return current connection entry.
Swoole\Connection\Iterator::key (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Return key of the current connection.
Swoole\Connection\Iterator::next (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Move to the next connection.
Swoole\Connection\Iterator::offsetExists (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if offet exists.
Swoole\Connection\Iterator::offsetGet (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Offset to retrieve.
Swoole\Connection\Iterator::offsetSet (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Assign a Connection to the specified offset.
Swoole\Connection\Iterator::offsetUnset (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Unset an offset.
Swoole\Connection\Iterator::rewind (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Rewinds iterator
Swoole\Connection\Iterator::valid (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if current position is valid.
Swoole\Coroutine::create (PHP 7, PECL swoole >= 2.0.0) Description
Swoole\Coroutine::getuid (PHP 7, PECL swoole >= 2.0.0) Description
Swoole\Coroutine::resume (PHP 7, PECL swoole >= 2.0.0) Description
Swoole\Coroutine::suspend (PHP 7, PECL swoole >= 2.0.0) Description
Swoole\Event::add (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add new callback functions of a socket into the EventLoop.
Swoole\Event::defer (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add a callback function to the next event loop.
Swoole\Event::del (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Remove all event callback functions of a socket.
Swoole\Event::exit (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Exit the eventloop, only available at client side.
Swoole\Event::set (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Update the event callback functions of a socket.
Swoole\Event::wait (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Description
Swoole\Event::write (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Write data to the socket.
Swoole\Http\Client::addFile (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add a file to the post form.
Swoole\Http\Client::close (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Close the http connection.
Swoole\Http\Client::download (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Download a file from the remote server.
Swoole\Http\Client::execute (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send the HTTP request after setting the parameters.
Swoole\Http\Client::get (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send GET http request to the remote server.
Swoole\Http\Client::isConnected (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if the HTTP connection is connected.
Swoole\Http\Client::on (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Register callback function by event name.
Swoole\Http\Client::post (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send POST http request to the remote server.
Swoole\Http\Client::push (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Push data to websocket client.
Swoole\Http\Client::set (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Update the HTTP client paramters.
Swoole\Http\Client::setCookies (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the http request cookies.
Swoole\Http\Client::setData (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the HTTP request body data.
Swoole\Http\Client::setHeaders (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the HTTP request headers.
Swoole\Http\Client::setMethod (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the HTTP request method.
Swoole\Http\Client::upgrade (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Upgrade to websocket protocol.
Swoole\Http\Request::rawcontent (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the raw HTTP POST body.
Swoole\Http\Response::cookie (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the cookies of the HTTP response.
Swoole\Http\Response::end (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data for the HTTP request and finish the response.
Swoole\Http\Response::gzip (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Enable the gzip of response content.
Swoole\Http\Response::header (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the HTTP response headers.
Swoole\Http\Response::initHeader (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Init the HTTP response header.
Swoole\Http\Response::rawcookie (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the raw cookies to the HTTP response.
Swoole\Http\Response::sendfile (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send file through the HTTP response.
Swoole\Http\Response::status (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the status code of the HTTP response.
Swoole\Http\Response::write (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Append HTTP body content to the HTTP response.
Swoole\Http\Server::on (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Bind callback function to HTTP server by event name.
Swoole\Http\Server::start (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Start the swoole http server.
Swoole\Lock::lock (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Try to acquire the lock. It will block if the lock is not available.
Swoole\Lock::trylock (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Try to acquire the lock and return straight away even the lock is not available.
Swoole\Lock::unlock (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Release the lock.
Swoole\Mmap::open (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Map a file into memory and return the stream resource which can be used by PHP stream operations.
Swoole\MySQL::close (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Close the async MySQL connection.
Swoole\MySQL::connect (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Connect to the remote MySQL server.
Swoole\MySQL::getBuffer (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Description
Swoole\MySQL::on (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Register callback function based on event name.
Swoole\MySQL::query (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Run the SQL query.
Swoole\Process::alarm (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) High precision timer which triggers signal with fixed interval.
Swoole\Process::close (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Close the pipe to the child process.
Swoole\Process::daemon (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Change the process to be a daemon process.
Swoole\Process::exec (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Execute system commands.
Swoole\Process::exit (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Stop the child processes.
Swoole\Process::freeQueue (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Destory the message queue created by swoole_process::useQueue.
Swoole\Process::kill (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send signal to the child process.
Swoole\Process::name (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set name of the process.
Swoole\Process::pop (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Read and pop data from the message queue.
Swoole\Process::push (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Write and push data into the message queue.
Swoole\Process::read (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Read data sending to the process.
Swoole\Process::signal (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send signal to the child processes.
Swoole\Process::start (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Start the process.
Swoole\Process::statQueue (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the stats of the message queue used as the communication method between processes.
Swoole\Process::useQueue (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Create a message queue as the communication method between the parent process and child processes.
Swoole\Process::wait (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Wait for the events of child processes.
Swoole\Process::write (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Write data into the pipe and communicate with the parent process or child processes.
Swoole\Redis\Server::format (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Description
Swoole\Redis\Server::setHandler (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Description
Swoole\Redis\Server::start (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Description
Swoole\Serialize::pack (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Serialize the data.
Swoole\Serialize::unpack (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Unserialize the data.
Swoole\Server::addlistener (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add a new listener to the server.
Swoole\Server::addProcess (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Add a user defined swoole_process to the server.
Swoole\Server::after (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Trigger a callback function after a period of time.
Swoole\Server::bind (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Bind the connection to a user defined user ID.
Swoole\Server::clearTimer (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Stop and destory a timer.
Swoole\Server::close (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Close a connection to the client.
Swoole\Server::confirm (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check status of the connection.
Swoole\Server::defer (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Delay execution of the callback function at the end of current EventLoop.
Swoole\Server::exist (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if the connection is existed.
Swoole\Server::finish (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Used in task process for sending result to the worker process when the task is finished.
Swoole\Server::getClientInfo (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the connection info by file description.
Swoole\Server::getClientList (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get all of the established connections.
Swoole\Server::getLastError (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the error code of the most recent error.
Swoole\Server::heartbeat (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check all the connections on the server.
Swoole\Server::listen (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Listen on the given IP and port, socket type.
Swoole\Server::on (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Register a callback function by event name.
Swoole\Server::pause (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Stop receiving data from the connection.
Swoole\Server::protect (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the connection to be protected mode.
Swoole\Server::reload (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Restart all the worker process.
Swoole\Server::resume (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Start receving data from the connection.
Swoole\Server::send (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data to the client.
Swoole\Server::sendfile (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send file to the connection.
Swoole\Server::sendMessage (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send message to worker processes by ID.
Swoole\Server::sendto (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data to the remote UDP address.
Swoole\Server::sendwait (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data to the remote socket in the blocking way.
Swoole\Server::set (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the runtime settings of the swoole server.
Swoole\Server::shutdown (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Shutdown the master server process, this function can be called in worker processes.
Swoole\Server::start (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Start the Swoole server.
Swoole\Server::stats (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the stats of the Swoole server.
Swoole\Server::stop (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Stop the Swoole server.
Swoole\Server::task (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data to the task worker processes.
Swoole\Server::taskwait (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Send data to the task worker processes in blocking way.
Swoole\Server::taskWaitMulti (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Execute multiple tasks concurrently.
Swoole\Server::tick (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Repeats a given function at every given time-interval.
Swoole\Table::column (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Set the data type and size of the columns.
Swoole\Table::count (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Count the rows in the table, or count all the elements in the table if $mode = 1.
Swoole\Table::create (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Create the swoole memory table.
Swoole\Table::current (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the current row.
Swoole\Table::decr (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Decrement the value in the Swoole table by $row_key and $column_key.
Swoole\Table::del (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Delete a row in the Swoole table by $row_key.
Swoole\Table::destroy (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Destroy the Swoole table.
Swoole\Table::exist (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if a row is existed by $row_key.
Swoole\Table::get (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the value in the Swoole table by $row_key and $column_key.
Swoole\Table::incr (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Increment the value by $row_key and $column_key.
Swoole\Table::key (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get the key of current row.
Swoole\Table::next (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Iterator the next row.
Swoole\Table::rewind (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Rewind the iterator.
Swoole\Table::set (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Update a row of the table by $row_key.
Swoole\Table::valid (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check current if the current row is valid.
Swoole\Timer::after (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Trigger a callback function after a period of time.
Swoole\Timer::clear (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Delete a timer by timer ID.
Swoole\Timer::exists (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if a timer is existed.
Swoole\Timer::tick (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Repeats a given function at every given time-interval.
Swoole\WebSocket\Server::exist (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Check if the the file description is existed.
Swoole\WebSocket\Server::on (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Register event callback function
Swoole\WebSocket\Server::pack (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Get a pack of binary data to send in a single frame.
Swoole\WebSocket\Server::push (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Push data to the remote client.
Swoole\WebSocket\Server::unpack (PHP 5 >= 5.2.0, PHP 7, PECL swoole >= 1.9.0) Unpack the binary data received from the client.
SyncEvent::fire (PECL sync >= 1.0.0) Fires/sets the event
SyncEvent::reset (PECL sync >= 1.0.0) Resets a manual event
SyncEvent::wait (PECL sync >= 1.0.0) Waits for the event to be fired/set
SyncMutex::lock (PECL sync >= 1.0.0) Waits for an exclusive lock
SyncMutex::unlock (PECL sync >= 1.0.0) Unlocks the mutex
SyncReaderWriter::readlock (PECL sync >= 1.0.0) Waits for a read lock
SyncReaderWriter::readunlock (PECL sync >= 1.0.0) Releases a read lock
SyncReaderWriter::writelock (PECL sync >= 1.0.0) Waits for an exclusive write lock
SyncReaderWriter::writeunlock (PECL sync >= 1.0.0) Releases a write lock
SyncSemaphore::lock (PECL sync >= 1.0.0) Decreases the count of the semaphore or waits
SyncSemaphore::unlock (PECL sync >= 1.0.0) Increases the count of the semaphore
SyncSharedMemory::first (PECL sync >= 1.1.0) Check to see if the object is the first instance system-wide of named shared memory
SyncSharedMemory::read (PECL sync >= 1.1.0) Copy data from named shared memory
SyncSharedMemory::size (PECL sync >= 1.1.0) Returns the size of the named shared memory
SyncSharedMemory::write (PECL sync >= 1.1.0) Copy data to named shared memory
Thread::detach (PECL pthreads < 3.0.0) Execution
Thread::getCreatorId (PECL pthreads >= 2.0.0) Identification
Thread::getCurrentThread (PECL pthreads >= 2.0.0) Identification
Thread::getCurrentThreadId (PECL pthreads >= 2.0.0) Identification
Thread::getThreadId (PECL pthreads >= 2.0.0) Identification
Thread::globally (PECL pthreads < 3.0.0) Execution
Thread::isJoined (PECL pthreads >= 2.0.0) State Detection
Thread::isStarted (PECL pthreads >= 2.0.0) State Detection
Thread::join (PECL pthreads >= 2.0.0) Synchronization
Thread::kill (PECL pthreads < 3.0.0) Execution
Thread::start (PECL pthreads >= 2.0.0) Execution
Threaded::chunk (PECL pthreads >= 2.0.0) Manipulation
Threaded::count (PECL pthreads >= 2.0.0) Manipulation
Threaded::extend (PECL pthreads >= 2.0.8) Runtime Manipulation
Threaded::from (PECL pthreads >= 2.0.9) Creation
Threaded::getTerminationInfo (PECL pthreads < 3.0.0) Error Detection
Threaded::isTerminated (PECL pthreads >= 2.0.0) State Detection
Threaded::isWaiting (PECL pthreads < 3.0.0) State Detection
Threaded::lock (PECL pthreads < 3.0.0) Synchronization
Threaded::merge (PECL pthreads >= 2.0.0) Manipulation
Threaded::notify (PECL pthreads >= 2.0.0) Synchronization
Threaded::notifyOne (PECL pthreads >= 3.0.0) Synchronization
Threaded::pop (PECL pthreads >= 2.0.0) Manipulation
Threaded::run (PECL pthreads >= 2.0.0) Execution
Threaded::shift (PECL pthreads >= 2.0.0) Manipulation
Threaded::synchronized (PECL pthreads >= 2.0.0) Synchronization
Threaded::unlock (PECL pthreads < 3.0.0) Synchronization
Threaded::wait (PECL pthreads >= 2.0.0) Synchronization
Throwable::getCode (PHP 7) Gets the exception code
Throwable::getFile (PHP 7) Gets the file in which the object was created
Throwable::getLine (PHP 7) Gets the line on which the object was instantiated
Throwable::getMessage (PHP 7) Gets the message
Throwable::getPrevious (PHP 7) Returns the previous Throwable
Throwable::getTrace (PHP 7) Gets the stack trace
Throwable::getTraceAsString (PHP 7) Gets the stack trace as a string
tidy::body (PHP 5, PHP 7, PECL tidy 0.5.2-1.0) Returns a tidyNode object starting from the tag of the tidy parse tree
tidy::cleanRepair (PHP 5, PHP 7, PECL tidy >= 0.5.2) Execute configured cleanup and repair operations on parsed markup
tidy::diagnose (PHP 5, PHP 7, PECL tidy >= 0.5.2) Run configured diagnostics on parsed and repaired markup
tidy::getConfig (PHP 5, PHP 7, PECL tidy >= 0.7.0) Get current Tidy configuration
tidy::getHtmlVer (PHP 5, PHP 7, PECL tidy >= 0.5.2) Get the Detected HTML version for the specified document
tidy::getOpt (PHP 5, PHP 7, PECL tidy >= 0.5.2) Returns the value of the specified configuration option for the tidy document
tidy::getOptDoc (PHP 5 >= 5.1.0, PHP 7) Returns the documentation for the given option name
tidy::getRelease (PHP 5, PHP 7, PECL tidy >= 0.5.2) Get release date (version) for Tidy library
tidy::getStatus (PHP 5, PHP 7, PECL tidy >= 0.5.2) Get status of specified document
tidy::head (PHP 5, PHP 7, PECL tidy 0.5.2-1.0.0) Returns a tidyNode object starting from the tag of the tidy parse tree
tidy::html (PHP 5, PHP 7, PECL tidy 0.5.2-1.0.0) Returns a tidyNode object starting from the tag of the tidy parse tree
tidy::isXhtml (PHP 5, PHP 7, PECL tidy >= 0.5.2) Indicates if the document is a XHTML document
tidy::isXml (PHP 5, PHP 7, PECL tidy >= 0.5.2) Indicates if the document is a generic (non HTML/XHTML) XML document
tidy::parseFile (PHP 5, PHP 7, PECL tidy >= 0.5.2) Parse markup in file or URI
tidy::parseString (PHP 5, PHP 7, PECL tidy >= 0.5.2) Parse a document stored in a string
tidy::repairFile (PHP 5, PHP 7, PECL tidy >= 0.7.0) Repair a file and return it as a string
tidy::repairString (PHP 5, PHP 7, PECL tidy >= 0.7.0) Repair a string using an optionally provided configuration file
tidy::root (PHP 5, PHP 7, PECL tidy 0.5.2-1.0.0) Returns a tidyNode object representing the root of the tidy parse tree
tidyNode::getParent (PHP 5 >= 5.2.2, PHP 7) Returns the parent node of the current node
tidyNode::hasChildren (PHP 5, PHP 7) Checks if a node has children
tidyNode::hasSiblings (PHP 5, PHP 7) Checks if a node has siblings
tidyNode::isAsp (PHP 5, PHP 7) Checks if this node is ASP
tidyNode::isComment (PHP 5, PHP 7) Checks if a node represents a comment
tidyNode::isHtml (PHP 5, PHP 7) Checks if a node is part of a HTML document
tidyNode::isJste (PHP 5, PHP 7) Checks if this node is JSTE
tidyNode::isPhp (PHP 5, PHP 7) Checks if a node is PHP
tidyNode::isText (PHP 5, PHP 7) Checks if a node represents text (no markup)
TokyoTyrant::add (PECL tokyo_tyrant >= 0.1.0) Adds to a numeric key
TokyoTyrant::connect (PECL tokyo_tyrant >= 0.1.0) Connect to a database
TokyoTyrant::connectUri (PECL tokyo_tyrant >= 0.1.0) Connects to a database
TokyoTyrant::copy (PECL tokyo_tyrant >= 0.1.0) Copies the database
TokyoTyrant::ext (PECL tokyo_tyrant >= 0.1.0) Execute a remote script
TokyoTyrant::fwmKeys (PECL tokyo_tyrant >= 0.1.0) Returns the forward matching keys
TokyoTyrant::get (PECL tokyo_tyrant >= 0.1.0) The get purpose
TokyoTyrant::getIterator (No version information available, might only be in Git) Get an iterator
TokyoTyrant::num (PECL tokyo_tyrant >= 0.1.0) Number of records in the database
TokyoTyrant::out (PECL tokyo_tyrant >= 0.1.0) Removes records
TokyoTyrant::put (PECL tokyo_tyrant >= 0.1.0) Puts values
TokyoTyrant::putCat (PECL tokyo_tyrant >= 0.1.0) Concatenates to a record
TokyoTyrant::putKeep (PECL tokyo_tyrant >= 0.1.0) Puts a record
TokyoTyrant::putNr (PECL tokyo_tyrant >= 0.1.0) Puts value
TokyoTyrant::putShl (PECL tokyo_tyrant >= 0.1.0) Concatenates to a record
TokyoTyrant::restore (PECL tokyo_tyrant >= 0.1.0) Restore the database
TokyoTyrant::setMaster (PECL tokyo_tyrant >= 0.1.0) Set the replication master
TokyoTyrant::size (PECL tokyo_tyrant >= 0.1.0) Returns the size of the value
TokyoTyrant::stat (PECL tokyo_tyrant >= 0.1.0) Get statistics
TokyoTyrant::sync (PECL tokyo_tyrant >= 0.1.0) Synchronize the database
TokyoTyrant::tune (PECL tokyo_tyrant >= 0.2.0) Tunes connection values
TokyoTyrant::vanish (PECL tokyo_tyrant >= 0.1.0) Empties the database
TokyoTyrantIterator::current (PECL tokyo_tyrant >= 0.2.0) Get the current value
TokyoTyrantIterator::key (PECL tokyo_tyrant >= 0.2.0) Returns the current key
TokyoTyrantIterator::next (PECL tokyo_tyrant >= 0.2.0) Move to next key
TokyoTyrantIterator::rewind (PECL tokyo_tyrant >= 0.2.0) Rewinds the iterator
TokyoTyrantIterator::valid (PECL tokyo_tyrant >= 0.2.0) Rewinds the iterator
TokyoTyrantQuery::addCond (PECL tokyo_tyrant >= 0.1.0) Adds a condition to the query
TokyoTyrantQuery::count (No version information available, might only be in Git) Counts records
TokyoTyrantQuery::current (PECL tokyo_tyrant >= 0.1.0) Returns the current element
TokyoTyrantQuery::hint (No version information available, might only be in Git) Get the hint string of the query
TokyoTyrantQuery::key (PECL tokyo_tyrant >= 0.1.0) Returns the current key
TokyoTyrantQuery::metaSearch (No version information available, might only be in Git) Retrieve records with multiple queries
TokyoTyrantQuery::next (PECL tokyo_tyrant >= 0.1.0) Moves the iterator to next entry
TokyoTyrantQuery::out (PECL tokyo_tyrant >= 0.1.0) Removes records based on query
TokyoTyrantQuery::rewind (PECL tokyo_tyrant >= 0.1.0) Rewinds the iterator
TokyoTyrantQuery::search (PECL tokyo_tyrant >= 0.1.0) Searches records
TokyoTyrantQuery::setLimit (PECL tokyo_tyrant >= 0.1.0) Limit results
TokyoTyrantQuery::setOrder (PECL tokyo_tyrant >= 0.1.0) Orders results
TokyoTyrantQuery::valid (PECL tokyo_tyrant >= 0.1.0) Checks the validity of current item
TokyoTyrantTable::add (PECL tokyo_tyrant >= 0.1.0) Adds a record
TokyoTyrantTable::genUid (PECL tokyo_tyrant >= 0.1.0) Generate unique id
TokyoTyrantTable::get (PECL tokyo_tyrant >= 0.1.0) Get a row
TokyoTyrantTable::getIterator (No version information available, might only be in Git) Get an iterator
TokyoTyrantTable::getQuery (PECL tokyo_tyrant >= 0.1.0) Get a query object
TokyoTyrantTable::out (PECL tokyo_tyrant >= 0.1.0) Remove records
TokyoTyrantTable::put (PECL tokyo_tyrant >= 0.1.0) Store a row
TokyoTyrantTable::putCat (PECL tokyo_tyrant >= 0.1.0) Concatenates to a row
TokyoTyrantTable::putKeep (PECL tokyo_tyrant >= 0.1.0) Put a new record
TokyoTyrantTable::putNr (PECL tokyo_tyrant >= 0.1.0) Puts value
TokyoTyrantTable::putShl (PECL tokyo_tyrant >= 0.1.0) Concatenates to a record
TokyoTyrantTable::setIndex (PECL tokyo_tyrant >= 0.1.0) Sets index
Transliterator::create (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Create a transliterator
Transliterator::createFromRules (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Create transliterator from rules
Transliterator::createInverse (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Create an inverse transliterator
Transliterator::getErrorCode (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Get last error code
Transliterator::getErrorMessage (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Get last error message
Transliterator::listIDs (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Get transliterator IDs
Transliterator::transliterate (PHP 5 >= 5.4.0, PHP 7, PECL intl >= 2.0.0) Transliterate a string
UConverter::convert (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Convert string from one charset to another
UConverter::fromUCallback (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Default "from" callback function
UConverter::getAliases (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the aliases of the given name
UConverter::getAvailable (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the available canonical converter names
UConverter::getDestinationEncoding (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the destination encoding
UConverter::getDestinationType (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the destination converter type
UConverter::getErrorCode (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get last error code on the object
UConverter::getErrorMessage (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get last error message on the object
UConverter::getSourceEncoding (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the source encoding
UConverter::getSourceType (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get the source convertor type
UConverter::getStandards (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get standards associated to converter names
UConverter::getSubstChars (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get substitution chars
UConverter::reasonText (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Get string representation of the callback reason
UConverter::setDestinationEncoding (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set the destination encoding
UConverter::setSourceEncoding (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set the source encoding
UConverter::setSubstChars (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Set the substitution chars
UConverter::toUCallback (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Default "to" callback function
UConverter::transcode (PHP 5 >= 5.5.0, PHP 7, PECL >= 3.0.0a1) Convert string from one charset to another
UI\Area::onDraw (PHP 7, UI 0.9.9) Draw Callback
UI\Area::onKey (PHP 7, UI 0.9.9) Key Callback
UI\Area::onMouse (PHP 7, UI 0.9.9) Mouse Callback
UI\Area::redraw (PHP 7, UI 0.9.9) Redraw Area
UI\Area::scrollTo (PHP 7, UI 0.9.9) Area Scroll
UI\Area::setSize (PHP 7, UI 0.9.9) Set Size
UI\Control::destroy (PHP 7, UI 0.9.9) Destroy Control
UI\Control::disable (PHP 7, UI 0.9.9) Disable Control
UI\Control::enable (PHP 7, UI 0.9.9) Enable Control
UI\Control::getParent (PHP 7, UI 0.9.9) Get Parent Control
UI\Control::getTopLevel (PHP 7, UI 0.9.9) Get Top Level
UI\Control::hide (PHP 7, UI 0.9.9) Hide Control
UI\Control::isEnabled (PHP 7, UI 0.9.9) Determine if Control is enabled
UI\Control::isVisible (PHP 7, UI 0.9.9) Determine if Control is visible
UI\Control::setParent (PHP 7, UI 0.9.9) Set Parent Control
UI\Control::show (PHP 7, UI 0.9.9) Control Show
UI\Controls\Box::append (PHP 7, UI 0.9.9) Append Control
UI\Controls\Box::delete (PHP 7, UI 0.9.9) Delete Control
UI\Controls\Box::getOrientation (PHP 7, UI 0.9.9) Get Orientation
UI\Controls\Box::isPadded (PHP 7, UI 0.9.9) Padding Detection
UI\Controls\Box::setPadded (PHP 7, UI 0.9.9) Set Padding
UI\Controls\Button::getText (PHP 7, UI 0.9.9) Get Text
UI\Controls\Button::onClick (PHP 7, UI 0.9.9) Click Handler
UI\Controls\Button::setText (PHP 7, UI 0.9.9) Set Text
UI\Controls\Check::getText (PHP 7, UI 0.9.9) Get Text
UI\Controls\Check::isChecked (PHP 7, UI 0.9.9) Checked Detection
UI\Controls\Check::onToggle (PHP 7, UI 0.9.9) Toggle Callback
UI\Controls\Check::setChecked (PHP 7, UI 0.9.9) Set Checked
UI\Controls\Check::setText (PHP 7, UI 0.9.9) Set Text
UI\Controls\ColorButton::getColor (PHP 7, UI 0.9.9) Get Color
UI\Controls\ColorButton::onChange (PHP 7, UI 0.9.9) Change Handler
UI\Controls\ColorButton::setColor (PHP 7, UI 0.9.9) Set Color
UI\Controls\Combo::append (PHP 7, UI 0.9.9) Append Option
UI\Controls\Combo::getSelected (PHP 7, UI 0.9.9) Get Selected Option
UI\Controls\Combo::onSelected (PHP 7, UI 0.9.9) Selected Handler
UI\Controls\Combo::setSelected (PHP 7, UI 0.9.9) Set Selected Option
UI\Controls\EditableCombo::append (PHP 7, UI 0.9.9) Append Option
UI\Controls\EditableCombo::getText (PHP 7, UI 0.9.9) Get Text
UI\Controls\EditableCombo::onChange (PHP 7, UI 0.9.9) Change Handler
UI\Controls\EditableCombo::setText (PHP 7, UI 0.9.9) Set Text
UI\Controls\Entry::getText (PHP 7, UI 0.9.9) Get Text
UI\Controls\Entry::isReadOnly (PHP 7, UI 0.9.9) Detect Read Only
UI\Controls\Entry::onChange (PHP 7, UI 0.9.9) Change Handler
UI\Controls\Entry::setReadOnly (PHP 7, UI 0.9.9) Set Read Only
UI\Controls\Entry::setText (PHP 7, UI 0.9.9) Set Text
UI\Controls\Form::append (PHP 7, UI 0.9.9) Append Control
UI\Controls\Form::delete (PHP 7, UI 0.9.9) Delete Control
UI\Controls\Form::isPadded (PHP 7, UI 0.9.9) Padding Detection
UI\Controls\Form::setPadded (PHP 7, UI 0.9.9) Set Padding
UI\Controls\Grid::append (PHP 7, UI 0.9.9) Append Control
UI\Controls\Grid::isPadded (PHP 7, UI 0.9.9) Padding Detection
UI\Controls\Grid::setPadded (PHP 7, UI 0.9.9) Set Padding
UI\Controls\Group::append (No version information available, might only be in Git) Append Control
UI\Controls\Group::getTitle (PHP 7, UI 0.9.9) Get Title
UI\Controls\Group::hasMargin (PHP 7, UI 0.9.9) Margin Detection
UI\Controls\Group::setMargin (PHP 7, UI 0.9.9) Set Margin
UI\Controls\Group::setTitle (PHP 7, UI 0.9.9) Set Title
UI\Controls\Label::getText (PHP 7, UI 0.9.9) Get Text
UI\Controls\Label::setText (PHP 7, UI 0.9.9) Set Text
UI\Controls\MultilineEntry::append (PHP 7, UI 0.9.9) Append Text
UI\Controls\MultilineEntry::getText (PHP 7, UI 0.9.9) Get Text
UI\Controls\MultilineEntry::isReadOnly (PHP 7, UI 0.9.9) Read Only Detection
UI\Controls\MultilineEntry::onChange (PHP 7, UI 0.9.9) Change Handler
UI\Controls\MultilineEntry::setReadOnly (PHP 7, UI 0.9.9) Set Read Only
UI\Controls\MultilineEntry::setText (PHP 7, UI 0.9.9) Set Text
UI\Controls\Progress::getValue (PHP 7, UI 0.9.9) Get Value
UI\Controls\Progress::setValue (PHP 7, UI 0.9.9) Set Value
UI\Controls\Radio::append (PHP 7, UI 0.9.9) Append Option
UI\Controls\Radio::getSelected (PHP 7, UI 0.9.9) Get Selected Option
UI\Controls\Radio::onSelected (PHP 7, UI 0.9.9) Selected Handler
UI\Controls\Radio::setSelected (PHP 7, UI 0.9.9) Set Selected Option
UI\Controls\Slider::getValue (PHP 7, UI 0.9.9) Get Value
UI\Controls\Slider::onChange (PHP 7, UI 0.9.9) Change Handler
UI\Controls\Slider::setValue (PHP 7, UI 0.9.9) Set Value
UI\Controls\Spin::getValue (PHP 7, UI 0.9.9) Get Value
UI\Controls\Spin::onChange (PHP 7, UI 0.9.9) Change Handler
UI\Controls\Spin::setValue (PHP 7, UI 0.9.9) Set Value
UI\Controls\Tab::append (PHP 7, UI 0.9.9) Append Page
UI\Controls\Tab::delete (PHP 7, UI 0.9.9) Delete Page
UI\Controls\Tab::hasMargin (PHP 7, UI 0.9.9) Margin Detection
UI\Controls\Tab::insertAt (PHP 7, UI 0.9.9) Insert Page
UI\Controls\Tab::pages (PHP 7, UI 0.9.9) Page Count
UI\Controls\Tab::setMargin (PHP 7, UI 0.9.9) Set Margin
UI\Draw\Brush::getColor (PHP 7, UI 0.9.9) Get Color
UI\Draw\Brush::setColor (PHP 7, UI 0.9.9) Set Color
UI\Draw\Brush\Gradient::addStop (PHP 7, UI 2.0.0) Stop Manipulation
UI\Draw\Brush\Gradient::delStop (PHP 7, UI 2.0.0) Stop Manipulation
UI\Draw\Brush\Gradient::setStop (PHP 7, UI 2.0.0) Stop Manipulation
UI\Draw\Color::getChannel (PHP 7, UI 0.9.9) Color Manipulation
UI\Draw\Color::setChannel (PHP 7, UI 0.9.9) Color Manipulation
UI\Draw\Matrix::invert (PHP 7, UI 0.9.9) Invert Matrix
UI\Draw\Matrix::isInvertible (PHP 7, UI 0.9.9) Invertible Detection
UI\Draw\Matrix::multiply (PHP 7, UI 0.9.9) Multiply Matrix
UI\Draw\Matrix::rotate (PHP 7, UI 0.9.9) Rotate Matrix
UI\Draw\Matrix::scale (PHP 7, UI 0.9.9) Scale Matrix
UI\Draw\Matrix::skew (PHP 7, UI 0.9.9) Skew Matrix
UI\Draw\Matrix::translate (PHP 7, UI 0.9.9) Translate Matrix
UI\Draw\Path::addRectangle (PHP 7, UI 0.9.9) Draw a Rectangle
UI\Draw\Path::arcTo (PHP 7, UI 0.9.9) Draw an Arc
UI\Draw\Path::bezierTo (PHP 7, UI 0.9.9) Draw Bezier Curve
UI\Draw\Path::closeFigure (PHP 7, UI 0.9.9) Close Figure
UI\Draw\Path::end (PHP 7, UI 0.9.9) Finalize Path
UI\Draw\Path::lineTo (PHP 7, UI 0.9.9) Draw a Line
UI\Draw\Path::newFigure (PHP 7, UI 0.9.9) Draw Figure
UI\Draw\Path::newFigureWithArc (PHP 7, UI 0.9.9) Draw Figure with Arc
UI\Draw\Pen::clip (PHP 7, UI 0.9.9) Clip a Path
UI\Draw\Pen::fill (PHP 7, UI 0.9.9) Fill a Path
UI\Draw\Pen::restore (PHP 7, UI 0.9.9) Restore
UI\Draw\Pen::save (PHP 7, UI 0.9.9) Save
UI\Draw\Pen::stroke (PHP 7, UI 0.9.9) Stroke a Path
UI\Draw\Pen::transform (PHP 7, UI 0.9.9) Matrix Transform
UI\Draw\Pen::write (PHP 7, UI 0.9.9) Draw Text at Point
UI\Draw\Stroke::getCap (PHP 7, UI 0.9.9) Get Line Cap
UI\Draw\Stroke::getJoin (PHP 7, UI 0.9.9) Get Line Join
UI\Draw\Stroke::getMiterLimit (PHP 7, UI 0.9.9) Get Miter Limit
UI\Draw\Stroke::getThickness (PHP 7, UI 0.9.9) Get Thickness
UI\Draw\Stroke::setCap (PHP 7, UI 0.9.9) Set Line Cap
UI\Draw\Stroke::setJoin (PHP 7, UI 0.9.9) Set Line Join
UI\Draw\Stroke::setMiterLimit (PHP 7, UI 0.9.9) Set Miter Limit
UI\Draw\Stroke::setThickness (PHP 7, UI 0.9.9) Set Thickness
UI\Draw\Text\Font::getAscent (PHP 7, UI 1.0.3) Font Metrics
UI\Draw\Text\Font::getDescent (PHP 7, UI 1.0.3) Font Metrics
UI\Draw\Text\Font::getLeading (PHP 7, UI 1.0.3) Font Metrics
UI\Draw\Text\Font::getUnderlinePosition (PHP 7, UI 1.0.3) Font Metrics
UI\Draw\Text\Font::getUnderlineThickness (PHP 7, UI 1.0.3) Font Metrics
UI\Draw\Text\Font\Descriptor::getFamily (PHP 7, UI 1.0.3) Get Font Family
UI\Draw\Text\Font\Descriptor::getItalic (PHP 7, UI 1.0.3) Style Detection
UI\Draw\Text\Font\Descriptor::getSize (PHP 7, UI 1.0.3) Size Detection
UI\Draw\Text\Font\Descriptor::getStretch (PHP 7, UI 1.0.3) Style Detection
UI\Draw\Text\Font\Descriptor::getWeight (PHP 7, UI 1.0.3) Weight Detection
UI\Draw\Text\Layout::setColor (PHP 7, UI 0.9.9) Set Color
UI\Draw\Text\Layout::setWidth (PHP 7, UI 0.9.9) Set Width
UI\Executor::kill (PHP 7, UI 2.0.0) Stop Executor
UI\Executor::onExecute (PHP 7, UI 2.0.0) Execution Callback
UI\Executor::setInterval (PHP 7, UI 2.0.0) Interval Manipulation
UI\Menu::append (PHP 7, UI 0.9.9) Append Menu Item
UI\Menu::appendAbout (PHP 7, UI 0.9.9) Append About Menu Item
UI\Menu::appendCheck (PHP 7, UI 0.9.9) Append Checkable Menu Item
UI\Menu::appendPreferences (PHP 7, UI 0.9.9) Append Preferences Menu Item
UI\Menu::appendQuit (PHP 7, UI 0.9.9) Append Quit Menu Item
UI\Menu::appendSeparator (PHP 7, UI 0.9.9) Append Menu Item Separator
UI\MenuItem::disable (PHP 7, UI 0.9.9) Disable Menu Item
UI\MenuItem::enable (PHP 7, UI 0.9.9) Enable Menu Item
UI\MenuItem::isChecked (PHP 7, UI 0.9.9) Detect Checked
UI\MenuItem::onClick (PHP 7, UI 0.9.9) On Click Callback
UI\MenuItem::setChecked (PHP 7, UI 0.9.9) Set Checked
UI\Point::at (PHP 7, UI 1.0.2) Size Coercion
UI\Point::getX (PHP 7, UI 0.9.9) Retrieves X
UI\Point::getY (PHP 7, UI 0.9.9) Retrieves Y
UI\Point::setX (PHP 7, UI 0.9.9) Set X
UI\Point::setY (PHP 7, UI 0.9.9) Set Y
UI\Size::getHeight (PHP 7, UI 0.9.9) Retrieves Height
UI\Size::getWidth (PHP 7, UI 0.9.9) Retrives Width
UI\Size::of (PHP 7, UI 1.0.2) Point Coercion
UI\Size::setHeight (PHP 7, UI 0.9.9) Set Height
UI\Size::setWidth (PHP 7, UI 0.9.9) Set Width
UI\Window::add (PHP 7, UI 0.9.9) Add a Control
UI\Window::error (PHP 7, UI 0.9.9) Show Error Box
UI\Window::getSize (PHP 7, UI 0.9.9) Get Window Size
UI\Window::getTitle (PHP 7, UI 0.9.9) Get Title
UI\Window::hasBorders (PHP 7, UI 0.9.9) Border Detection
UI\Window::hasMargin (PHP 7, UI 0.9.9) Margin Detection
UI\Window::isFullScreen (PHP 7, UI 0.9.9) Full Screen Detection
UI\Window::msg (PHP 7, UI 0.9.9) Show Message Box
UI\Window::onClosing (PHP 7, UI 0.9.9) Closing Callback
UI\Window::open (PHP 7, UI 0.9.9) Open Dialog
UI\Window::save (PHP 7, UI 0.9.9) Save Dialog
UI\Window::setBorders (PHP 7, UI 0.9.9) Border Use
UI\Window::setFullScreen (PHP 7, UI 0.9.9) Full Screen Use
UI\Window::setMargin (PHP 7, UI 0.9.9) Margin Use
UI\Window::setSize (PHP 7, UI 0.9.9) Set Size
UI\Window::setTitle (PHP 7, UI 0.9.9) Window Title
V8Js::executeString (PECL v8js >= 0.1.0) Execute a string as Javascript code
V8Js::getExtensions (PECL v8js >= 0.1.0) Return an array of registered extensions
V8Js::getPendingException (PECL v8js >= 0.1.0) Return pending uncaught Javascript exception
V8Js::registerExtension (PECL v8js >= 0.1.0) Register Javascript extensions for V8Js
V8JsException::getJsFileName (PECL v8js >= 0.1.0) The getJsFileName purpose
V8JsException::getJsLineNumber (PECL v8js >= 0.1.0) The getJsLineNumber purpose
V8JsException::getJsSourceLine (PECL v8js >= 0.1.0) The getJsSourceLine purpose
V8JsException::getJsTrace (PECL v8js >= 0.1.0) The getJsTrace purpose
VarnishAdmin::auth (PECL varnish >= 0.3) Authenticate on a varnish instance
VarnishAdmin::ban (PECL varnish >= 0.3) Ban URLs using a VCL expression
VarnishAdmin::banUrl (PECL varnish >= 0.3) Ban an URL using a VCL expression
VarnishAdmin::clearPanic (PECL varnish >= 0.4) Clear varnish instance panic messages
VarnishAdmin::connect (PECL varnish >= 0.3) Connect to a varnish instance administration interface
VarnishAdmin::disconnect (PECL varnish >= 1.0.0) Disconnect from a varnish instance administration interface
VarnishAdmin::getPanic (PECL varnish >= 0.4) Get the last panic message on a varnish instance
VarnishAdmin::getParams (PECL varnish >= 0.4) Fetch current varnish instance configuration parameters
VarnishAdmin::isRunning (PECL varnish >= 0.3) Check if the varnish slave process is currently running
VarnishAdmin::setCompat (PECL varnish >= 0.9.2) Set the class compat configuration param
VarnishAdmin::setHost (PECL varnish >= 0.8) Set the class host configuration param
VarnishAdmin::setIdent (PECL varnish >= 0.8) Set the class ident configuration param
VarnishAdmin::setParam (PECL varnish >= 0.4) Set configuration param on the current varnish instance
VarnishAdmin::setPort (PECL varnish >= 0.8) Set the class port configuration param
VarnishAdmin::setSecret (PECL varnish >= 0.8) Set the class secret configuration param
VarnishAdmin::setTimeout (PECL varnish >= 0.8) Set the class timeout configuration param
VarnishAdmin::start (PECL varnish >= 0.3) Start varnish worker process
VarnishAdmin::stop (PECL varnish >= 0.3) Stop varnish worker process
VarnishLog::getLine (PECL varnish >= 0.6) Get next log line
VarnishLog::getTagName (PECL varnish >= 0.6) Get the log tag string representation by its index
VarnishStat::getSnapshot (PECL varnish >= 0.3) Get the current varnish instance statistics snapshot
Vtiful\Kernel\Excel::data (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Excel data
Vtiful\Kernel\Excel::fileName (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Excel fileName
Vtiful\Kernel\Excel::header (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Excel header
Vtiful\Kernel\Excel::output (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Excel output
Vtiful\Kernel\Format::align (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Format align
Vtiful\Kernel\Format::bold (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Format bold
Vtiful\Kernel\Format::italic (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Format italic
Vtiful\Kernel\Format::underline (PHP 7 >= 7.0.0, PECL xlswriter >= 1.2.1) Vtiful\Kernel\Format underline
WeakMap::count (PECL weakref >= 0.2.0) Counts the number of live entries in the map
WeakMap::current (PECL weakref >= 0.2.0) Returns the current value under iteration
WeakMap::key (PECL weakref >= 0.2.0) Returns the current key under iteration
WeakMap::next (PECL weakref >= 0.2.0) Advances to the next map element
WeakMap::offsetExists (PECL weakref >= 0.2.0) Checks whether a certain object is in the map
WeakMap::offsetGet (PECL weakref >= 0.2.0) Returns the value pointed to by a certain object
WeakMap::offsetSet (PECL weakref >= 0.2.0) Updates the map with a new key-value pair
WeakMap::offsetUnset (PECL weakref >= 0.2.0) Removes an entry from the map
WeakMap::rewind (PECL weakref >= 0.2.0) Rewinds the iterator to the beginning of the map
WeakMap::valid (PECL weakref >= 0.2.0) Returns whether the iterator is still on a valid map element
WeakRef::acquire (PECL weakref >= 0.1.0) Acquires a strong reference on that object
WeakRef::get (PECL weakref >= 0.1.0) Returns the object pointed to by the weak reference
WeakRef::release (PECL weakref >= 0.1.0) Releases a previously acquired reference
WeakRef::valid (PECL weakref >= 0.1.0) Checks whether the object referenced still exists
wkhtmltox\Image\Converter::convert (wkhtmltox >= 0.1.0) Perform Image conversion
wkhtmltox\Image\Converter::getVersion (wkhtmltox >= 0.3.2) Determine version of Converter
wkhtmltox\PDF\Converter::add (wkhtmltox >= 0.1.0) Add an object for conversion
wkhtmltox\PDF\Converter::convert (wkhtmltox >= 0.1.0) Perform PDF conversion
wkhtmltox\PDF\Converter::getVersion (wkhtmltox >= 0.3.2) Determine version of Converter
Worker::collect (PECL pthreads >= 3.0.0) Collect references to completed tasks
Worker::getStacked (PECL pthreads >= 2.0.0) Gets the remaining stack size
Worker::isShutdown (PECL pthreads >= 2.0.0) State Detection
Worker::isWorking (PECL pthreads >= 2.0.0) State Detection
Worker::shutdown (PECL pthreads >= 2.0.0) Shutdown the worker
Worker::stack (PECL pthreads >= 2.0.0) Stacking work
Worker::unstack (PECL pthreads >= 2.0.0) Unstacking work
XMLDiff\Base::diff (PECL xmldiff >= 0.8.0) Produce diff of two XML documents
XMLDiff\Base::merge (PECL xmldiff >= 0.8.0) Produce new XML document based on diff
XMLDiff\DOM::diff (PECL xmldiff >= 0.8.0) Diff two DOMDocument objects
XMLDiff\DOM::merge (PECL xmldiff >= 0.8.0) Produce merged DOMDocument
XMLDiff\File::diff (PECL xmldiff >= 0.8.0) Diff two XML files
XMLDiff\File::merge (PECL xmldiff >= 0.8.0) Produce merged XML document
XMLDiff\Memory::diff (PECL xmldiff >= 0.8.0) Diff two XML documents
XMLDiff\Memory::merge (PECL xmldiff >= 0.8.0) Produce merged XML document
XMLReader::close (PHP 5 >= 5.1.0, PHP 7) Close the XMLReader input
XMLReader::expand (PHP 5 >= 5.1.0, PHP 7) Returns a copy of the current node as a DOM object
XMLReader::getAttribute (PHP 5 >= 5.1.0, PHP 7) Get the value of a named attribute
XMLReader::getAttributeNo (PHP 5 >= 5.1.0, PHP 7) Get the value of an attribute by index
XMLReader::getAttributeNs (PHP 5 >= 5.1.0, PHP 7) Get the value of an attribute by localname and URI
XMLReader::getParserProperty (PHP 5 >= 5.1.0, PHP 7) Indicates if specified property has been set
XMLReader::isValid (PHP 5 >= 5.1.0, PHP 7) Indicates if the parsed document is valid
XMLReader::lookupNamespace (PHP 5 >= 5.1.0, PHP 7) Lookup namespace for a prefix
XMLReader::moveToAttribute (PHP 5 >= 5.1.0, PHP 7) Move cursor to a named attribute
XMLReader::moveToAttributeNo (PHP 5 >= 5.1.0, PHP 7) Move cursor to an attribute by index
XMLReader::moveToAttributeNs (PHP 5 >= 5.1.0, PHP 7) Move cursor to a named attribute
XMLReader::moveToElement (PHP 5 >= 5.1.0, PHP 7) Position cursor on the parent Element of current Attribute
XMLReader::moveToFirstAttribute (PHP 5 >= 5.1.0, PHP 7) Position cursor on the first Attribute
XMLReader::moveToNextAttribute (PHP 5 >= 5.1.0, PHP 7) Position cursor on the next Attribute
XMLReader::next (PHP 5 >= 5.1.0, PHP 7) Move cursor to next node skipping all subtrees
XMLReader::open (PHP 5 >= 5.1.0, PHP 7) Set the URI containing the XML to parse
XMLReader::read (PHP 5 >= 5.1.0, PHP 7) Move to next node in document
XMLReader::readInnerXml (PHP 5 >= 5.2.0, PHP 7) Retrieve XML from current node
XMLReader::readOuterXml (PHP 5 >= 5.2.0, PHP 7) Retrieve XML from current node, including itself
XMLReader::readString (PHP 5 >= 5.2.0, PHP 7) Reads the contents of the current node as a string
XMLReader::setParserProperty (PHP 5 >= 5.1.0, PHP 7) Set parser options
XMLReader::setRelaxNGSchema (PHP 5 >= 5.1.0, PHP 7) Set the filename or URI for a RelaxNG Schema
XMLReader::setRelaxNGSchemaSource (PHP 5 >= 5.1.0, PHP 7) Set the data containing a RelaxNG Schema
XMLReader::setSchema (PHP 5 >= 5.2.0, PHP 7) Validate document against XSD
XMLReader::xml (PHP 5 >= 5.1.0, PHP 7) Set the data containing the XML to parse
XSLTProcessor::getParameter (PHP 5, PHP 7) Get value of a parameter
XSLTProcessor::getSecurityPrefs (PHP >= 5.4.0) Get security preferences
XSLTProcessor::hasExsltSupport (PHP 5 >= 5.0.4, PHP 7) Determine if PHP has EXSLT support
XSLTProcessor::importStylesheet (PHP 5, PHP 7) Import stylesheet
XSLTProcessor::registerPHPFunctions (PHP 5 >= 5.0.4, PHP 7) Enables the ability to use PHP functions as XSLT functions
XSLTProcessor::removeParameter (PHP 5, PHP 7) Remove parameter
XSLTProcessor::setParameter (PHP 5, PHP 7) Set value for a parameter
XSLTProcessor::setProfiling (PHP >= 5.3.0) Sets profiling output file
XSLTProcessor::setSecurityPrefs (PHP >= 5.4.0) Set security preferences
XSLTProcessor::transformToDoc (PHP 5, PHP 7) Transform to a DOMDocument
XSLTProcessor::transformToURI (PHP 5, PHP 7) Transform to URI
XSLTProcessor::transformToXml (PHP 5, PHP 7) Transform to XML
Yaconf::get (PECL yaconf >= 1.0.0) Retrieve a item
Yaconf::has (PECL yaconf >= 1.0.0) Determine if a item exists
Yaf_Action_Abstract::execute (Yaf >=1.0.0) Action entry point
Yaf_Action_Abstract::getController (Yaf >=1.0.0) Retrieve controller object
Yaf_Application::app (Yaf >=1.0.0) Retrieve an Application instance
Yaf_Application::bootstrap (Yaf >=1.0.0) Call bootstrap
Yaf_Application::clearLastError (Yaf >=2.1.2) Clear the last error info
Yaf_Application::environ (Yaf >=1.0.0) Retrive environ
Yaf_Application::execute (Yaf >=1.0.0) Execute a callback
Yaf_Application::getAppDirectory (Yaf >=2.1.4) Get the application directory
Yaf_Application::getConfig (Yaf >=1.0.0) Retrive the config instance
Yaf_Application::getDispatcher (Yaf >=1.0.0) Get Yaf_Dispatcher instance
Yaf_Application::getLastErrorMsg (Yaf >=2.1.2) Get message of the last occurred error
Yaf_Application::getLastErrorNo (Yaf >=2.1.2) Get code of last occurred error
Yaf_Application::getModules (Yaf >=1.0.0) Get defined module names
Yaf_Application::run (Yaf >=1.0.0) Start Yaf_Application
Yaf_Application::setAppDirectory (Yaf >=2.1.4) Change the application directory
Yaf_Config_Abstract::get (Yaf >=1.0.0) Getter
Yaf_Config_Abstract::readonly (Yaf >=1.0.0) Find a config whether readonly
Yaf_Config_Abstract::set (Yaf >=1.0.0) Setter
Yaf_Config_Abstract::toArray (Yaf >=1.0.0) Cast to array
Yaf_Config_Ini::count (Yaf >=1.0.0) Count all elements in Yaf_Config.ini
Yaf_Config_Ini::current (Yaf >=1.0.0) Retrieve the current value
Yaf_Config_Ini::key (Yaf >=1.0.0) Fetch current element's key
Yaf_Config_Ini::next (Yaf >=1.0.0) Advance the internal pointer
Yaf_Config_Ini::offsetExists (Yaf >=1.0.0) The offsetExists purpose
Yaf_Config_Ini::offsetGet (Yaf >=1.0.0) The offsetGet purpose
Yaf_Config_Ini::offsetSet (Yaf >=1.0.0) The offsetSet purpose
Yaf_Config_Ini::offsetUnset (Yaf >=1.0.0) The offsetUnset purpose
Yaf_Config_Ini::readonly (Yaf >=1.0.0) The readonly purpose
Yaf_Config_Ini::rewind (Yaf >=1.0.0) The rewind purpose
Yaf_Config_Ini::toArray (Yaf >=1.0.0) Return config as a PHP array
Yaf_Config_Ini::valid (Yaf >=1.0.0) The valid purpose
Yaf_Config_Simple::count (Yaf >=1.0.0) The count purpose
Yaf_Config_Simple::current (Yaf >=1.0.0) The current purpose
Yaf_Config_Simple::key (Yaf >=1.0.0) The key purpose
Yaf_Config_Simple::next (Yaf >=1.0.0) The next purpose
Yaf_Config_Simple::offsetExists (Yaf >=1.0.0) The offsetExists purpose
Yaf_Config_Simple::offsetGet (Yaf >=1.0.0) The offsetGet purpose
Yaf_Config_Simple::offsetSet (Yaf >=1.0.0) The offsetSet purpose
Yaf_Config_Simple::offsetUnset (Yaf >=1.0.0) The offsetUnset purpose
Yaf_Config_Simple::readonly (Yaf >=1.0.0) The readonly purpose
Yaf_Config_Simple::rewind (Yaf >=1.0.0) The rewind purpose
Yaf_Config_Simple::toArray (Yaf >=1.0.0) Returns a PHP array
Yaf_Config_Simple::valid (Yaf >=1.0.0) The valid purpose
Yaf_Controller_Abstract::display (Yaf >=1.0.0) The display purpose
Yaf_Controller_Abstract::forward (Yaf >=1.0.0) Foward to another action
Yaf_Controller_Abstract::getInvokeArg (Yaf >=1.0.0) The getInvokeArg purpose
Yaf_Controller_Abstract::getInvokeArgs (Yaf >=1.0.0) The getInvokeArgs purpose
Yaf_Controller_Abstract::getModuleName (Yaf >=1.0.0) Get module name
Yaf_Controller_Abstract::getRequest (Yaf >=1.0.0) Retrieve current request object
Yaf_Controller_Abstract::getResponse (Yaf >=1.0.0) Retrieve current response object
Yaf_Controller_Abstract::getView (Yaf >=1.0.0) Retrieve the view engine
Yaf_Controller_Abstract::getViewpath (Yaf >=1.0.0) The getViewpath purpose
Yaf_Controller_Abstract::init (Yaf >=1.0.0) Controller initializer
Yaf_Controller_Abstract::initView (Yaf >=1.0.0) The initView purpose
Yaf_Controller_Abstract::redirect (Yaf >=1.0.0) Redirect to a URL
Yaf_Controller_Abstract::render (Yaf >=1.0.0) Render view template
Yaf_Controller_Abstract::setViewpath (Yaf >=1.0.0) The setViewpath purpose
Yaf_Dispatcher::autoRender (Yaf >=1.0.0) Switch on/off autorendering
Yaf_Dispatcher::catchException (Yaf >=1.0.0) Switch on/off exception catching
Yaf_Dispatcher::disableView (Yaf >=1.0.0) Disable view rendering
Yaf_Dispatcher::dispatch (Yaf >=1.0.0) Dispatch a request
Yaf_Dispatcher::enableView (Yaf >=1.0.0) Enable view rendering
Yaf_Dispatcher::flushInstantly (Yaf >=1.0.0) Switch on/off the instant flushing
Yaf_Dispatcher::getApplication (Yaf >=1.0.0) Retrive the application
Yaf_Dispatcher::getInstance (Yaf >=1.0.0) Retrive the dispatcher instance
Yaf_Dispatcher::getRequest (Yaf >=1.0.0) Retrive the request instance
Yaf_Dispatcher::getRouter (Yaf >=1.0.0) Retrive router instance
Yaf_Dispatcher::initView (Yaf >=1.0.0) Initialize view and return it
Yaf_Dispatcher::registerPlugin (Yaf >=1.0.0) Register a plugin
Yaf_Dispatcher::returnResponse (Yaf >=1.0.0) The returnResponse purpose
Yaf_Dispatcher::setDefaultAction (Yaf >=1.0.0) Change default action name
Yaf_Dispatcher::setDefaultController (Yaf >=1.0.0) Change default controller name
Yaf_Dispatcher::setDefaultModule (Yaf >=1.0.0) Change default module name
Yaf_Dispatcher::setErrorHandler (Yaf >=1.0.0) Set error handler
Yaf_Dispatcher::setRequest (Yaf >=1.0.0) The setRequest purpose
Yaf_Dispatcher::setView (Yaf >=1.0.0) Set a custom view engine
Yaf_Dispatcher::throwException (Yaf >=1.0.0) Switch on/off exception throwing
Yaf_Exception::getPrevious (Yaf >=1.0.0) The getPrevious purpose
Yaf_Loader::autoload (Yaf >=1.0.0) The autoload purpose
Yaf_Loader::clearLocalNamespace (Yaf >=1.0.0) The clearLocalNamespace purpose
Yaf_Loader::getInstance (Yaf >=1.0.0) The getInstance purpose
Yaf_Loader::getLibraryPath (Yaf >=2.1.4) Get the library path
Yaf_Loader::getLocalNamespace (Yaf >=1.0.0) The getLocalNamespace purpose
Yaf_Loader::import (Yaf >=1.0.0) The import purpose
Yaf_Loader::isLocalName (Yaf >=1.0.0) The isLocalName purpose
Yaf_Loader::registerLocalNamespace (Yaf >=1.0.0) Register local class prefix
Yaf_Loader::setLibraryPath (Yaf >=2.1.4) Change the library path
Yaf_Plugin_Abstract::dispatchLoopShutdown (Yaf >=1.0.0) The dispatchLoopShutdown purpose
Yaf_Plugin_Abstract::dispatchLoopStartup (Yaf >=1.0.0) Hook before dispatch loop
Yaf_Plugin_Abstract::postDispatch (Yaf >=1.0.0) The postDispatch purpose
Yaf_Plugin_Abstract::preDispatch (Yaf >=1.0.0) The preDispatch purpose
Yaf_Plugin_Abstract::preResponse (Yaf >=1.0.0) The preResponse purpose
Yaf_Plugin_Abstract::routerShutdown (Yaf >=1.0.0) The routerShutdown purpose
Yaf_Plugin_Abstract::routerStartup (Yaf >=1.0.0) RouterStartup hook
Yaf_Registry::del (Yaf >=1.0.0) Remove an item from registry
Yaf_Registry::get (Yaf >=1.0.0) Retrieve an item from registry
Yaf_Registry::has (Yaf >=1.0.0) Check whether an item exists
Yaf_Registry::set (Yaf >=1.0.0) Add an item into registry
Yaf_Request_Abstract::getActionName (Yaf >=1.0.0) The getActionName purpose
Yaf_Request_Abstract::getBaseUri (Yaf >=1.0.0) The getBaseUri purpose
Yaf_Request_Abstract::getControllerName (Yaf >=1.0.0) The getControllerName purpose
Yaf_Request_Abstract::getEnv (Yaf >=1.0.0) Retrieve ENV varialbe
Yaf_Request_Abstract::getException (Yaf >=1.0.0) The getException purpose
Yaf_Request_Abstract::getLanguage (Yaf >=1.0.0) Retrieve client's prefered language
Yaf_Request_Abstract::getMethod (Yaf >=1.0.0) Retrieve the request method
Yaf_Request_Abstract::getModuleName (Yaf >=1.0.0) The getModuleName purpose
Yaf_Request_Abstract::getParam (Yaf >=1.0.0) Retrieve calling parameter
Yaf_Request_Abstract::getParams (Yaf >=1.0.0) Retrieve all calling parameters
Yaf_Request_Abstract::getRequestUri (Yaf >=1.0.0) The getRequestUri purpose
Yaf_Request_Abstract::getServer (Yaf >=1.0.0) Retrieve SERVER variable
Yaf_Request_Abstract::isCli (Yaf >=1.0.0) Determine if request is CLI request
Yaf_Request_Abstract::isDispatched (Yaf >=1.0.0) Determin if the request is dispatched
Yaf_Request_Abstract::isGet (Yaf >=1.0.0) Determine if request is GET request
Yaf_Request_Abstract::isHead (Yaf >=1.0.0) Determine if request is HEAD request
Yaf_Request_Abstract::isOptions (Yaf >=1.0.0) Determine if request is OPTIONS request
Yaf_Request_Abstract::isPost (Yaf >=1.0.0) Determine if request is POST request
Yaf_Request_Abstract::isPut (Yaf >=1.0.0) Determine if request is PUT request
Yaf_Request_Abstract::isRouted (Yaf >=1.0.0) Determin if request has been routed
Yaf_Request_Abstract::isXmlHttpRequest (Yaf >=1.0.0) Determine if request is AJAX request
Yaf_Request_Abstract::setActionName (Yaf >=1.0.0) The setActionName purpose
Yaf_Request_Abstract::setBaseUri (Yaf >=1.0.0) Set base URI
Yaf_Request_Abstract::setControllerName (Yaf >=1.0.0) The setControllerName purpose
Yaf_Request_Abstract::setDispatched (Yaf >=1.0.0) The setDispatched purpose
Yaf_Request_Abstract::setModuleName (Yaf >=1.0.0) The setModuleName purpose
Yaf_Request_Abstract::setParam (Yaf >=1.0.0) Set a calling parameter to a request
Yaf_Request_Abstract::setRequestUri (Yaf >=2.1.0) The setRequestUri purpose
Yaf_Request_Abstract::setRouted (Yaf >=1.0.0) The setRouted purpose
Yaf_Request_Http::get (Yaf >=1.0.0) Retrieve variable from client
Yaf_Request_Http::getCookie (Yaf >=1.0.0) Retrieve Cookie variable
Yaf_Request_Http::getFiles (Yaf >=1.0.0) The getFiles purpose
Yaf_Request_Http::getPost (Yaf >=1.0.0) Retrieve POST variable
Yaf_Request_Http::getQuery (Yaf >=1.0.0) Fetch a query parameter
Yaf_Request_Http::getRaw (Yaf >=3.0.7) Retrieve Raw request body
Yaf_Request_Http::getRequest (Yaf >=1.0.0) The getRequest purpose
Yaf_Request_Http::isXmlHttpRequest (Yaf >=1.0.0) Determin if request is Ajax Request
Yaf_Request_Simple::get (Yaf >=1.0.0) The get purpose
Yaf_Request_Simple::getCookie (Yaf >=1.0.0) The getCookie purpose
Yaf_Request_Simple::getFiles (Yaf >=1.0.0) The getFiles purpose
Yaf_Request_Simple::getPost (Yaf >=1.0.0) The getPost purpose
Yaf_Request_Simple::getQuery (Yaf >=1.0.0) The getQuery purpose
Yaf_Request_Simple::getRequest (Yaf >=1.0.0) The getRequest purpose
Yaf_Request_Simple::isXmlHttpRequest (Yaf >=1.0.0) Determin if request is AJAX request
Yaf_Response_Abstract::appendBody (Yaf >=1.0.0) Append to response body
Yaf_Response_Abstract::clearBody (Yaf >=1.0.0) Discard all exists response body
Yaf_Response_Abstract::clearHeaders (Yaf >=1.0.0) Discard all set headers
Yaf_Response_Abstract::getBody (Yaf >=1.0.0) Retrieve a exists content
Yaf_Response_Abstract::getHeader (Yaf >=1.0.0) The getHeader purpose
Yaf_Response_Abstract::prependBody (Yaf >=1.0.0) The prependBody purpose
Yaf_Response_Abstract::response (Yaf >=1.0.0) Send response
Yaf_Response_Abstract::setAllHeaders (Yaf >=1.0.0) The setAllHeaders purpose
Yaf_Response_Abstract::setBody (Yaf >=1.0.0) Set content to response
Yaf_Response_Abstract::setHeader (Yaf >=1.0.0) Set reponse header
Yaf_Response_Abstract::setRedirect (Yaf >=1.0.0) The setRedirect purpose
Yaf_Router::addConfig (Yaf >=1.0.0) Add config-defined routes into Router
Yaf_Router::addRoute (Yaf >=1.0.0) Add new Route into Router
Yaf_Router::getCurrentRoute (Yaf >=1.0.0) Get the effective route name
Yaf_Router::getRoute (Yaf >=1.0.0) Retrieve a route by name
Yaf_Router::getRoutes (Yaf >=1.0.0) Retrieve registered routes
Yaf_Router::route (Yaf >=1.0.0) The route purpose
Yaf_Route_Interface::assemble (Yaf >=2.3.0) Assemble a request
Yaf_Route_Interface::route (Yaf >=1.0.0) Route a request
Yaf_Route_Map::assemble (Yaf >=2.3.0) Assemble a url
Yaf_Route_Map::route (Yaf >=1.0.0) The route purpose
Yaf_Route_Regex::assemble (Yaf >=2.3.0) Assemble a url
Yaf_Route_Regex::route (Yaf >=1.0.0) The route purpose
Yaf_Route_Rewrite::assemble (Yaf >=2.3.0) Assemble a url
Yaf_Route_Rewrite::route (Yaf >=1.0.0) The route purpose
Yaf_Route_Simple::assemble (Yaf >=2.3.0) Assemble a url
Yaf_Route_Simple::route (Yaf >=1.0.0) Route a request
Yaf_Route_Static::assemble (Yaf >=2.3.0) Assemble a url
Yaf_Route_Static::match (Yaf >=1.0.0) The match purpose
Yaf_Route_Static::route (Yaf >=1.0.0) Route a request
Yaf_Route_Supervar::assemble (Yaf >=2.3.0) Assemble a url
Yaf_Route_Supervar::route (Yaf >=1.0.0) The route purpose
Yaf_Session::count (Yaf >=1.0.0) The count purpose
Yaf_Session::current (Yaf >=1.0.0) The current purpose
Yaf_Session::del (Yaf >=1.0.0) The del purpose
Yaf_Session::getInstance (Yaf >=1.0.0) The getInstance purpose
Yaf_Session::has (Yaf >=1.0.0) The has purpose
Yaf_Session::key (Yaf >=1.0.0) The key purpose
Yaf_Session::next (Yaf >=1.0.0) The next purpose
Yaf_Session::offsetExists (Yaf >=1.0.0) The offsetExists purpose
Yaf_Session::offsetGet (Yaf >=1.0.0) The offsetGet purpose
Yaf_Session::offsetSet (Yaf >=1.0.0) The offsetSet purpose
Yaf_Session::offsetUnset (Yaf >=1.0.0) The offsetUnset purpose
Yaf_Session::rewind (Yaf >=1.0.0) The rewind purpose
Yaf_Session::start (Yaf >=1.0.0) The start purpose
Yaf_Session::valid (Yaf >=1.0.0) The valid purpose
Yaf_View_Interface::assign (Yaf >=1.0.0) Assign value to View engine
Yaf_View_Interface::display (Yaf >=1.0.0) Render and output a template
Yaf_View_Interface::getScriptPath (Yaf >=1.0.0) The getScriptPath purpose
Yaf_View_Interface::render (Yaf >=1.0.0) Render a template
Yaf_View_Interface::setScriptPath (Yaf >=1.0.0) The setScriptPath purpose
Yaf_View_Simple::assign (Yaf >=1.0.0) Assign values
Yaf_View_Simple::assignRef (Yaf >=1.0.0) The assignRef purpose
Yaf_View_Simple::clear (Yaf >=2.2.0) Clear Assigned values
Yaf_View_Simple::display (Yaf >=1.0.0) Render and display
Yaf_View_Simple::eval (Yaf >=2.2.0) Render template
Yaf_View_Simple::getScriptPath (Yaf >=1.0.0) Get templates directory
Yaf_View_Simple::render (Yaf >=1.0.0) Render template
Yaf_View_Simple::setScriptPath (Yaf >=1.0.0) Set tempaltes directory
Yar_Client::setOpt (PECL yar >= 1.0.0) Set calling contexts
Yar_Client_Exception::getType (PECL yar >= 1.0.0) Retrieve exception's type
Yar_Concurrent_Client::call (PECL yar >= 1.0.0) Register a concurrent call
Yar_Concurrent_Client::loop (PECL yar >= 1.0.0) Send all calls
Yar_Concurrent_Client::reset (PECL yar >= 1.2.4) Clean all registered calls
Yar_Server::handle (PECL yar >= 1.0.0) Start RPC Server
Yar_Server_Exception::getType (PECL yar >= 1.0.0) Retrieve exception's type
ZipArchive::addEmptyDir (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.8.0) Add a new directory
ZipArchive::addFile (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Adds a file to a ZIP archive from the given path
ZipArchive::addFromString (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Add a file to a ZIP archive using its contents
ZipArchive::addGlob (PHP 5 >= 5.3.0, PHP 7, PECL zip >= 1.9.0) Add files from a directory by glob pattern
ZipArchive::addPattern (PHP 5 >= 5.3.0, PHP 7, PECL zip >= 1.9.0) Add files from a directory by PCRE pattern
ZipArchive::close (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Close the active archive (opened or newly created)
ZipArchive::count (No version information available, might only be in Git) Counts the number of files in the achive
ZipArchive::deleteIndex (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Delete an entry in the archive using its index
ZipArchive::deleteName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Delete an entry in the archive using its name
ZipArchive::extractTo (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Extract the archive contents
ZipArchive::getArchiveComment (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Returns the Zip archive comment
ZipArchive::getCommentIndex (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.4.0) Returns the comment of an entry using the entry index
ZipArchive::getCommentName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.4.0) Returns the comment of an entry using the entry name
ZipArchive::GetExternalAttributesIndex (PHP 5 >= 5.6.0, PHP 7, PECL zip >= 1.12.4) Retrieve the external attributes of an entry defined by its index
ZipArchive::getExternalAttributesName (PHP 5 >= 5.6.0, PHP 7, PECL zip >= 1.12.4) Retrieve the external attributes of an entry defined by its name
ZipArchive::getFromIndex (No version information available, might only be in Git) Returns the entry contents using its index
ZipArchive::getFromName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Returns the entry contents using its name
ZipArchive::getNameIndex (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Returns the name of an entry using its index
ZipArchive::getStatusString (PHP 5 >= 5.2.7, PHP 7) Returns the status error message, system and/or zip messages
ZipArchive::getStream (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Get a file handler to the entry defined by its name (read only)
ZipArchive::locateName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Returns the index of the entry in the archive
ZipArchive::open (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Open a ZIP file archive
ZipArchive::renameIndex (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Renames an entry defined by its index
ZipArchive::renameName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Renames an entry defined by its name
ZipArchive::setArchiveComment (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.4.0) Set the comment of a ZIP archive
ZipArchive::setCommentIndex (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.4.0) Set the comment of an entry defined by its index
ZipArchive::setCommentName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.4.0) Set the comment of an entry defined by its name
ZipArchive::setCompressionIndex (PHP 7, PECL zip >= 1.13.0) Set the compression method of an entry defined by its index
ZipArchive::setCompressionName (PHP 7, PECL zip >= 1.13.0) Set the compression method of an entry defined by its name
ZipArchive::setEncryptionIndex (PHP >= 7.2.0, PECL zip >= 1.14.0) Set the encryption method of an entry defined by its index
ZipArchive::setEncryptionName (PHP >= 7.2.0, PECL zip >= 1.14.0) Set the encryption method of an entry defined by its name
ZipArchive::setExternalAttributesIndex (PHP 5 >= 5.6.0, PHP 7, PECL zip >= 1.12.4) Set the external attributes of an entry defined by its index
ZipArchive::setExternalAttributesName (PHP 5 >= 5.6.0, PHP 7, PECL zip >= 1.12.4) Set the external attributes of an entry defined by its name
ZipArchive::setPassword (PHP 5 >= 5.6.0, PHP 7, PECL zip >= 1.12.4) Set the password for the active archive
ZipArchive::statIndex (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Get the details of an entry defined by its index
ZipArchive::statName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Get the details of an entry defined by its name
ZipArchive::unchangeAll (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Undo all changes done in the archive
ZipArchive::unchangeArchive (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Revert all global changes done in the archive
ZipArchive::unchangeIndex (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) Revert all changes done to an entry at the given index
ZipArchive::unchangeName (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.5.0) Revert all changes done to an entry with the given name
ZMQContext::getOpt (PECL zmq >= 1.0.4) Get context option
ZMQContext::getSocket (PECL zmq >= 0.5.0) Create a new socket
ZMQContext::isPersistent (PECL zmq >= 0.5.0) Whether the context is persistent
ZMQContext::setOpt (PECL zmq >= 1.0.4) Set a socket option
ZMQDevice::getIdleTimeout (No version information available, might only be in Git) Get the idle timeout
ZMQDevice::getTimerTimeout (No version information available, might only be in Git) Get the timer timeout
ZMQDevice::run (No version information available, might only be in Git) Run the new device
ZMQDevice::setIdleCallback (No version information available, might only be in Git) Set the idle callback function
ZMQDevice::setIdleTimeout (No version information available, might only be in Git) Set the idle timeout
ZMQDevice::setTimerCallback (No version information available, might only be in Git) Set the timer callback function
ZMQDevice::setTimerTimeout (No version information available, might only be in Git) Set the timer timeout
ZMQPoll::add (PECL zmq >= 0.5.0) Add item to the poll set
ZMQPoll::clear (PECL zmq >= 0.5.0) Clear the poll set
ZMQPoll::count (PECL zmq >= 0.5.0) Count items in the poll set
ZMQPoll::getLastErrors (PECL zmq >= 0.5.0) Get poll errors
ZMQPoll::poll (PECL zmq >= 0.5.0) Poll the items
ZMQPoll::remove (PECL zmq >= 0.5.0) Remove item from poll set
ZMQSocket::bind (PECL zmq >= 0.5.0) Bind the socket
ZMQSocket::connect (PECL zmq >= 0.5.0) Connect the socket
ZMQSocket::disconnect (PECL zmq >= 1.0.4) Disconnect a socket
ZMQSocket::getEndpoints (PECL zmq >= 0.5.0) Get list of endpoints
ZMQSocket::getPersistentId (PECL zmq >= 0.5.0) Get the persistent id
ZMQSocket::getSocketType (PECL zmq >= 0.5.0) Get the socket type
ZMQSocket::getSockOpt (PECL zmq >= 0.5.0) Get socket option
ZMQSocket::isPersistent (PECL zmq >= 0.5.0) Whether the socket is persistent
ZMQSocket::recv (PECL zmq >= 0.5.0) Receives a message
ZMQSocket::recvMulti (PECL zmq >= 0.8.0) Receives a multipart message
ZMQSocket::send (PECL zmq >= 0.5.0) Sends a message
ZMQSocket::setSockOpt (PECL zmq >= 0.5.0) Set a socket option
ZMQSocket::unbind (PECL zmq >= 1.0.4) Unbind the socket
Zookeeper::addAuth (PECL zookeeper >= 0.1.0) Specify application credentials
Zookeeper::close (PECL zookeeper >= 0.5.0) Close the zookeeper handle and free up any resources
Zookeeper::connect (PECL zookeeper >= 0.2.0) Create a handle to used communicate with zookeeper
Zookeeper::create (PECL zookeeper >= 0.1.0) Create a node synchronously
Zookeeper::delete (PECL zookeeper >= 0.2.0) Delete a node in zookeeper synchronously
Zookeeper::exists (PECL zookeeper >= 0.1.0) Checks the existence of a node in zookeeper synchronously
Zookeeper::get (PECL zookeeper >= 0.1.0) Gets the data associated with a node synchronously
Zookeeper::getAcl (PECL zookeeper >= 0.1.0) Gets the acl associated with a node synchronously
Zookeeper::getChildren (PECL zookeeper >= 0.1.0) Lists the children of a node synchronously
Zookeeper::getClientId (PECL zookeeper >= 0.1.0) Return the client session id, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE)
Zookeeper::getConfig (PECL zookeeper >= 0.6.0, ZooKeeper >= 3.5.0) Get instance of ZookeeperConfig
Zookeeper::getRecvTimeout (PECL zookeeper >= 0.1.0) Return the timeout for this session, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE). This value may change after a server re-connect
Zookeeper::getState (PECL zookeeper >= 0.1.0) Get the state of the zookeeper connection
Zookeeper::isRecoverable (PECL zookeeper >= 0.1.0) Checks if the current zookeeper connection state can be recovered
Zookeeper::set (PECL zookeeper >= 0.1.0) Sets the data associated with a node
Zookeeper::setAcl (PECL zookeeper >= 0.1.0) Sets the acl associated with a node synchronously
Zookeeper::setDebugLevel (PECL zookeeper >= 0.1.0) Sets the debugging level for the library
Zookeeper::setDeterministicConnOrder (PECL zookeeper >= 0.1.0) Enable/disable quorum endpoint order randomization
Zookeeper::setLogStream (PECL zookeeper >= 0.1.0) Sets the stream to be used by the library for logging
Zookeeper::setWatcher (PECL zookeeper >= 0.1.0) Set a watcher function
ZookeeperConfig::add (PECL zookeeper >= 0.6.0, ZooKeeper >= 3.5.0) Add servers to the ensemble
ZookeeperConfig::get (PECL zookeeper >= 0.6.0, ZooKeeper >= 3.5.0) Gets the last committed configuration of the ZooKeeper cluster as it is known to the server to which the client is connected, synchronously
ZookeeperConfig::remove (PECL zookeeper >= 0.6.0, ZooKeeper >= 3.5.0) Remove servers from the ensemble
ZookeeperConfig::set (PECL zookeeper >= 0.6.0, ZooKeeper >= 3.5.0) Change ZK cluster ensemble membership and roles of ensemble peers
