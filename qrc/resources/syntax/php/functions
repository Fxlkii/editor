abs ( mixed $number ) : mixed
acos ( float $arg ) : float
acosh ( float $arg ) : float
addcslashes ( string $str , string $charlist ) : string
addslashes ( string $str ) : string
apache_child_terminate ( void ) : bool
apache_getenv ( string $variable [, bool $walk_to_top = FALSE ] ) : string
apache_get_modules ( void ) : array
apache_get_version ( void ) : string
apache_lookup_uri ( string $filename ) : string
apache_note ( string $note_name [, string $note_value = "" ] ) : string
apache_request_headers ( void ) : array
apache_reset_timeout ( void ) : bool
apache_response_headers ( void ) : array
apache_setenv ( string $variable , string $value [, bool $walk_to_top = FALSE ] ) : string
apcu_add ( string $key , mixed $var [, int $ttl = 0 ] ) : string [:OR:] ( array $values [, mixed $unused = NULL [, int $ttl = 0 ]] ) : string
apcu_cache_info ([ bool $limited = FALSE ] ) : bool
apcu_cas ( string $key , int $old , int $new ) : string
apcu_clear_cache ( void ) : bool
apcu_dec ( string $key [, int $step = 1 [, bool &$success ]] ) : string
apcu_delete ( mixed $key ) : mixed
apcu_entry ( string $key , callable $generator [, int $ttl = 0 ] ) : string
apcu_exists ( mixed $keys ) : mixed
apcu_fetch ( mixed $key [, bool &$success ] ) : mixed
apcu_inc ( string $key [, int $step = 1 [, bool &$success ]] ) : string
apcu_sma_info ([ bool $limited = FALSE ] ) : bool
apcu_store ( string $key , mixed $var [, int $ttl = 0 ] ) : string [:OR:] ( array $values [, mixed $unused = NULL [, int $ttl = 0 ]] ) : string
apc_add ( string $key , mixed $var [, int $ttl = 0 ] ) : string [:OR:] ( array $values [, mixed $unused = NULL [, int $ttl = 0 ]] ) : string
apc_bin_dump ([ array $files = NULL [, array $user_vars = NULL ]] ) : array
apc_bin_dumpfile ( array $files , array $user_vars , string $filename [, int $flags = 0 [, resource $context = NULL ]] ) : array
apc_bin_load ( string $data [, int $flags = 0 ] ) : string
apc_bin_loadfile ( string $filename [, resource $context = NULL [, int $flags = 0 ]] ) : string
apc_cache_info ([ string $cache_type = "" [, bool $limited = FALSE ]] ) : string
apc_cas ( string $key , int $old , int $new ) : string
apc_clear_cache ([ string $cache_type = "" ] ) : string
apc_compile_file ( string $filename [, bool $atomic = TRUE ] ) : string
apc_dec ( string $key [, int $step = 1 [, bool &$success ]] ) : string
apc_define_constants ( string $key , array $constants [, bool $case_sensitive = TRUE ] ) : string
apc_delete ( string $key ) : string
apc_delete_file ( mixed $keys ) : mixed
apc_exists ( mixed $keys ) : mixed
apc_fetch ( mixed $key [, bool &$success ] ) : mixed
apc_inc ( string $key [, int $step = 1 [, bool &$success ]] ) : string
apc_load_constants ( string $key [, bool $case_sensitive = TRUE ] ) : string
apc_sma_info ([ bool $limited = FALSE ] ) : bool
apc_store ( string $key , mixed $var [, int $ttl = 0 ] ) : string [:OR:] ( array $values [, mixed $unused = NULL [, int $ttl = 0 ]] ) : string
apd_breakpoint ( int $debug_level ) : int
apd_callstack ( void ) : array
apd_clunk ( string $warning [, string $delimiter = " " ] ) : string
apd_continue ( int $debug_level ) : int
apd_croak ( string $warning [, string $delimiter = " " ] ) : string
apd_dump_function_table ( void ) : void
apd_dump_persistent_resources ( void ) : array
apd_dump_regular_resources ( void ) : array
apd_echo ( string $output ) : string
apd_get_active_symbols ( void ) : array
apd_set_pprof_trace ([ string $dump_directory = ini_get("apd.dumpdir") [, string $fragment = "pprof" ]] ) : string
apd_set_session ( int $debug_level ) : int
apd_set_session_trace ( int $debug_level [, string $dump_directory = ini_get("apd.dumpdir") ] ) : int
apd_set_session_trace_socket ( string $tcp_server , int $socket_type , int $port , int $debug_level ) : string
array ([ mixed $... ] ) : mixed
array_change_key_case ( array $array [, int $case = CASE_LOWER ] ) : array
array_chunk ( array $array , int $size [, bool $preserve_keys = FALSE ] ) : array
array_column ( array $input , mixed $column_key [, mixed $index_key = NULL ] ) : array
array_combine ( array $keys , array $values ) : array
array_count_values ( array $array ) : array
array_diff ( array $array1 , array $array2 [, array $... ] ) : array
array_diff_assoc ( array $array1 , array $array2 [, array $... ] ) : array
array_diff_key ( array $array1 , array $array2 [, array $... ] ) : array
array_diff_uassoc ( array $array1 , array $array2 [, array $... ], callable $key_compare_func ) : array
array_diff_ukey ( array $array1 , array $array2 [, array $... ], callable $key_compare_func ) : array
array_fill ( int $start_index , int $num , mixed $value ) : int
array_fill_keys ( array $keys , mixed $value ) : array
array_filter ( array $array [, callable $callback [, int $flag = 0 ]] ) : array
array_flip ( array $array ) : array
array_intersect ( array $array1 , array $array2 [, array $... ] ) : array
array_intersect_assoc ( array $array1 , array $array2 [, array $... ] ) : array
array_intersect_key ( array $array1 , array $array2 [, array $... ] ) : array
array_intersect_uassoc ( array $array1 , array $array2 [, array $... ], callable $key_compare_func ) : array
array_intersect_ukey ( array $array1 , array $array2 [, array $... ], callable $key_compare_func ) : array
array_keys ( array $array ) : array [:OR:] ( array $array , mixed $search_value [, bool $strict = FALSE ] ) : array
array_key_exists ( mixed $key , array $array ) : mixed
array_key_first ( array $array ) : array
array_key_last ( array $array ) : array
array_map ( callable $callback , array $array1 [, array $... ] ) : callable
array_merge ( array $array1 [, array $... ] ) : array
array_merge_recursive ( array $array1 [, array $... ] ) : array
array_multisort ( array &$array1 [, mixed $array1_sort_order = SORT_ASC [, mixed $array1_sort_flags = SORT_REGULAR [, mixed $... ]]] ) : array
array_pad ( array $array , int $size , mixed $value ) : array
array_pop ( array &$array ) : array
array_product ( array $array ) : array
array_push ( array &$array [, mixed $... ] ) : array
array_rand ( array $array [, int $num = 1 ] ) : array
array_reduce ( array $array , callable $callback [, mixed $initial = NULL ] ) : array
array_replace ( array $array1 [, array $... ] ) : array
array_replace_recursive ( array $array1 [, array $... ] ) : array
array_reverse ( array $array [, bool $preserve_keys = FALSE ] ) : array
array_search ( mixed $needle , array $haystack [, bool $strict = FALSE ] ) : mixed
array_shift ( array &$array ) : array
array_slice ( array $array , int $offset [, int $length = NULL [, bool $preserve_keys = FALSE ]] ) : array
array_splice ( array &$input , int $offset [, int $length = count($input) [, mixed $replacement = array() ]] ) : array
array_sum ( array $array ) : array
array_udiff ( array $array1 , array $array2 [, array $... ], callable $value_compare_func ) : array
array_udiff_assoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func ) : array
array_udiff_uassoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func , callable $key_compare_func ) : array
array_uintersect ( array $array1 , array $array2 [, array $... ], callable $value_compare_func ) : array
array_uintersect_assoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func ) : array
array_uintersect_uassoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func , callable $key_compare_func ) : array
array_unique ( array $array [, int $sort_flags = SORT_STRING ] ) : array
array_unshift ( array &$array [, mixed $... ] ) : array
array_values ( array $array ) : array
array_walk ( array &$array , callable $callback [, mixed $userdata = NULL ] ) : array
array_walk_recursive ( array &$array , callable $callback [, mixed $userdata = NULL ] ) : array
arsort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) : array
asin ( float $arg ) : float
asinh ( float $arg ) : float
asort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) : array
assert ( mixed $assertion [, string $description ] ) : mixed [:OR:] ( mixed $assertion [, Throwable $exception ] ) : mixed
assert_options ( int $what [, mixed $value ] ) : int
atan ( float $arg ) : float
atan2 ( float $y , float $x ) : float
atanh ( float $arg ) : float
base64_decode ( string $data [, bool $strict = FALSE ] ) : string
base64_encode ( string $data ) : string
basename ( string $path [, string $suffix ] ) : string
base_convert ( string $number , int $frombase , int $tobase ) : string
bbcode_add_element ( resource $bbcode_container , string $tag_name , array $tag_rules ) : resource
bbcode_add_smiley ( resource $bbcode_container , string $smiley , string $replace_by ) : resource
bbcode_create ([ array $bbcode_initial_tags = NULL ] ) : array
bbcode_destroy ( resource $bbcode_container ) : resource
bbcode_parse ( resource $bbcode_container , string $to_parse ) : resource
bbcode_set_arg_parser ( resource $bbcode_container , resource $bbcode_arg_parser ) : resource
bbcode_set_flags ( resource $bbcode_container , int $flags [, int $mode = BBCODE_SET_FLAGS_SET ] ) : resource
bcadd ( string $left_operand , string $right_operand [, int $scale = 0 ] ) : string
bccomp ( string $left_operand , string $right_operand [, int $scale = 0 ] ) : string
bcdiv ( string $dividend , string $divisor [, int $scale = 0 ] ) : string
bcmod ( string $dividend , string $divisor [, int $scale = 0 ] ) : string
bcmul ( string $left_operand , string $right_operand [, int $scale = 0 ] ) : string
bcompiler_load ( string $filename ) : string
bcompiler_load_exe ( string $filename ) : string
bcompiler_parse_class ( string $class , string $callback ) : string
bcompiler_read ( resource $filehandle ) : resource
bcompiler_write_class ( resource $filehandle , string $className [, string $extends ] ) : resource
bcompiler_write_constant ( resource $filehandle , string $constantName ) : resource
bcompiler_write_exe_footer ( resource $filehandle , int $startpos ) : resource
bcompiler_write_file ( resource $filehandle , string $filename ) : resource
bcompiler_write_footer ( resource $filehandle ) : resource
bcompiler_write_function ( resource $filehandle , string $functionName ) : resource
bcompiler_write_functions_from_file ( resource $filehandle , string $fileName ) : resource
bcompiler_write_header ( resource $filehandle [, string $write_ver ] ) : resource
bcompiler_write_included_filename ( resource $filehandle , string $filename ) : resource
bcpow ( string $base , string $exponent [, int $scale = 0 ] ) : string
bcpowmod ( string $base , string $exponent , string $modulus [, int $scale = 0 ] ) : string
bcscale ( int $scale ) : int [:OR:] ( void ) : int
bcsqrt ( string $operand [, int $scale = 0 ] ) : string
bcsub ( string $left_operand , string $right_operand [, int $scale = 0 ] ) : string
bin2hex ( string $str ) : string
bindec ( string $binary_string ) : string
bindtextdomain ( string $domain , string $directory ) : string
bind_textdomain_codeset ( string $domain , string $codeset ) : string
blenc_encrypt ( string $plaintext , string $encodedfile [, string $encryption_key ] ) : string
boolval ( mixed $var ) : mixed
bson_decode ( string $bson ) : string
bson_encode ( mixed $anything ) : mixed
bzclose ( resource $bz ) : resource
bzcompress ( string $source [, int $blocksize = 4 [, int $workfactor = 0 ]] ) : string
bzdecompress ( string $source [, int $small = 0 ] ) : string
bzerrno ( resource $bz ) : resource
bzerror ( resource $bz ) : resource
bzerrstr ( resource $bz ) : resource
bzflush ( resource $bz ) : resource
bzopen ( mixed $file , string $mode ) : mixed
bzread ( resource $bz [, int $length = 1024 ] ) : resource
bzwrite ( resource $bz , string $data [, int $length ] ) : resource
cairo_create ( CairoSurface $surface ) : CairoSurface
cairo_font_options_create ( void ) : CairoFontOptions
cairo_font_options_equal ( CairoFontOptions $options , CairoFontOptions $other ) : CairoFontOptions
cairo_font_options_get_antialias ( CairoFontOptions $options ) : CairoFontOptions
cairo_font_options_get_hint_metrics ( CairoFontOptions $options ) : CairoFontOptions
cairo_font_options_get_hint_style ( CairoFontOptions $options ) : CairoFontOptions
cairo_font_options_get_subpixel_order ( CairoFontOptions $options ) : CairoFontOptions
cairo_font_options_hash ( CairoFontOptions $options ) : CairoFontOptions
cairo_font_options_merge ( CairoFontOptions $options , CairoFontOptions $other ) : CairoFontOptions
cairo_font_options_set_antialias ( CairoFontOptions $options , int $antialias ) : CairoFontOptions
cairo_font_options_set_hint_metrics ( CairoFontOptions $options , int $hint_metrics ) : CairoFontOptions
cairo_font_options_set_hint_style ( CairoFontOptions $options , int $hint_style ) : CairoFontOptions
cairo_font_options_set_subpixel_order ( CairoFontOptions $options , int $subpixel_order ) : CairoFontOptions
cairo_font_options_status ( CairoFontOptions $options ) : CairoFontOptions
cairo_format_stride_for_width ( int $format , int $width ) : int
cairo_image_surface_create ( int $format , int $width , int $height ) : int
cairo_image_surface_create_for_data ( string $data , int $format , int $width , int $height [, int $stride = -1 ] ) : string
cairo_image_surface_create_from_png ( mixed $file ) : mixed
cairo_image_surface_get_data ( CairoImageSurface $surface ) : CairoImageSurface
cairo_image_surface_get_format ( CairoImageSurface $surface ) : CairoImageSurface
cairo_image_surface_get_height ( CairoImageSurface $surface ) : CairoImageSurface
cairo_image_surface_get_stride ( CairoImageSurface $surface ) : CairoImageSurface
cairo_image_surface_get_width ( CairoImageSurface $surface ) : CairoImageSurface
cairo_matrix_create_scale ( ) : void
cairo_matrix_create_translate ( ) : void
cairo_matrix_invert ( CairoMatrix $matrix ) : CairoMatrix
cairo_matrix_multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 ) : CairoMatrix
cairo_matrix_transform_distance ( CairoMatrix $matrix , float $dx , float $dy ) : CairoMatrix
cairo_matrix_transform_point ( CairoMatrix $matrix , float $dx , float $dy ) : CairoMatrix
cairo_matrix_translate ( CairoMatrix $matrix , float $tx , float $ty ) : CairoMatrix
cairo_pattern_add_color_stop_rgb ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue ) : CairoGradientPattern
cairo_pattern_add_color_stop_rgba ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue , float $alpha ) : CairoGradientPattern
cairo_pattern_create_for_surface ( CairoSurface $surface ) : CairoSurface
cairo_pattern_create_linear ( float $x0 , float $y0 , float $x1 , float $y1 ) : float
cairo_pattern_create_radial ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 ) : float
cairo_pattern_create_rgb ( float $red , float $green , float $blue ) : float
cairo_pattern_create_rgba ( float $red , float $green , float $blue , float $alpha ) : float
cairo_pattern_get_color_stop_count ( CairoGradientPattern $pattern ) : CairoGradientPattern
cairo_pattern_get_color_stop_rgba ( CairoGradientPattern $pattern , int $index ) : CairoGradientPattern
cairo_pattern_get_extend ( string $pattern ) : string
cairo_pattern_get_filter ( CairoSurfacePattern $pattern ) : CairoSurfacePattern
cairo_pattern_get_linear_points ( CairoLinearGradient $pattern ) : CairoLinearGradient
cairo_pattern_get_matrix ( CairoPattern $pattern ) : CairoPattern
cairo_pattern_get_radial_circles ( CairoRadialGradient $pattern ) : CairoRadialGradient
cairo_pattern_get_rgba ( CairoSolidPattern $pattern ) : CairoSolidPattern
cairo_pattern_get_surface ( CairoSurfacePattern $pattern ) : CairoSurfacePattern
cairo_pattern_get_type ( CairoPattern $pattern ) : CairoPattern
cairo_pattern_set_extend ( string $pattern , string $extend ) : string
cairo_pattern_set_filter ( CairoSurfacePattern $pattern , int $filter ) : CairoSurfacePattern
cairo_pattern_set_matrix ( CairoPattern $pattern , CairoMatrix $matrix ) : CairoPattern
cairo_pattern_status ( CairoPattern $pattern ) : CairoPattern
cairo_pdf_surface_create ( string $file , float $width , float $height ) : string
cairo_pdf_surface_set_size ( CairoPdfSurface $surface , float $width , float $height ) : CairoPdfSurface
cairo_ps_get_levels ( void ) : array
cairo_ps_level_to_string ( int $level ) : int
cairo_ps_surface_create ( string $file , float $width , float $height ) : string
cairo_ps_surface_dsc_begin_page_setup ( CairoPsSurface $surface ) : CairoPsSurface
cairo_ps_surface_dsc_begin_setup ( CairoPsSurface $surface ) : CairoPsSurface
cairo_ps_surface_dsc_comment ( CairoPsSurface $surface , string $comment ) : CairoPsSurface
cairo_ps_surface_get_eps ( CairoPsSurface $surface ) : CairoPsSurface
cairo_ps_surface_restrict_to_level ( CairoPsSurface $surface , int $level ) : CairoPsSurface
cairo_ps_surface_set_eps ( CairoPsSurface $surface , bool $level ) : CairoPsSurface
cairo_ps_surface_set_size ( CairoPsSurface $surface , float $width , float $height ) : CairoPsSurface
cairo_scaled_font_create ( CairoFontFace $fontface , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $fontoptions ) : CairoFontFace
cairo_scaled_font_extents ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_get_ctm ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_get_font_face ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_get_font_matrix ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_get_font_options ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_get_scale_matrix ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_get_type ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_glyph_extents ( CairoScaledFont $scaledfont , array $glyphs ) : CairoScaledFont
cairo_scaled_font_status ( CairoScaledFont $scaledfont ) : CairoScaledFont
cairo_scaled_font_text_extents ( CairoScaledFont $scaledfont , string $text ) : CairoScaledFont
cairo_surface_copy_page ( CairoSurface $surface ) : CairoSurface
cairo_surface_create_similar ( CairoSurface $surface , int $content , float $width , float $height ) : CairoSurface
cairo_surface_finish ( CairoSurface $surface ) : CairoSurface
cairo_surface_flush ( CairoSurface $surface ) : CairoSurface
cairo_surface_get_content ( CairoSurface $surface ) : CairoSurface
cairo_surface_get_device_offset ( CairoSurface $surface ) : CairoSurface
cairo_surface_get_font_options ( CairoSurface $surface ) : CairoSurface
cairo_surface_get_type ( CairoSurface $surface ) : CairoSurface
cairo_surface_mark_dirty ( CairoSurface $surface ) : CairoSurface
cairo_surface_mark_dirty_rectangle ( CairoSurface $surface , float $x , float $y , float $width , float $height ) : CairoSurface
cairo_surface_set_device_offset ( CairoSurface $surface , float $x , float $y ) : CairoSurface
cairo_surface_set_fallback_resolution ( CairoSurface $surface , float $x , float $y ) : CairoSurface
cairo_surface_show_page ( CairoSurface $surface ) : CairoSurface
cairo_surface_status ( CairoSurface $surface ) : CairoSurface
cairo_surface_write_to_png ( CairoSurface $surface , resource $stream ) : CairoSurface
cairo_svg_surface_create ( string $file , float $width , float $height ) : string
cairo_svg_surface_restrict_to_version ( CairoSvgSurface $surface , int $version ) : CairoSvgSurface
cairo_svg_version_to_string ( int $version ) : int
call_user_func ( callable $callback [, mixed $... ] ) : callable
call_user_func_array ( callable $callback , array $param_arr ) : callable
call_user_method ( string $method_name , object &$obj [, mixed $... ] ) : string
call_user_method_array ( string $method_name , object &$obj , array $params ) : string
cal_days_in_month ( int $calendar , int $month , int $year ) : int
cal_from_jd ( int $jd , int $calendar ) : int
cal_info ([ int $calendar = -1 ] ) : int
cal_to_jd ( int $calendar , int $month , int $day , int $year ) : int
ceil ( float $value ) : float
chdb_create ( string $pathname , array $data ) : string
chdir ( string $directory ) : string
checkdate ( int $month , int $day , int $year ) : int
checkdnsrr ( string $host [, string $type = "MX" ] ) : string
chgrp ( string $filename , mixed $group ) : string
chmod ( string $filename , int $mode ) : string
chop ( string $str [, string $character_mask ] ) : string
chown ( string $filename , mixed $user ) : string
chr ( int $bytevalue ) : int
chroot ( string $directory ) : string
chunk_split ( string $body [, int $chunklen = 76 [, string $end = "\r\n" ]] ) : string
classkit_import ( string $filename ) : string
classkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] ) : string
classkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] ) : string
classkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] ) : string
classkit_method_remove ( string $classname , string $methodname ) : string
classkit_method_rename ( string $classname , string $methodname , string $newname ) : string
class_alias ( string $original , string $alias [, bool $autoload = TRUE ] ) : string
class_exists ( string $class_name [, bool $autoload = TRUE ] ) : string
class_implements ( mixed $class [, bool $autoload = TRUE ] ) : mixed
class_parents ( mixed $class [, bool $autoload = TRUE ] ) : mixed
class_uses ( mixed $class [, bool $autoload = TRUE ] ) : mixed
clearstatcache ([ bool $clear_realpath_cache = FALSE [, string $filename ]] ) : bool
cli_get_process_title ( void ) : string
cli_set_process_title ( string $title ) : string
closedir ([ resource $dir_handle ] ) : resource
closelog ( void ) : bool
CommonMark\Parse ( string $content [, int $options ] ) : string
CommonMark\Render ( CommonMark\Node $node [, int $options [, int $width ]] ) : CommonMark\Node
CommonMark\Render\HTML ( CommonMark\Node $node [, int $options ] ) : CommonMark\Node
CommonMark\Render\Latex ( CommonMark\Node $node [, int $options [, int $width ]] ) : CommonMark\Node
CommonMark\Render\Man ( CommonMark\Node $node [, int $options [, int $width ]] ) : CommonMark\Node
CommonMark\Render\XML ( CommonMark\Node $node [, int $options ] ) : CommonMark\Node
compact ( mixed $varname1 [, mixed $... ] ) : mixed
com_create_guid ( void ) : string
com_event_sink ( variant $comobject , object $sinkobject [, mixed $sinkinterface ] ) : variant
com_get_active_object ( string $progid [, int $code_page ] ) : string
com_load_typelib ( string $typelib_name [, bool $case_sensitive = TRUE ] ) : string
com_message_pump ([ int $timeoutms = 0 ] ) : int
com_print_typeinfo ( object $comobject [, string $dispinterface [, bool $wantsink = FALSE ]] ) : object
connection_aborted ( void ) : int
connection_status ( void ) : int
constant ( string $name ) : string
convert_cyr_string ( string $str , string $from , string $to ) : string
convert_uudecode ( string $data ) : string
convert_uuencode ( string $data ) : string
copy ( string $source , string $dest [, resource $context ] ) : string
cos ( float $arg ) : float
cosh ( float $arg ) : float
count ( mixed $array_or_countable [, int $mode = COUNT_NORMAL ] ) : mixed
count_chars ( string $string [, int $mode = 0 ] ) : string
crack_check ( resource $dictionary , string $password ) : resource [:OR:] ( string $password , string $username = "" , string $gecos = "" , resource $dictionary = NULL ) : resource
crack_closedict ([ resource $dictionary ] ) : resource
crack_getlastmessage ( void ) : string
crack_opendict ( string $dictionary ) : string
crc32 ( string $str ) : string
create_function ( string $args , string $code ) : string
crypt ( string $str [, string $salt ] ) : string
ctype_alnum ( string $text ) : string
ctype_alpha ( string $text ) : string
ctype_cntrl ( string $text ) : string
ctype_digit ( string $text ) : string
ctype_graph ( string $text ) : string
ctype_lower ( string $text ) : string
ctype_print ( string $text ) : string
ctype_punct ( string $text ) : string
ctype_space ( string $text ) : string
ctype_upper ( string $text ) : string
ctype_xdigit ( string $text ) : string
cubrid_affected_rows ([ resource $conn_identifier ] ) : resource [:OR:] ([ resource $req_identifier ] ) : resource
cubrid_bind ( resource $req_identifier , int $bind_index , mixed $bind_value [, string $bind_value_type ] ) : resource
cubrid_client_encoding ([ resource $conn_identifier ] ) : resource
cubrid_close ([ resource $conn_identifier ] ) : resource
cubrid_close_prepare ( resource $req_identifier ) : resource
cubrid_close_request ( resource $req_identifier ) : resource
cubrid_column_names ( resource $req_identifier ) : resource
cubrid_column_types ( resource $req_identifier ) : resource
cubrid_col_get ( resource $conn_identifier , string $oid , string $attr_name ) : resource
cubrid_col_size ( resource $conn_identifier , string $oid , string $attr_name ) : resource
cubrid_commit ( resource $conn_identifier ) : resource
cubrid_connect ( string $host , int $port , string $dbname [, string $userid [, string $passwd [, bool $new_link = FALSE ]]] ) : string
cubrid_connect_with_url ( string $conn_url [, string $userid [, string $passwd [, bool $new_link = FALSE ]]] ) : string
cubrid_current_oid ( resource $req_identifier ) : resource
cubrid_data_seek ( resource $result , int $row_number ) : resource
cubrid_db_name ( array $result , int $index ) : array
cubrid_disconnect ([ resource $conn_identifier ] ) : resource
cubrid_drop ( resource $conn_identifier , string $oid ) : resource
cubrid_errno ([ resource $conn_identifier ] ) : resource
cubrid_error ([ resource $connection ] ) : resource
cubrid_error_code ( void ) : int
cubrid_error_code_facility ( void ) : int
cubrid_error_msg ( void ) : string
cubrid_execute ( resource $conn_identifier , string $sql [, int $option = 0 ] ) : resource [:OR:] ( resource $request_identifier [, int $option = 0 ] ) : resource
cubrid_fetch ( resource $result [, int $type = CUBRID_BOTH ] ) : resource
cubrid_fetch_array ( resource $result [, int $type = CUBRID_BOTH ] ) : resource
cubrid_fetch_assoc ( resource $result [, int $type ] ) : resource
cubrid_fetch_field ( resource $result [, int $field_offset = 0 ] ) : resource
cubrid_fetch_lengths ( resource $result ) : resource
cubrid_fetch_object ( resource $result [, string $class_name [, array $params [, int $type ]]] ) : resource
cubrid_fetch_row ( resource $result [, int $type ] ) : resource
cubrid_field_flags ( resource $result , int $field_offset ) : resource
cubrid_field_len ( resource $result , int $field_offset ) : resource
cubrid_field_name ( resource $result , int $field_offset ) : resource
cubrid_field_seek ( resource $result [, int $field_offset = 0 ] ) : resource
cubrid_field_table ( resource $result , int $field_offset ) : resource
cubrid_field_type ( resource $result , int $field_offset ) : resource
cubrid_free_result ( resource $req_identifier ) : resource
cubrid_get ( resource $conn_identifier , string $oid [, mixed $attr ] ) : resource
cubrid_get_autocommit ( resource $conn_identifier ) : resource
cubrid_get_charset ( resource $conn_identifier ) : resource
cubrid_get_class_name ( resource $conn_identifier , string $oid ) : resource
cubrid_get_client_info ( void ) : string
cubrid_get_db_parameter ( resource $conn_identifier ) : resource
cubrid_get_query_timeout ( resource $req_identifier ) : resource
cubrid_get_server_info ( resource $conn_identifier ) : resource
cubrid_insert_id ([ resource $conn_identifier ] ) : resource
cubrid_is_instance ( resource $conn_identifier , string $oid ) : resource
cubrid_list_dbs ([ resource $conn_identifier ] ) : resource
cubrid_load_from_glo ( resource $conn_identifier , string $oid , string $file_name ) : resource
cubrid_lob2_bind ( resource $req_identifier , int $bind_index , mixed $bind_value [, string $bind_value_type ] ) : resource
cubrid_lob2_close ( resource $lob_identifier ) : resource
cubrid_lob2_export ( resource $lob_identifier , string $file_name ) : resource
cubrid_lob2_import ( resource $lob_identifier , string $file_name ) : resource
cubrid_lob2_new ([ resource $conn_identifier [, string $type = "BLOB" ]] ) : resource
cubrid_lob2_read ( resource $lob_identifier , int $len ) : resource
cubrid_lob2_seek ( resource $lob_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ] ) : resource
cubrid_lob2_seek64 ( resource $lob_identifier , string $offset [, int $origin = CUBRID_CURSOR_CURRENT ] ) : resource
cubrid_lob2_size ( resource $lob_identifier ) : resource
cubrid_lob2_size64 ( resource $lob_identifier ) : resource
cubrid_lob2_tell ( resource $lob_identifier ) : resource
cubrid_lob2_tell64 ( resource $lob_identifier ) : resource
cubrid_lob2_write ( resource $lob_identifier , string $buf ) : resource
cubrid_lob_close ( array $lob_identifier_array ) : array
cubrid_lob_export ( resource $conn_identifier , resource $lob_identifier , string $path_name ) : resource
cubrid_lob_get ( resource $conn_identifier , string $sql ) : resource
cubrid_lob_send ( resource $conn_identifier , resource $lob_identifier ) : resource
cubrid_lob_size ( resource $lob_identifier ) : resource
cubrid_lock_read ( resource $conn_identifier , string $oid ) : resource
cubrid_lock_write ( resource $conn_identifier , string $oid ) : resource
cubrid_move_cursor ( resource $req_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ] ) : resource
cubrid_new_glo ( resource $conn_identifier , string $class_name , string $file_name ) : resource
cubrid_next_result ( resource $result ) : resource
cubrid_num_cols ( resource $result ) : resource
cubrid_num_fields ( resource $result ) : resource
cubrid_num_rows ( resource $result ) : resource
cubrid_pconnect ( string $host , int $port , string $dbname [, string $userid [, string $passwd ]] ) : string
cubrid_pconnect_with_url ( string $conn_url [, string $userid [, string $passwd ]] ) : string
cubrid_ping ([ resource $conn_identifier ] ) : resource
cubrid_prepare ( resource $conn_identifier , string $prepare_stmt [, int $option = 0 ] ) : resource
cubrid_put ( resource $conn_identifier , string $oid [, string $attr ], mixed $value ) : resource
cubrid_query ( string $query [, resource $conn_identifier ] ) : string
cubrid_real_escape_string ( string $unescaped_string [, resource $conn_identifier ] ) : string
cubrid_result ( resource $result , int $row [, mixed $field = 0 ] ) : resource
cubrid_rollback ( resource $conn_identifier ) : resource
cubrid_save_to_glo ( resource $conn_identifier , string $oid , string $file_name ) : resource
cubrid_schema ( resource $conn_identifier , int $schema_type [, string $class_name [, string $attr_name ]] ) : resource
cubrid_send_glo ( resource $conn_identifier , string $oid ) : resource
cubrid_seq_drop ( resource $conn_identifier , string $oid , string $attr_name , int $index ) : resource
cubrid_seq_insert ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element ) : resource
cubrid_seq_put ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element ) : resource
cubrid_set_add ( resource $conn_identifier , string $oid , string $attr_name , string $set_element ) : resource
cubrid_set_autocommit ( resource $conn_identifier , bool $mode ) : resource
cubrid_set_db_parameter ( resource $conn_identifier , int $param_type , int $param_value ) : resource
cubrid_set_drop ( resource $conn_identifier , string $oid , string $attr_name , string $set_element ) : resource
cubrid_set_query_timeout ( resource $req_identifier , int $timeout ) : resource
cubrid_unbuffered_query ( string $query [, resource $conn_identifier ] ) : string
cubrid_version ( void ) : string
curl_close ( resource $ch ) : resource
curl_copy_handle ( resource $ch ) : resource
curl_errno ( resource $ch ) : resource
curl_error ( resource $ch ) : resource
curl_escape ( resource $ch , string $str ) : resource
curl_exec ( resource $ch ) : resource
curl_getinfo ( resource $ch [, int $opt ] ) : resource
curl_init ([ string $url = NULL ] ) : string
curl_multi_add_handle ( resource $mh , resource $ch ) : resource
curl_multi_close ( resource $mh ) : resource
curl_multi_errno ( resource $mh ) : resource
curl_multi_exec ( resource $mh , int &$still_running ) : resource
curl_multi_getcontent ( resource $ch ) : resource
curl_multi_info_read ( resource $mh [, int &$msgs_in_queue = NULL ] ) : resource
curl_multi_init ( void ) : resource
curl_multi_remove_handle ( resource $mh , resource $ch ) : resource
curl_multi_select ( resource $mh [, float $timeout = 1.0 ] ) : resource
curl_multi_setopt ( resource $mh , int $option , mixed $value ) : resource
curl_multi_strerror ( int $errornum ) : int
curl_pause ( resource $ch , int $bitmask ) : resource
curl_reset ( resource $ch ) : resource
curl_setopt ( resource $ch , int $option , mixed $value ) : resource
curl_setopt_array ( resource $ch , array $options ) : resource
curl_share_close ( resource $sh ) : resource
curl_share_errno ( resource $sh ) : resource
curl_share_init ( void ) : resource
curl_share_setopt ( resource $sh , int $option , string $value ) : resource
curl_share_strerror ( int $errornum ) : int
curl_strerror ( int $errornum ) : int
curl_unescape ( resource $ch , string $str ) : resource
curl_version ([ int $age = CURLVERSION_NOW ] ) : int
current ( array $array ) : array
cyrus_authenticate ( resource $connection [, string $mechlist [, string $service [, string $user [, int $minssf [, int $maxssf [, string $authname [, string $password ]]]]]]] ) : resource
cyrus_bind ( resource $connection , array $callbacks ) : resource
cyrus_close ( resource $connection ) : resource
cyrus_connect ([ string $host [, string $port [, int $flags ]]] ) : string
cyrus_query ( resource $connection , string $query ) : resource
cyrus_unbind ( resource $connection , string $trigger_name ) : resource
date ( string $format [, int $timestamp = time() ] ) : string
date_add ( ) : DateTime
date_create ([ string $time = "now" [, DateTimeZone $timezone = NULL ]] ) : DateTime
date_create_from_format ( ) : DateTime
date_create_immutable ([ string $time = "now" [, DateTimeZone $timezone = NULL ]] ) : DateTimeImmutable
date_create_immutable_from_format ( ) : DateTimeImmutable
date_date_set ( ) : DateTime
date_default_timezone_get ( void ) : string
date_default_timezone_set ( string $timezone_identifier ) : string
date_diff ( ) : DateInterval
date_format ( ) : string
date_get_last_errors ( ) : array
date_interval_create_from_date_string ( ) : DateInterval
date_interval_format ( ) : string
date_isodate_set ( ) : DateTime
date_modify ( ) : DateTime
date_offset_get ( ) : int
date_parse ( string $date ) : string
date_parse_from_format ( string $format , string $date ) : string
date_sub ( ) : DateTime
date_sunrise ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get("date.sunrise_zenith") [, float $gmt_offset = 0 ]]]]] ) : int
date_sunset ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get("date.sunset_zenith") [, float $gmt_offset = 0 ]]]]] ) : int
date_sun_info ( int $time , float $latitude , float $longitude ) : int
date_timestamp_get ( ) : int
date_timestamp_set ( ) : DateTime
date_timezone_get ( ) : DateTimeZone
date_timezone_set ( ) : DateTime
date_time_set ( ) : DateTime
db2_autocommit ( resource $connection [, bool $value ] ) : resource
db2_bind_param ( resource $stmt , int $parameter_number , string $variable_name [, int $parameter_type [, int $data_type = 0 [, int $precision = -1 [, int $scale = 0 ]]]] ) : resource
db2_client_info ( resource $connection ) : resource
db2_close ( resource $connection ) : resource
db2_columns ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] ) : resource
db2_column_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] ) : resource
db2_commit ( resource $connection ) : resource
db2_connect ( string $database , string $username , string $password [, array $options ] ) : string
db2_conn_error ([ resource $connection ] ) : resource
db2_conn_errormsg ([ resource $connection ] ) : resource
db2_cursor_type ( resource $stmt ) : resource
db2_escape_string ( string $string_literal ) : string
db2_exec ( resource $connection , string $statement [, array $options ] ) : resource
db2_execute ( resource $stmt [, array $parameters ] ) : resource
db2_fetch_array ( resource $stmt [, int $row_number = -1 ] ) : resource
db2_fetch_assoc ( resource $stmt [, int $row_number = -1 ] ) : resource
db2_fetch_both ( resource $stmt [, int $row_number = -1 ] ) : resource
db2_fetch_object ( resource $stmt [, int $row_number = -1 ] ) : resource
db2_fetch_row ( resource $stmt [, int $row_number ] ) : resource
db2_field_display_size ( resource $stmt , mixed $column ) : resource
db2_field_name ( resource $stmt , mixed $column ) : resource
db2_field_num ( resource $stmt , mixed $column ) : resource
db2_field_precision ( resource $stmt , mixed $column ) : resource
db2_field_scale ( resource $stmt , mixed $column ) : resource
db2_field_type ( resource $stmt , mixed $column ) : resource
db2_field_width ( resource $stmt , mixed $column ) : resource
db2_foreign_keys ( resource $connection , string $qualifier , string $schema , string $table-name ) : resource
db2_free_result ( resource $stmt ) : resource
db2_free_stmt ( resource $stmt ) : resource
db2_get_option ( resource $resource , string $option ) : resource
db2_last_insert_id ( resource $resource ) : resource
db2_lob_read ( resource $stmt , int $colnum , int $length ) : resource
db2_next_result ( resource $stmt ) : resource
db2_num_fields ( resource $stmt ) : resource
db2_num_rows ( resource $stmt ) : resource
db2_pclose ( resource $resource ) : resource
db2_pconnect ( string $database , string $username , string $password [, array $options ] ) : string
db2_prepare ( resource $connection , string $statement [, array $options ] ) : resource
db2_primary_keys ( resource $connection , string $qualifier , string $schema , string $table-name ) : resource
db2_procedures ( resource $connection , string $qualifier , string $schema , string $procedure ) : resource
db2_procedure_columns ( resource $connection , string $qualifier , string $schema , string $procedure , string $parameter ) : resource
db2_result ( resource $stmt , mixed $column ) : resource
db2_rollback ( resource $connection ) : resource
db2_server_info ( resource $connection ) : resource
db2_set_option ( resource $resource , array $options , int $type ) : resource
db2_special_columns ( resource $connection , string $qualifier , string $schema , string $table_name , int $scope ) : resource
db2_statistics ( resource $connection , string $qualifier , string $schema , string $table-name , bool $unique ) : resource
db2_stmt_error ([ resource $stmt ] ) : resource
db2_stmt_errormsg ([ resource $stmt ] ) : resource
db2_tables ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $table-type ]]]] ) : resource
db2_table_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table_name ]]] ) : resource
dbase_add_record ( resource $dbase_identifier , array $record ) : resource
dbase_close ( resource $dbase_identifier ) : resource
dbase_create ( string $filename , array $fields [, int $type = DBASE_TYPE_DBASE ] ) : string
dbase_delete_record ( resource $dbase_identifier , int $record_number ) : resource
dbase_get_header_info ( resource $dbase_identifier ) : resource
dbase_get_record ( resource $dbase_identifier , int $record_number ) : resource
dbase_get_record_with_names ( resource $dbase_identifier , int $record_number ) : resource
dbase_numfields ( resource $dbase_identifier ) : resource
dbase_numrecords ( resource $dbase_identifier ) : resource
dbase_open ( string $filename , int $mode ) : string
dbase_pack ( resource $dbase_identifier ) : resource
dbase_replace_record ( resource $dbase_identifier , array $record , int $record_number ) : resource
dba_close ( resource $handle ) : resource
dba_delete ( string $key , resource $handle ) : string
dba_exists ( string $key , resource $handle ) : string
dba_fetch ( string $key , resource $handle ) : string [:OR:] ( string $key , int $skip , resource $handle ) : string
dba_firstkey ( resource $handle ) : resource
dba_handlers ([ bool $full_info = FALSE ] ) : bool
dba_insert ( string $key , string $value , resource $handle ) : string
dba_key_split ( mixed $key ) : mixed
dba_list ( void ) : array
dba_nextkey ( resource $handle ) : resource
dba_open ( string $path , string $mode [, string $handler [, mixed $... ]] ) : string
dba_optimize ( resource $handle ) : resource
dba_popen ( string $path , string $mode [, string $handler [, mixed $... ]] ) : string
dba_replace ( string $key , string $value , resource $handle ) : string
dba_sync ( resource $handle ) : resource
dbplus_add ( resource $relation , array $tuple ) : resource
dbplus_aql ( string $query [, string $server [, string $dbpath ]] ) : string
dbplus_chdir ([ string $newdir ] ) : string
dbplus_close ( resource $relation ) : resource
dbplus_curr ( resource $relation , array &$tuple ) : resource
dbplus_errcode ([ int $errno ] ) : int
dbplus_errno ( void ) : int
dbplus_find ( resource $relation , array $constraints , mixed $tuple ) : resource
dbplus_first ( resource $relation , array &$tuple ) : resource
dbplus_flush ( resource $relation ) : resource
dbplus_freealllocks ( void ) : int
dbplus_freelock ( resource $relation , string $tuple ) : resource
dbplus_freerlocks ( resource $relation ) : resource
dbplus_getlock ( resource $relation , string $tuple ) : resource
dbplus_getunique ( resource $relation , int $uniqueid ) : resource
dbplus_info ( resource $relation , string $key , array &$result ) : resource
dbplus_last ( resource $relation , array &$tuple ) : resource
dbplus_lockrel ( resource $relation ) : resource
dbplus_next ( resource $relation , array &$tuple ) : resource
dbplus_open ( string $name ) : string
dbplus_prev ( resource $relation , array &$tuple ) : resource
dbplus_rchperm ( resource $relation , int $mask , string $user , string $group ) : resource
dbplus_rcreate ( string $name , mixed $domlist [, bool $overwrite ] ) : string
dbplus_rcrtexact ( string $name , resource $relation [, bool $overwrite ] ) : string
dbplus_rcrtlike ( string $name , resource $relation [, int $overwrite ] ) : string
dbplus_resolve ( string $relation_name ) : string
dbplus_restorepos ( resource $relation , array $tuple ) : resource
dbplus_rkeys ( resource $relation , mixed $domlist ) : resource
dbplus_ropen ( string $name ) : string
dbplus_rquery ( string $query [, string $dbpath ] ) : string
dbplus_rrename ( resource $relation , string $name ) : resource
dbplus_rsecindex ( resource $relation , mixed $domlist , int $type ) : resource
dbplus_runlink ( resource $relation ) : resource
dbplus_rzap ( resource $relation ) : resource
dbplus_savepos ( resource $relation ) : resource
dbplus_setindex ( resource $relation , string $idx_name ) : resource
dbplus_setindexbynumber ( resource $relation , int $idx_number ) : resource
dbplus_sql ( string $query [, string $server [, string $dbpath ]] ) : string
dbplus_tcl ( int $sid , string $script ) : int
dbplus_tremove ( resource $relation , array $tuple [, array &$current ] ) : resource
dbplus_undo ( resource $relation ) : resource
dbplus_undoprepare ( resource $relation ) : resource
dbplus_unlockrel ( resource $relation ) : resource
dbplus_unselect ( resource $relation ) : resource
dbplus_update ( resource $relation , array $old , array $new ) : resource
dbplus_xlockrel ( resource $relation ) : resource
dbplus_xunlockrel ( resource $relation ) : resource
dbx_close ( object $link_identifier ) : object
dbx_compare ( array $row_a , array $row_b , string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE ] ) : array
dbx_connect ( mixed $module , string $host , string $database , string $username , string $password [, int $persistent ] ) : mixed
dbx_error ( object $link_identifier ) : object
dbx_escape_string ( object $link_identifier , string $text ) : object
dbx_fetch_row ( object $result_identifier ) : object
dbx_query ( object $link_identifier , string $sql_statement [, int $flags ] ) : object
dbx_sort ( object $result , string $user_compare_function ) : object
dcgettext ( string $domain , string $message , int $category ) : string
dcngettext ( string $domain , string $msgid1 , string $msgid2 , int $n , int $category ) : string
debug_backtrace ([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = 0 ]] ) : int
debug_print_backtrace ([ int $options = 0 [, int $limit = 0 ]] ) : int
debug_zval_dump ( mixed $variable [, mixed $... ] ) : mixed
decbin ( int $number ) : int
dechex ( int $number ) : int
decoct ( int $number ) : int
define ( string $name , mixed $value [, bool $case_insensitive = FALSE ] ) : string
defined ( string $name ) : string
define_syslog_variables ( void ) : void
deflate_add ( resource $context , string $data [, int $flush_mode = ZLIB_SYNC_FLUSH ] ) : resource
deflate_init ( int $encoding [, array $options = array() ] ) : int
deg2rad ( float $number ) : float
dgettext ( string $domain , string $message ) : string
die ([ string $status ] ) : string [:OR:] ( int $status ) : string
dio_close ( resource $fd ) : resource
dio_fcntl ( resource $fd , int $cmd [, mixed $args ] ) : resource
dio_open ( string $filename , int $flags [, int $mode = 0 ] ) : string
dio_read ( resource $fd [, int $len = 1024 ] ) : resource
dio_seek ( resource $fd , int $pos [, int $whence = SEEK_SET ] ) : resource
dio_stat ( resource $fd ) : resource
dio_tcsetattr ( resource $fd , array $options ) : resource
dio_truncate ( resource $fd , int $offset ) : resource
dio_write ( resource $fd , string $data [, int $len = 0 ] ) : resource
dir ( string $directory [, resource $context ] ) : string
dirname ( string $path [, int $levels = 1 ] ) : string
diskfreespace ( string $directory ) : string
disk_free_space ( string $directory ) : string
disk_total_space ( string $directory ) : string
dl ( string $library ) : string
dngettext ( string $domain , string $msgid1 , string $msgid2 , int $n ) : string
dns_check_record ( string $host [, string $type = "MX" ] ) : string
dns_get_mx ( string $hostname , array &$mxhosts [, array &$weight ] ) : string
dns_get_record ( string $hostname [, int $type = DNS_ANY [, array &$authns [, array &$addtl [, bool $raw = FALSE ]]]] ) : string
dom_import_simplexml ( SimpleXMLElement $node ) : SimpleXMLElement
doubleval ( mixed $var ) : mixed
each ( array &$array ) : array
easter_date ([ int $year = date("Y") ] ) : int
easter_days ([ int $year = date("Y") [, int $method = CAL_EASTER_DEFAULT ]] ) : int
eio_busy ( int $delay [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : int
eio_cancel ( resource $req ) : resource
eio_chmod ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_chown ( string $path , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] ) : string
eio_close ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_custom ( callable $execute , int $pri , callable $callback [, mixed $data = NULL ] ) : callable
eio_dup2 ( mixed $fd , mixed $fd2 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_event_loop ( void ) : bool
eio_fallocate ( mixed $fd , int $mode , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_fchmod ( mixed $fd , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_fchown ( mixed $fd , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] ) : mixed
eio_fdatasync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_fstat ( mixed $fd , int $pri , callable $callback [, mixed $data ] ) : mixed
eio_fstatvfs ( mixed $fd , int $pri , callable $callback [, mixed $data ] ) : mixed
eio_fsync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_ftruncate ( mixed $fd [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] ) : mixed
eio_futime ( mixed $fd , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_get_event_stream ( void ) : mixed
eio_get_last_error ( resource $req ) : resource
eio_grp ( callable $callback [, string $data = NULL ] ) : callable
eio_grp_add ( resource $grp , resource $req ) : resource
eio_grp_cancel ( resource $grp ) : resource
eio_grp_limit ( resource $grp , int $limit ) : resource
eio_init ( void ) : void
eio_link ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_lstat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] ) : string
eio_mkdir ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_mknod ( string $path , int $mode , int $dev [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_nop ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : int
eio_npending ( void ) : int
eio_nready ( void ) : int
eio_nreqs ( void ) : int
eio_nthreads ( void ) : int
eio_open ( string $path , int $flags , int $mode , int $pri , callable $callback [, mixed $data = NULL ] ) : string
eio_poll ( void ) : int
eio_read ( mixed $fd , int $length , int $offset , int $pri , callable $callback [, mixed $data = NULL ] ) : mixed
eio_readahead ( mixed $fd , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_readdir ( string $path , int $flags , int $pri , callable $callback [, string $data = NULL ] ) : string
eio_readlink ( string $path , int $pri , callable $callback [, string $data = NULL ] ) : string
eio_realpath ( string $path , int $pri , callable $callback [, string $data = NULL ] ) : string
eio_rename ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_rmdir ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_seek ( mixed $fd , int $offset , int $whence [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_sendfile ( mixed $out_fd , mixed $in_fd , int $offset , int $length [, int $pri [, callable $callback [, string $data ]]] ) : mixed
eio_set_max_idle ( int $nthreads ) : int
eio_set_max_parallel ( int $nthreads ) : int
eio_set_max_poll_reqs ( int $nreqs ) : int
eio_set_max_poll_time ( float $nseconds ) : float
eio_set_min_parallel ( string $nthreads ) : string
eio_stat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] ) : string
eio_statvfs ( string $path , int $pri , callable $callback [, mixed $data ] ) : string
eio_symlink ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_sync ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : int
eio_syncfs ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_sync_file_range ( mixed $fd , int $offset , int $nbytes , int $flags [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : mixed
eio_truncate ( string $path [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] ) : string
eio_unlink ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_utime ( string $path , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] ) : string
eio_write ( mixed $fd , string $str [, int $length = 0 [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]]] ) : mixed
empty ( mixed $var ) : mixed
enchant_broker_describe ( resource $broker ) : resource
enchant_broker_dict_exists ( resource $broker , string $tag ) : resource
enchant_broker_free ( resource $broker ) : resource
enchant_broker_free_dict ( resource $dict ) : resource
enchant_broker_get_dict_path ( resource $broker , int $dict_type ) : resource
enchant_broker_get_error ( resource $broker ) : resource
enchant_broker_init ( void ) : resource
enchant_broker_list_dicts ( resource $broker ) : resource
enchant_broker_request_dict ( resource $broker , string $tag ) : resource
enchant_broker_request_pwl_dict ( resource $broker , string $filename ) : resource
enchant_broker_set_dict_path ( resource $broker , int $dict_type , string $value ) : resource
enchant_broker_set_ordering ( resource $broker , string $tag , string $ordering ) : resource
enchant_dict_add_to_personal ( resource $dict , string $word ) : resource
enchant_dict_add_to_session ( resource $dict , string $word ) : resource
enchant_dict_check ( resource $dict , string $word ) : resource
enchant_dict_describe ( resource $dict ) : resource
enchant_dict_get_error ( resource $dict ) : resource
enchant_dict_is_in_session ( resource $dict , string $word ) : resource
enchant_dict_quick_check ( resource $dict , string $word [, array &$suggestions ] ) : resource
enchant_dict_store_replacement ( resource $dict , string $mis , string $cor ) : resource
enchant_dict_suggest ( resource $dict , string $word ) : resource
end ( array &$array ) : array
ereg ( string $pattern , string $string [, array &$regs ] ) : string
eregi ( string $pattern , string $string [, array &$regs ] ) : string
eregi_replace ( string $pattern , string $replacement , string $string ) : string
ereg_replace ( string $pattern , string $replacement , string $string ) : string
error_clear_last ( void ) : void
error_get_last ( void ) : array
error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] ) : string
error_reporting ([ int $level ] ) : int
escapeshellarg ( string $arg ) : string
escapeshellcmd ( string $command ) : string
eval ( string $code ) : string
event_add ( resource $event [, int $timeout = -1 ] ) : resource
event_base_free ( resource $event_base ) : resource
event_base_loop ( resource $event_base [, int $flags = 0 ] ) : resource
event_base_loopbreak ( resource $event_base ) : resource
event_base_loopexit ( resource $event_base [, int $timeout = -1 ] ) : resource
event_base_new ( void ) : resource
event_base_priority_init ( resource $event_base , int $npriorities ) : resource
event_base_reinit ( resource $event_base ) : resource
event_base_set ( resource $event , resource $event_base ) : resource
event_buffer_base_set ( resource $bevent , resource $event_base ) : resource
event_buffer_disable ( resource $bevent , int $events ) : resource
event_buffer_enable ( resource $bevent , int $events ) : resource
event_buffer_fd_set ( resource $bevent , resource $fd ) : resource
event_buffer_free ( resource $bevent ) : resource
event_buffer_new ( resource $stream , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] ) : resource
event_buffer_priority_set ( resource $bevent , int $priority ) : resource
event_buffer_read ( resource $bevent , int $data_size ) : resource
event_buffer_set_callback ( resource $event , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] ) : resource
event_buffer_timeout_set ( resource $bevent , int $read_timeout , int $write_timeout ) : resource
event_buffer_watermark_set ( resource $bevent , int $events , int $lowmark , int $highmark ) : resource
event_buffer_write ( resource $bevent , string $data [, int $data_size = -1 ] ) : resource
event_del ( resource $event ) : resource
event_free ( resource $event ) : resource
event_new ( void ) : resource
event_priority_set ( resource $event , int $priority ) : resource
event_set ( resource $event , mixed $fd , int $events , mixed $callback [, mixed $arg ] ) : resource
event_timer_add ( resource $event [, int $timeout = -1 ] ) : resource
event_timer_del ( resource $event ) : resource
event_timer_new ( void ) : resource
event_timer_set ( resource $event , callable $callback [, mixed $arg ] ) : resource
exec ( string $command [, array &$output [, int &$return_var ]] ) : string
exif_imagetype ( string $filename ) : string
exif_read_data ( mixed $stream [, string $sections = NULL [, bool $arrays = FALSE [, bool $thumbnail = FALSE ]]] ) : mixed
exif_tagname ( int $index ) : int
exif_thumbnail ( mixed $stream [, int &$width [, int &$height [, int &$imagetype ]]] ) : mixed
exit ([ string $status ] ) : string [:OR:] ( int $status ) : string
exp ( float $arg ) : float
expect_expectl ( resource $expect , array $cases [, array &$match ] ) : resource
expect_popen ( string $command ) : string
explode ( string $delimiter , string $string [, int $limit = PHP_INT_MAX ] ) : string
expm1 ( float $arg ) : float
extension_loaded ( string $name ) : string
extract ( array &$array [, int $flags = EXTR_OVERWRITE [, string $prefix = NULL ]] ) : array
ezmlm_hash ( string $addr ) : string
fam_cancel_monitor ( resource $fam , resource $fam_monitor ) : resource
fam_close ( resource $fam ) : resource
fam_monitor_collection ( resource $fam , string $dirname , int $depth , string $mask ) : resource
fam_monitor_directory ( resource $fam , string $dirname ) : resource
fam_monitor_file ( resource $fam , string $filename ) : resource
fam_next_event ( resource $fam ) : resource
fam_open ([ string $appname ] ) : string
fam_pending ( resource $fam ) : resource
fam_resume_monitor ( resource $fam , resource $fam_monitor ) : resource
fam_suspend_monitor ( resource $fam , resource $fam_monitor ) : resource
fann_cascadetrain_on_data ( resource $ann , resource $data , int $max_neurons , int $neurons_between_reports , float $desired_error ) : resource
fann_cascadetrain_on_file ( resource $ann , string $filename , int $max_neurons , int $neurons_between_reports , float $desired_error ) : resource
fann_clear_scaling_params ( resource $ann ) : resource
fann_copy ( resource $ann ) : resource
fann_create_from_file ( string $configuration_file ) : string
fann_create_shortcut ( int $num_layers , int $num_neurons1 , int $num_neurons2 [, int $... ] ) : int
fann_create_shortcut_array ( int $num_layers , array $layers ) : int
fann_create_sparse ( float $connection_rate , int $num_layers , int $num_neurons1 , int $num_neurons2 [, int $... ] ) : float
fann_create_sparse_array ( float $connection_rate , int $num_layers , array $layers ) : float
fann_create_standard ( int $num_layers , int $num_neurons1 , int $num_neurons2 [, int $... ] ) : int
fann_create_standard_array ( int $num_layers , array $layers ) : int
fann_create_train ( int $num_data , int $num_input , int $num_output ) : int
fann_create_train_from_callback ( int $num_data , int $num_input , int $num_output , callable $user_function ) : int
fann_descale_input ( resource $ann , array $input_vector ) : resource
fann_descale_output ( resource $ann , array $output_vector ) : resource
fann_descale_train ( resource $ann , resource $train_data ) : resource
fann_destroy ( resource $ann ) : resource
fann_destroy_train ( resource $train_data ) : resource
fann_duplicate_train_data ( resource $data ) : resource
fann_get_activation_function ( resource $ann , int $layer , int $neuron ) : resource
fann_get_activation_steepness ( resource $ann , int $layer , int $neuron ) : resource
fann_get_bias_array ( resource $ann ) : resource
fann_get_bit_fail ( resource $ann ) : resource
fann_get_bit_fail_limit ( resource $ann ) : resource
fann_get_cascade_activation_functions ( resource $ann ) : resource
fann_get_cascade_activation_functions_count ( resource $ann ) : resource
fann_get_cascade_activation_steepnesses ( resource $ann ) : resource
fann_get_cascade_activation_steepnesses_count ( resource $ann ) : resource
fann_get_cascade_candidate_change_fraction ( resource $ann ) : resource
fann_get_cascade_candidate_limit ( resource $ann ) : resource
fann_get_cascade_candidate_stagnation_epochs ( resource $ann ) : resource
fann_get_cascade_max_cand_epochs ( resource $ann ) : resource
fann_get_cascade_max_out_epochs ( resource $ann ) : resource
fann_get_cascade_min_cand_epochs ( resource $ann ) : resource
fann_get_cascade_min_out_epochs ( resource $ann ) : resource
fann_get_cascade_num_candidates ( resource $ann ) : resource
fann_get_cascade_num_candidate_groups ( resource $ann ) : resource
fann_get_cascade_output_change_fraction ( resource $ann ) : resource
fann_get_cascade_output_stagnation_epochs ( resource $ann ) : resource
fann_get_cascade_weight_multiplier ( resource $ann ) : resource
fann_get_connection_array ( resource $ann ) : resource
fann_get_connection_rate ( resource $ann ) : resource
fann_get_errno ( resource $errdat ) : resource
fann_get_errstr ( resource $errdat ) : resource
fann_get_layer_array ( resource $ann ) : resource
fann_get_learning_momentum ( resource $ann ) : resource
fann_get_learning_rate ( resource $ann ) : resource
fann_get_MSE ( resource $ann ) : resource
fann_get_network_type ( resource $ann ) : resource
fann_get_num_input ( resource $ann ) : resource
fann_get_num_layers ( resource $ann ) : resource
fann_get_num_output ( resource $ann ) : resource
fann_get_quickprop_decay ( resource $ann ) : resource
fann_get_quickprop_mu ( resource $ann ) : resource
fann_get_rprop_decrease_factor ( resource $ann ) : resource
fann_get_rprop_delta_max ( resource $ann ) : resource
fann_get_rprop_delta_min ( resource $ann ) : resource
fann_get_rprop_delta_zero ( resource $ann ) : resource
fann_get_rprop_increase_factor ( resource $ann ) : resource
fann_get_sarprop_step_error_shift ( resource $ann ) : resource
fann_get_sarprop_step_error_threshold_factor ( resource $ann ) : resource
fann_get_sarprop_temperature ( resource $ann ) : resource
fann_get_sarprop_weight_decay_shift ( resource $ann ) : resource
fann_get_total_connections ( resource $ann ) : resource
fann_get_total_neurons ( resource $ann ) : resource
fann_get_training_algorithm ( resource $ann ) : resource
fann_get_train_error_function ( resource $ann ) : resource
fann_get_train_stop_function ( resource $ann ) : resource
fann_init_weights ( resource $ann , resource $train_data ) : resource
fann_length_train_data ( resource $data ) : resource
fann_merge_train_data ( resource $data1 , resource $data2 ) : resource
fann_num_input_train_data ( resource $data ) : resource
fann_num_output_train_data ( resource $data ) : resource
fann_print_error ( resource $errdat ) : resource
fann_randomize_weights ( resource $ann , float $min_weight , float $max_weight ) : resource
fann_read_train_from_file ( string $filename ) : string
fann_reset_errno ( resource $errdat ) : resource
fann_reset_errstr ( resource $errdat ) : resource
fann_reset_MSE ( string $ann ) : string
fann_run ( resource $ann , array $input ) : resource
fann_save ( resource $ann , string $configuration_file ) : resource
fann_save_train ( resource $data , string $file_name ) : resource
fann_scale_input ( resource $ann , array $input_vector ) : resource
fann_scale_input_train_data ( resource $train_data , float $new_min , float $new_max ) : resource
fann_scale_output ( resource $ann , array $output_vector ) : resource
fann_scale_output_train_data ( resource $train_data , float $new_min , float $new_max ) : resource
fann_scale_train ( resource $ann , resource $train_data ) : resource
fann_scale_train_data ( resource $train_data , float $new_min , float $new_max ) : resource
fann_set_activation_function ( resource $ann , int $activation_function , int $layer , int $neuron ) : resource
fann_set_activation_function_hidden ( resource $ann , int $activation_function ) : resource
fann_set_activation_function_layer ( resource $ann , int $activation_function , int $layer ) : resource
fann_set_activation_function_output ( resource $ann , int $activation_function ) : resource
fann_set_activation_steepness ( resource $ann , float $activation_steepness , int $layer , int $neuron ) : resource
fann_set_activation_steepness_hidden ( resource $ann , float $activation_steepness ) : resource
fann_set_activation_steepness_layer ( resource $ann , float $activation_steepness , int $layer ) : resource
fann_set_activation_steepness_output ( resource $ann , float $activation_steepness ) : resource
fann_set_bit_fail_limit ( resource $ann , float $bit_fail_limit ) : resource
fann_set_callback ( resource $ann , collable $callback ) : resource
fann_set_cascade_activation_functions ( resource $ann , array $cascade_activation_functions ) : resource
fann_set_cascade_activation_steepnesses ( resource $ann , array $cascade_activation_steepnesses_count ) : resource
fann_set_cascade_candidate_change_fraction ( resource $ann , float $cascade_candidate_change_fraction ) : resource
fann_set_cascade_candidate_limit ( resource $ann , float $cascade_candidate_limit ) : resource
fann_set_cascade_candidate_stagnation_epochs ( resource $ann , int $cascade_candidate_stagnation_epochs ) : resource
fann_set_cascade_max_cand_epochs ( resource $ann , int $cascade_max_cand_epochs ) : resource
fann_set_cascade_max_out_epochs ( resource $ann , int $cascade_max_out_epochs ) : resource
fann_set_cascade_min_cand_epochs ( resource $ann , int $cascade_min_cand_epochs ) : resource
fann_set_cascade_min_out_epochs ( resource $ann , int $cascade_min_out_epochs ) : resource
fann_set_cascade_num_candidate_groups ( resource $ann , int $cascade_num_candidate_groups ) : resource
fann_set_cascade_output_change_fraction ( resource $ann , float $cascade_output_change_fraction ) : resource
fann_set_cascade_output_stagnation_epochs ( resource $ann , int $cascade_output_stagnation_epochs ) : resource
fann_set_cascade_weight_multiplier ( resource $ann , float $cascade_weight_multiplier ) : resource
fann_set_error_log ( resource $errdat , string $log_file ) : resource
fann_set_input_scaling_params ( resource $ann , resource $train_data , float $new_input_min , float $new_input_max ) : resource
fann_set_learning_momentum ( resource $ann , float $learning_momentum ) : resource
fann_set_learning_rate ( resource $ann , float $learning_rate ) : resource
fann_set_output_scaling_params ( resource $ann , resource $train_data , float $new_output_min , float $new_output_max ) : resource
fann_set_quickprop_decay ( resource $ann , float $quickprop_decay ) : resource
fann_set_quickprop_mu ( resource $ann , float $quickprop_mu ) : resource
fann_set_rprop_decrease_factor ( resource $ann , float $rprop_decrease_factor ) : resource
fann_set_rprop_delta_max ( resource $ann , float $rprop_delta_max ) : resource
fann_set_rprop_delta_min ( resource $ann , float $rprop_delta_min ) : resource
fann_set_rprop_delta_zero ( resource $ann , float $rprop_delta_zero ) : resource
fann_set_rprop_increase_factor ( resource $ann , float $rprop_increase_factor ) : resource
fann_set_sarprop_step_error_shift ( resource $ann , float $sarprop_step_error_shift ) : resource
fann_set_sarprop_step_error_threshold_factor ( resource $ann , float $sarprop_step_error_threshold_factor ) : resource
fann_set_sarprop_temperature ( resource $ann , float $sarprop_temperature ) : resource
fann_set_sarprop_weight_decay_shift ( resource $ann , float $sarprop_weight_decay_shift ) : resource
fann_set_scaling_params ( resource $ann , resource $train_data , float $new_input_min , float $new_input_max , float $new_output_min , float $new_output_max ) : resource
fann_set_training_algorithm ( resource $ann , int $training_algorithm ) : resource
fann_set_train_error_function ( resource $ann , int $error_function ) : resource
fann_set_train_stop_function ( resource $ann , int $stop_function ) : resource
fann_set_weight ( resource $ann , int $from_neuron , int $to_neuron , float $weight ) : resource
fann_set_weight_array ( resource $ann , array $connections ) : resource
fann_shuffle_train_data ( resource $train_data ) : resource
fann_subset_train_data ( resource $data , int $pos , int $length ) : resource
fann_test ( resource $ann , array $input , array $desired_output ) : resource
fann_test_data ( resource $ann , resource $data ) : resource
fann_train ( resource $ann , array $input , array $desired_output ) : resource
fann_train_epoch ( resource $ann , resource $data ) : resource
fann_train_on_data ( resource $ann , resource $data , int $max_epochs , int $epochs_between_reports , float $desired_error ) : resource
fann_train_on_file ( resource $ann , string $filename , int $max_epochs , int $epochs_between_reports , float $desired_error ) : resource
fastcgi_finish_request ( void ) : bool
fbsql_affected_rows ([ resource $link_identifier ] ) : resource
fbsql_autocommit ( resource $link_identifier [, bool $OnOff ] ) : resource
fbsql_blob_size ( string $blob_handle [, resource $link_identifier ] ) : string
fbsql_change_user ( string $user , string $password [, string $database [, resource $link_identifier ]] ) : string
fbsql_clob_size ( string $clob_handle [, resource $link_identifier ] ) : string
fbsql_close ([ resource $link_identifier ] ) : resource
fbsql_commit ([ resource $link_identifier ] ) : resource
fbsql_connect ([ string $hostname = ini_get("fbsql.default_host") [, string $username = ini_get("fbsql.default_user") [, string $password = ini_get("fbsql.default_password") ]]] ) : string
fbsql_create_blob ( string $blob_data [, resource $link_identifier ] ) : string
fbsql_create_clob ( string $clob_data [, resource $link_identifier ] ) : string
fbsql_create_db ( string $database_name [, resource $link_identifier [, string $database_options ]] ) : string
fbsql_database ( resource $link_identifier [, string $database ] ) : resource
fbsql_database_password ( resource $link_identifier [, string $database_password ] ) : resource
fbsql_data_seek ( resource $result , int $row_number ) : resource
fbsql_db_query ( string $database , string $query [, resource $link_identifier ] ) : string
fbsql_db_status ( string $database_name [, resource $link_identifier ] ) : string
fbsql_drop_db ( string $database_name [, resource $link_identifier ] ) : string
fbsql_errno ([ resource $link_identifier ] ) : resource
fbsql_error ([ resource $link_identifier ] ) : resource
fbsql_fetch_array ( resource $result [, int $result_type ] ) : resource
fbsql_fetch_assoc ( resource $result ) : resource
fbsql_fetch_field ( resource $result [, int $field_offset ] ) : resource
fbsql_fetch_lengths ( resource $result ) : resource
fbsql_fetch_object ( resource $result ) : resource
fbsql_fetch_row ( resource $result ) : resource
fbsql_field_flags ( resource $result [, int $field_offset ] ) : resource
fbsql_field_len ( resource $result [, int $field_offset ] ) : resource
fbsql_field_name ( resource $result [, int $field_index ] ) : resource
fbsql_field_seek ( resource $result [, int $field_offset ] ) : resource
fbsql_field_table ( resource $result [, int $field_offset ] ) : resource
fbsql_field_type ( resource $result [, int $field_offset ] ) : resource
fbsql_free_result ( resource $result ) : resource
fbsql_get_autostart_info ([ resource $link_identifier ] ) : resource
fbsql_hostname ( resource $link_identifier [, string $host_name ] ) : resource
fbsql_insert_id ([ resource $link_identifier ] ) : resource
fbsql_list_dbs ([ resource $link_identifier ] ) : resource
fbsql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] ) : string
fbsql_list_tables ( string $database [, resource $link_identifier ] ) : string
fbsql_next_result ( resource $result ) : resource
fbsql_num_fields ( resource $result ) : resource
fbsql_num_rows ( resource $result ) : resource
fbsql_password ( resource $link_identifier [, string $password ] ) : resource
fbsql_pconnect ([ string $hostname = ini_get("fbsql.default_host") [, string $username = ini_get("fbsql.default_user") [, string $password = ini_get("fbsql.default_password") ]]] ) : string
fbsql_query ( string $query [, resource $link_identifier [, int $batch_size ]] ) : string
fbsql_read_blob ( string $blob_handle [, resource $link_identifier ] ) : string
fbsql_read_clob ( string $clob_handle [, resource $link_identifier ] ) : string
fbsql_result ( resource $result [, int $row [, mixed $field ]] ) : resource
fbsql_rollback ([ resource $link_identifier ] ) : resource
fbsql_rows_fetched ( resource $result ) : resource
fbsql_select_db ([ string $database_name [, resource $link_identifier ]] ) : string
fbsql_set_characterset ( resource $link_identifier , int $characterset [, int $in_out_both ] ) : resource
fbsql_set_lob_mode ( resource $result , int $lob_mode ) : resource
fbsql_set_password ( resource $link_identifier , string $user , string $password , string $old_password ) : resource
fbsql_set_transaction ( resource $link_identifier , int $locking , int $isolation ) : resource
fbsql_start_db ( string $database_name [, resource $link_identifier [, string $database_options ]] ) : string
fbsql_stop_db ( string $database_name [, resource $link_identifier ] ) : string
fbsql_tablename ( resource $result , int $index ) : resource
fbsql_table_name ( resource $result , int $index ) : resource
fbsql_username ( resource $link_identifier [, string $username ] ) : resource
fbsql_warnings ([ bool $OnOff ] ) : bool
fclose ( resource $handle ) : resource
fdf_add_doc_javascript ( resource $fdf_document , string $script_name , string $script_code ) : resource
fdf_add_template ( resource $fdf_document , int $newpage , string $filename , string $template , int $rename ) : resource
fdf_close ( resource $fdf_document ) : resource
fdf_create ( void ) : resource
fdf_enum_values ( resource $fdf_document , callable $function [, mixed $userdata ] ) : resource
fdf_errno ( void ) : int
fdf_error ([ int $error_code = -1 ] ) : int
fdf_get_ap ( resource $fdf_document , string $field , int $face , string $filename ) : resource
fdf_get_attachment ( resource $fdf_document , string $fieldname , string $savepath ) : resource
fdf_get_encoding ( resource $fdf_document ) : resource
fdf_get_file ( resource $fdf_document ) : resource
fdf_get_flags ( resource $fdf_document , string $fieldname , int $whichflags ) : resource
fdf_get_opt ( resource $fdf_document , string $fieldname [, int $element = -1 ] ) : resource
fdf_get_status ( resource $fdf_document ) : resource
fdf_get_value ( resource $fdf_document , string $fieldname [, int $which = -1 ] ) : resource
fdf_get_version ([ resource $fdf_document ] ) : resource
fdf_header ( void ) : void
fdf_next_field_name ( resource $fdf_document [, string $fieldname ] ) : resource
fdf_open ( string $filename ) : string
fdf_open_string ( string $fdf_data ) : string
fdf_remove_item ( resource $fdf_document , string $fieldname , int $item ) : resource
fdf_save ( resource $fdf_document [, string $filename ] ) : resource
fdf_save_string ( resource $fdf_document ) : resource
fdf_set_ap ( resource $fdf_document , string $field_name , int $face , string $filename , int $page_number ) : resource
fdf_set_encoding ( resource $fdf_document , string $encoding ) : resource
fdf_set_file ( resource $fdf_document , string $url [, string $target_frame ] ) : resource
fdf_set_flags ( resource $fdf_document , string $fieldname , int $whichFlags , int $newFlags ) : resource
fdf_set_javascript_action ( resource $fdf_document , string $fieldname , int $trigger , string $script ) : resource
fdf_set_on_import_javascript ( resource $fdf_document , string $script , bool $before_data_import ) : resource
fdf_set_opt ( resource $fdf_document , string $fieldname , int $element , string $str1 , string $str2 ) : resource
fdf_set_status ( resource $fdf_document , string $status ) : resource
fdf_set_submit_form_action ( resource $fdf_document , string $fieldname , int $trigger , string $script , int $flags ) : resource
fdf_set_target_frame ( resource $fdf_document , string $frame_name ) : resource
fdf_set_value ( resource $fdf_document , string $fieldname , mixed $value [, int $isName ] ) : resource
fdf_set_version ( resource $fdf_document , string $version ) : resource
feof ( resource $handle ) : resource
fflush ( resource $handle ) : resource
fgetc ( resource $handle ) : resource
fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = "," [, string $enclosure = '"' [, string $escape = "\\" ]]]] ) : resource
fgets ( resource $handle [, int $length ] ) : resource
fgetss ( resource $handle [, int $length [, string $allowable_tags ]] ) : resource
file ( string $filename [, int $flags = 0 [, resource $context ]] ) : string
fileatime ( string $filename ) : string
filectime ( string $filename ) : string
filegroup ( string $filename ) : string
fileinode ( string $filename ) : string
filemtime ( string $filename ) : string
fileowner ( string $filename ) : string
fileperms ( string $filename ) : string
filepro ( string $directory ) : string
filepro_fieldcount ( void ) : int
filepro_fieldname ( int $field_number ) : int
filepro_fieldtype ( int $field_number ) : int
filepro_fieldwidth ( int $field_number ) : int
filepro_retrieve ( int $row_number , int $field_number ) : int
filepro_rowcount ( void ) : int
filesize ( string $filename ) : string
filetype ( string $filename ) : string
file_exists ( string $filename ) : string
file_get_contents ( string $filename [, bool $use_include_path = FALSE [, resource $context [, int $offset = 0 [, int $maxlen ]]]] ) : string
file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] ) : string
filter_has_var ( int $type , string $variable_name ) : int
filter_id ( string $filtername ) : string
filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]] ) : int
filter_input_array ( int $type [, mixed $definition [, bool $add_empty = TRUE ]] ) : int
filter_list ( void ) : array
filter_var ( mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]] ) : mixed
filter_var_array ( array $data [, mixed $definition [, bool $add_empty = TRUE ]] ) : array
finfo_buffer ( resource $finfo , string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] ) : resource
finfo_close ( resource $finfo ) : resource
finfo_file ( resource $finfo , string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] ) : resource
finfo_open ([ int $options = FILEINFO_NONE [, string $magic_file = NULL ]] ) : int
finfo_set_flags ( resource $finfo , int $options ) : resource
floatval ( mixed $var ) : mixed
flock ( resource $handle , int $operation [, int &$wouldblock ] ) : resource
floor ( float $value ) : float
flush ( void ) : void
fmod ( float $x , float $y ) : float
fnmatch ( string $pattern , string $string [, int $flags = 0 ] ) : string
fopen ( string $filename , string $mode [, bool $use_include_path = FALSE [, resource $context ]] ) : string
forward_static_call ( callable $function [, mixed $... ] ) : callable
forward_static_call_array ( callable $function , array $parameters ) : callable
fpassthru ( resource $handle ) : resource
fprintf ( resource $handle , string $format [, mixed $... ] ) : resource
fputcsv ( resource $handle , array $fields [, string $delimiter = "," [, string $enclosure = '"' [, string $escape_char = "\\" ]]] ) : resource
fputs ( resource $handle , string $string [, int $length ] ) : resource
fread ( resource $handle , int $length ) : resource
frenchtojd ( int $month , int $day , int $year ) : int
fribidi_log2vis ( string $str , string $direction , int $charset ) : string
fscanf ( resource $handle , string $format [, mixed &$... ] ) : resource
fseek ( resource $handle , int $offset [, int $whence = SEEK_SET ] ) : resource
fsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]] ) : string
fstat ( resource $handle ) : resource
ftell ( resource $handle ) : resource
ftok ( string $pathname , string $proj ) : string
ftp_alloc ( resource $ftp_stream , int $filesize [, string &$result ] ) : resource
ftp_append ( resource $ftp , string $remote_file , string $local_file [, int $mode = FTP_IMAGE ] ) : resource
ftp_cdup ( resource $ftp_stream ) : resource
ftp_chdir ( resource $ftp_stream , string $directory ) : resource
ftp_chmod ( resource $ftp_stream , int $mode , string $filename ) : resource
ftp_close ( resource $ftp_stream ) : resource
ftp_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] ) : string
ftp_delete ( resource $ftp_stream , string $path ) : resource
ftp_exec ( resource $ftp_stream , string $command ) : resource
ftp_fget ( resource $ftp_stream , resource $handle , string $remote_file [, int $mode = FTP_IMAGE [, int $resumepos = 0 ]] ) : resource
ftp_fput ( resource $ftp_stream , string $remote_file , resource $handle [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] ) : resource
ftp_get ( resource $ftp_stream , string $local_file , string $remote_file [, int $mode = FTP_BINARY [, int $resumepos = 0 ]] ) : resource
ftp_get_option ( resource $ftp_stream , int $option ) : resource
ftp_login ( resource $ftp_stream , string $username , string $password ) : resource
ftp_mdtm ( resource $ftp_stream , string $remote_file ) : resource
ftp_mkdir ( resource $ftp_stream , string $directory ) : resource
ftp_mlsd ( resource $ftp_stream , string $directory ) : resource
ftp_nb_continue ( resource $ftp_stream ) : resource
ftp_nb_fget ( resource $ftp_stream , resource $handle , string $remote_file [, int $mode = FTP_IMAGE [, int $resumepos = 0 ]] ) : resource
ftp_nb_fput ( resource $ftp_stream , string $remote_file , resource $handle [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] ) : resource
ftp_nb_get ( resource $ftp_stream , string $local_file , string $remote_file [, int $mode = FTP_IMAGE [, int $resumepos = 0 ]] ) : resource
ftp_nb_put ( resource $ftp_stream , string $remote_file , string $local_file [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] ) : resource
ftp_nlist ( resource $ftp_stream , string $directory ) : resource
ftp_pasv ( resource $ftp_stream , bool $pasv ) : resource
ftp_put ( resource $ftp_stream , string $remote_file , string $local_file [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] ) : resource
ftp_pwd ( resource $ftp_stream ) : resource
ftp_quit ( resource $ftp_stream ) : resource
ftp_raw ( resource $ftp_stream , string $command ) : resource
ftp_rawlist ( resource $ftp_stream , string $directory [, bool $recursive = FALSE ] ) : resource
ftp_rename ( resource $ftp_stream , string $oldname , string $newname ) : resource
ftp_rmdir ( resource $ftp_stream , string $directory ) : resource
ftp_set_option ( resource $ftp_stream , int $option , mixed $value ) : resource
ftp_site ( resource $ftp_stream , string $command ) : resource
ftp_size ( resource $ftp_stream , string $remote_file ) : resource
ftp_ssl_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] ) : string
ftp_systype ( resource $ftp_stream ) : resource
ftruncate ( resource $handle , int $size ) : resource
function_exists ( string $function_name ) : string
func_get_arg ( int $arg_num ) : int
func_get_args ( void ) : array
func_num_args ( void ) : int
fwrite ( resource $handle , string $string [, int $length ] ) : resource
gc_collect_cycles ( void ) : int
gc_disable ( void ) : void
gc_enable ( void ) : void
gc_enabled ( void ) : bool
gc_mem_caches ( void ) : int
gc_status ( void ) : array
gd_info ( void ) : array
geoip_asnum_by_name ( string $hostname ) : string
geoip_continent_code_by_name ( string $hostname ) : string
geoip_country_code3_by_name ( string $hostname ) : string
geoip_country_code_by_name ( string $hostname ) : string
geoip_country_name_by_name ( string $hostname ) : string
geoip_database_info ([ int $database = GEOIP_COUNTRY_EDITION ] ) : int
geoip_db_avail ( int $database ) : int
geoip_db_filename ( int $database ) : int
geoip_db_get_all_info ( void ) : array
geoip_domain_by_name ( string $hostname ) : string
geoip_id_by_name ( string $hostname ) : string
geoip_isp_by_name ( string $hostname ) : string
geoip_netspeedcell_by_name ( string $hostname ) : string
geoip_org_by_name ( string $hostname ) : string
geoip_record_by_name ( string $hostname ) : string
geoip_region_by_name ( string $hostname ) : string
geoip_region_name_by_code ( string $country_code , string $region_code ) : string
geoip_setup_custom_directory ( string $path ) : string
geoip_time_zone_by_country_and_region ( string $country_code [, string $region_code ] ) : string
getallheaders ( void ) : array
getcwd ( void ) : string
getdate ([ int $timestamp = time() ] ) : int
getenv ( string $varname [, bool $local_only = FALSE ] ) : string [:OR:] ( void ) : string
gethostbyaddr ( string $ip_address ) : string
gethostbyname ( string $hostname ) : string
gethostbynamel ( string $hostname ) : string
gethostname ( void ) : string
getimagesize ( string $filename [, array &$imageinfo ] ) : string
getimagesizefromstring ( string $imagedata [, array &$imageinfo ] ) : string
getlastmod ( void ) : int
getmxrr ( string $hostname , array &$mxhosts [, array &$weight ] ) : string
getmygid ( void ) : int
getmyinode ( void ) : int
getmypid ( void ) : int
getmyuid ( void ) : int
getopt ( string $options [, array $longopts [, int &$optind ]] ) : string
getprotobyname ( string $name ) : string
getprotobynumber ( int $number ) : int
getrandmax ( void ) : int
getrusage ([ int $who = 0 ] ) : int
getservbyname ( string $service , string $protocol ) : string
getservbyport ( int $port , string $protocol ) : int
gettext ( string $message ) : string
gettimeofday ([ bool $return_float = FALSE ] ) : bool
gettype ( mixed $var ) : mixed
get_browser ([ string $user_agent [, bool $return_array = FALSE ]] ) : string
get_called_class ( void ) : string
get_cfg_var ( string $option ) : string
get_class ([ object $object ] ) : object
get_class_methods ( mixed $class_name ) : mixed
get_class_vars ( string $class_name ) : string
get_current_user ( void ) : string
get_declared_classes ( void ) : array
get_declared_interfaces ( void ) : array
get_declared_traits ( void ) : array
get_defined_constants ([ bool $categorize = FALSE ] ) : bool
get_defined_functions ([ bool $exclude_disabled = FALSE ] ) : bool
get_defined_vars ( void ) : array
get_extension_funcs ( string $module_name ) : string
get_headers ( string $url [, int $format = 0 [, resource $context ]] ) : string
get_html_translation_table ([ int $table = HTML_SPECIALCHARS [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = "UTF-8" ]]] ) : int
get_included_files ( void ) : array
get_include_path ( void ) : string
get_loaded_extensions ([ bool $zend_extensions = FALSE ] ) : bool
get_magic_quotes_gpc ( void ) : bool
get_magic_quotes_runtime ( void ) : bool
get_meta_tags ( string $filename [, bool $use_include_path = FALSE ] ) : string
get_object_vars ( object $object ) : object
get_parent_class ([ mixed $object ] ) : mixed
get_required_files ( void ) : array
get_resources ([ string $type ] ) : string
get_resource_type ( resource $handle ) : resource
glob ( string $pattern [, int $flags = 0 ] ) : string
gmdate ( string $format [, int $timestamp = time() ] ) : string
gmmktime ([ int $hour = gmdate("H") [, int $minute = gmdate("i") [, int $second = gmdate("s") [, int $month = gmdate("n") [, int $day = gmdate("j") [, int $year = gmdate("Y") [, int $is_dst = -1 ]]]]]]] ) : int
gmp_abs ( GMP $a ) : GMP
gmp_add ( GMP $a , GMP $b ) : GMP
gmp_and ( GMP $a , GMP $b ) : GMP
gmp_binomial ( mixed $n , int $k ) : mixed
gmp_clrbit ( GMP $a , int $index ) : GMP
gmp_cmp ( GMP $a , GMP $b ) : GMP
gmp_com ( GMP $a ) : GMP
gmp_div ( GMP $a , GMP $b [, int $round = GMP_ROUND_ZERO ] ) : GMP
gmp_divexact ( GMP $n , GMP $d ) : GMP
gmp_div_q ( GMP $a , GMP $b [, int $round = GMP_ROUND_ZERO ] ) : GMP
gmp_div_qr ( GMP $n , GMP $d [, int $round = GMP_ROUND_ZERO ] ) : GMP
gmp_div_r ( GMP $n , GMP $d [, int $round = GMP_ROUND_ZERO ] ) : GMP
gmp_export ( GMP $gmpnumber [, int $word_size = 1 [, int $options = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN ]] ) : GMP
gmp_fact ( mixed $a ) : mixed
gmp_gcd ( GMP $a , GMP $b ) : GMP
gmp_gcdext ( GMP $a , GMP $b ) : GMP
gmp_hamdist ( GMP $a , GMP $b ) : GMP
gmp_import ( string $data [, int $word_size = 1 [, int $options = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN ]] ) : string
gmp_init ( mixed $number [, int $base = 0 ] ) : mixed
gmp_intval ( GMP $gmpnumber ) : GMP
gmp_invert ( GMP $a , GMP $b ) : GMP
gmp_jacobi ( GMP $a , GMP $p ) : GMP
gmp_kronecker ( mixed $a , mixed $b ) : mixed
gmp_lcm ( mixed $a , mixed $b ) : mixed
gmp_legendre ( GMP $a , GMP $p ) : GMP
gmp_mod ( GMP $n , GMP $d ) : GMP
gmp_mul ( GMP $a , GMP $b ) : GMP
gmp_neg ( GMP $a ) : GMP
gmp_nextprime ( int $a ) : int
gmp_or ( GMP $a , GMP $b ) : GMP
gmp_perfect_power ( mixed $a ) : mixed
gmp_perfect_square ( GMP $a ) : GMP
gmp_popcount ( GMP $a ) : GMP
gmp_pow ( GMP $base , int $exp ) : GMP
gmp_powm ( GMP $base , GMP $exp , GMP $mod ) : GMP
gmp_prob_prime ( GMP $a [, int $reps = 10 ] ) : GMP
gmp_random ([ int $limiter = 20 ] ) : int
gmp_random_bits ( int $bits ) : int
gmp_random_range ( GMP $min , GMP $max ) : GMP
gmp_random_seed ( mixed $seed ) : mixed
gmp_root ( GMP $a , int $nth ) : GMP
gmp_rootrem ( GMP $a , int $nth ) : GMP
gmp_scan0 ( GMP $a , int $start ) : GMP
gmp_scan1 ( GMP $a , int $start ) : GMP
gmp_setbit ( GMP $a , int $index [, bool $bit_on = TRUE ] ) : GMP
gmp_sign ( GMP $a ) : GMP
gmp_sqrt ( GMP $a ) : GMP
gmp_sqrtrem ( GMP $a ) : GMP
gmp_strval ( GMP $gmpnumber [, int $base = 10 ] ) : GMP
gmp_sub ( GMP $a , GMP $b ) : GMP
gmp_testbit ( GMP $a , int $index ) : GMP
gmp_xor ( GMP $a , GMP $b ) : GMP
gmstrftime ( string $format [, int $timestamp = time() ] ) : string
gnupg_adddecryptkey ( resource $identifier , string $fingerprint , string $passphrase ) : resource
gnupg_addencryptkey ( resource $identifier , string $fingerprint ) : resource
gnupg_addsignkey ( resource $identifier , string $fingerprint [, string $passphrase ] ) : resource
gnupg_cleardecryptkeys ( resource $identifier ) : resource
gnupg_clearencryptkeys ( resource $identifier ) : resource
gnupg_clearsignkeys ( resource $identifier ) : resource
gnupg_decrypt ( resource $identifier , string $text ) : resource
gnupg_decryptverify ( resource $identifier , string $text , string &$plaintext ) : resource
gnupg_encrypt ( resource $identifier , string $plaintext ) : resource
gnupg_encryptsign ( resource $identifier , string $plaintext ) : resource
gnupg_export ( resource $identifier , string $fingerprint ) : resource
gnupg_geterror ( resource $identifier ) : resource
gnupg_getprotocol ( resource $identifier ) : resource
gnupg_import ( resource $identifier , string $keydata ) : resource
gnupg_init ( void ) : resource
gnupg_keyinfo ( resource $identifier , string $pattern ) : resource
gnupg_setarmor ( resource $identifier , int $armor ) : resource
gnupg_seterrormode ( resource $identifier , int $errormode ) : resource
gnupg_setsignmode ( resource $identifier , int $signmode ) : resource
gnupg_sign ( resource $identifier , string $plaintext ) : resource
gnupg_verify ( resource $identifier , string $signed_text , string $signature [, string &$plaintext ] ) : resource
gopher_parsedir ( string $dirent ) : string
grapheme_extract ( string $haystack , int $size [, int $extract_type [, int $start = 0 [, int &$next ]]] ) : string
grapheme_stripos ( string $haystack , string $needle [, int $offset = 0 ] ) : string
grapheme_stristr ( string $haystack , string $needle [, bool $before_needle = FALSE ] ) : string
grapheme_strlen ( string $input ) : string
grapheme_strpos ( string $haystack , string $needle [, int $offset = 0 ] ) : string
grapheme_strripos ( string $haystack , string $needle [, int $offset = 0 ] ) : string
grapheme_strrpos ( string $haystack , string $needle [, int $offset = 0 ] ) : string
grapheme_strstr ( string $haystack , string $needle [, bool $before_needle = FALSE ] ) : string
grapheme_substr ( string $string , int $start [, int $length ] ) : string
gregoriantojd ( int $month , int $day , int $year ) : int
gupnp_context_get_host_ip ( resource $context ) : resource
gupnp_context_get_port ( resource $context ) : resource
gupnp_context_get_subscription_timeout ( resource $context ) : resource
gupnp_context_host_path ( resource $context , string $local_path , string $server_path ) : resource
gupnp_context_new ([ string $host_ip [, int $port = 0 ]] ) : string
gupnp_context_set_subscription_timeout ( resource $context , int $timeout ) : resource
gupnp_context_timeout_add ( resource $context , int $timeout , mixed $callback [, mixed $arg ] ) : resource
gupnp_context_unhost_path ( resource $context , string $server_path ) : resource
gupnp_control_point_browse_start ( resource $cpoint ) : resource
gupnp_control_point_browse_stop ( resource $cpoint ) : resource
gupnp_control_point_callback_set ( resource $cpoint , int $signal , mixed $callback [, mixed $arg ] ) : resource
gupnp_control_point_new ( resource $context , string $target ) : resource
gupnp_device_action_callback_set ( resource $root_device , int $signal , string $action_name , mixed $callback [, mixed $arg ] ) : resource
gupnp_device_info_get ( resource $root_device ) : resource
gupnp_device_info_get_service ( resource $root_device , string $type ) : resource
gupnp_root_device_get_available ( resource $root_device ) : resource
gupnp_root_device_get_relative_location ( resource $root_device ) : resource
gupnp_root_device_new ( resource $context , string $location , string $description_dir ) : resource
gupnp_root_device_set_available ( resource $root_device , bool $available ) : resource
gupnp_root_device_start ( resource $root_device ) : resource
gupnp_root_device_stop ( resource $root_device ) : resource
gupnp_service_action_get ( resource $action , string $name , int $type ) : resource
gupnp_service_action_return ( resource $action ) : resource
gupnp_service_action_return_error ( resource $action , int $error_code [, string $error_description ] ) : resource
gupnp_service_action_set ( resource $action , string $name , int $type , mixed $value ) : resource
gupnp_service_freeze_notify ( resource $service ) : resource
gupnp_service_info_get ( resource $proxy ) : resource
gupnp_service_info_get_introspection ( resource $proxy [, mixed $callback [, mixed $arg ]] ) : resource
gupnp_service_introspection_get_state_variable ( resource $introspection , string $variable_name ) : resource
gupnp_service_notify ( resource $service , string $name , int $type , mixed $value ) : resource
gupnp_service_proxy_action_get ( resource $proxy , string $action , string $name , int $type ) : resource
gupnp_service_proxy_action_set ( resource $proxy , string $action , string $name , mixed $value , int $type ) : resource
gupnp_service_proxy_add_notify ( resource $proxy , string $value , int $type , mixed $callback [, mixed $arg ] ) : resource
gupnp_service_proxy_callback_set ( resource $proxy , int $signal , mixed $callback [, mixed $arg ] ) : resource
gupnp_service_proxy_get_subscribed ( resource $proxy ) : resource
gupnp_service_proxy_remove_notify ( resource $proxy , string $value ) : resource
gupnp_service_proxy_set_subscribed ( resource $proxy , bool $subscribed ) : resource
gupnp_service_thaw_notify ( resource $service ) : resource
gzclose ( resource $zp ) : resource
gzcompress ( string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_DEFLATE ]] ) : string
gzdecode ( string $data [, int $length ] ) : string
gzdeflate ( string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_RAW ]] ) : string
gzencode ( string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]] ) : string
gzeof ( resource $zp ) : resource
gzfile ( string $filename [, int $use_include_path = 0 ] ) : string
gzgetc ( resource $zp ) : resource
gzgets ( resource $zp [, int $length ] ) : resource
gzgetss ( resource $zp , int $length [, string $allowable_tags ] ) : resource
gzinflate ( string $data [, int $length = 0 ] ) : string
gzopen ( string $filename , string $mode [, int $use_include_path = 0 ] ) : string
gzpassthru ( resource $zp ) : resource
gzputs ( resource $zp , string $string [, int $length ] ) : resource
gzread ( resource $zp , int $length ) : resource
gzrewind ( resource $zp ) : resource
gzseek ( resource $zp , int $offset [, int $whence = SEEK_SET ] ) : resource
gztell ( resource $zp ) : resource
gzuncompress ( string $data [, int $length = 0 ] ) : string
gzwrite ( resource $zp , string $string [, int $length ] ) : resource
hash ( string $algo , string $data [, bool $raw_output = FALSE ] ) : string
hash_algos ( void ) : array
hash_copy ( HashContext $context ) : HashContext
hash_equals ( string $known_string , string $user_string ) : string
hash_file ( string $algo , string $filename [, bool $raw_output = FALSE ] ) : string
hash_final ( HashContext $context [, bool $raw_output = FALSE ] ) : HashContext
hash_hkdf ( string $algo , string $ikm [, int $length = 0 [, string $info = '' [, string $salt = '' ]]] ) : string
hash_hmac ( string $algo , string $data , string $key [, bool $raw_output = FALSE ] ) : string
hash_hmac_algos ( void ) : array
hash_hmac_file ( string $algo , string $filename , string $key [, bool $raw_output = FALSE ] ) : string
hash_init ( string $algo [, int $options = 0 [, string $key = NULL ]] ) : string
hash_pbkdf2 ( string $algo , string $password , string $salt , int $iterations [, int $length = 0 [, bool $raw_output = FALSE ]] ) : string
hash_update ( HashContext $context , string $data ) : HashContext
hash_update_file ( HashContext $hcontext , string $filename [, resource $scontext = NULL ] ) : HashContext
hash_update_stream ( HashContext $context , resource $handle [, int $length = -1 ] ) : HashContext
header ( string $header [, bool $replace = TRUE [, int $http_response_code ]] ) : string
headers_list ( void ) : array
headers_sent ([ string &$file [, int &$line ]] ) : string
header_register_callback ( callable $callback ) : callable
header_remove ([ string $name ] ) : string
hebrev ( string $hebrew_text [, int $max_chars_per_line = 0 ] ) : string
hebrevc ( string $hebrew_text [, int $max_chars_per_line = 0 ] ) : string
hex2bin ( string $data ) : string
hexdec ( string $hex_string ) : string
highlight_file ( string $filename [, bool $return = FALSE ] ) : string
highlight_string ( string $str [, bool $return = FALSE ] ) : string
hrtime ([ bool $get_as_number = FALSE ] ) : bool
htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get("default_charset") [, bool $double_encode = TRUE ]]] ) : string
htmlspecialchars ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get("default_charset") [, bool $double_encode = TRUE ]]] ) : string
htmlspecialchars_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 ] ) : string
html_entity_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get("default_charset") ]] ) : string
http_build_query ( mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]] ) : mixed
http_response_code ([ int $response_code ] ) : int
hwapi_attribute_new ([ string $name [, string $value ]] ) : string
hwapi_content_new ( string $content , string $mimetype ) : string
hwapi_hgcsp ( string $hostname [, int $port ] ) : string
hwapi_object_new ( array $parameter ) : array
hypot ( float $x , float $y ) : float
ibase_add_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] ) : resource
ibase_affected_rows ([ resource $link_identifier ] ) : resource
ibase_backup ( resource $service_handle , string $source_db , string $dest_file [, int $options = 0 [, bool $verbose = FALSE ]] ) : resource
ibase_blob_add ( resource $blob_handle , string $data ) : resource
ibase_blob_cancel ( resource $blob_handle ) : resource
ibase_blob_close ( resource $blob_handle ) : resource
ibase_blob_create ([ resource $link_identifier = NULL ] ) : resource
ibase_blob_echo ( string $blob_id ) : string [:OR:] ( resource $link_identifier , string $blob_id ) : string
ibase_blob_get ( resource $blob_handle , int $len ) : resource
ibase_blob_import ( resource $link_identifier , resource $file_handle ) : resource [:OR:] ( resource $file_handle ) : resource
ibase_blob_info ( resource $link_identifier , string $blob_id ) : resource [:OR:] ( string $blob_id ) : resource
ibase_blob_open ( resource $link_identifier , string $blob_id ) : resource [:OR:] ( string $blob_id ) : resource
ibase_close ([ resource $connection_id = NULL ] ) : resource
ibase_commit ([ resource $link_or_trans_identifier = NULL ] ) : resource
ibase_commit_ret ([ resource $link_or_trans_identifier = NULL ] ) : resource
ibase_connect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] ) : string
ibase_db_info ( resource $service_handle , string $db , int $action [, int $argument = 0 ] ) : resource
ibase_delete_user ( resource $service_handle , string $user_name ) : resource
ibase_drop_db ([ resource $connection = NULL ] ) : resource
ibase_errcode ( void ) : int
ibase_errmsg ( void ) : string
ibase_execute ( resource $query [, mixed $... ] ) : resource
ibase_fetch_assoc ( resource $result [, int $fetch_flag = 0 ] ) : resource
ibase_fetch_object ( resource $result_id [, int $fetch_flag = 0 ] ) : resource
ibase_fetch_row ( resource $result_identifier [, int $fetch_flag = 0 ] ) : resource
ibase_field_info ( resource $result , int $field_number ) : resource
ibase_free_event_handler ( resource $event ) : resource
ibase_free_query ( resource $query ) : resource
ibase_free_result ( resource $result_identifier ) : resource
ibase_gen_id ( string $generator [, int $increment = 1 [, resource $link_identifier = NULL ]] ) : string
ibase_maintain_db ( resource $service_handle , string $db , int $action [, int $argument = 0 ] ) : resource
ibase_modify_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] ) : resource
ibase_name_result ( resource $result , string $name ) : resource
ibase_num_fields ( resource $result_id ) : resource
ibase_num_params ( resource $query ) : resource
ibase_param_info ( resource $query , int $param_number ) : resource
ibase_pconnect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] ) : string
ibase_prepare ( string $query ) : string [:OR:] ( resource $link_identifier , string $query ) : string [:OR:] ( resource $link_identifier , string $trans , string $query ) : string
ibase_query ([ resource $link_identifier ], string $query [, int $bind_args ] ) : resource
ibase_restore ( resource $service_handle , string $source_file , string $dest_db [, int $options = 0 [, bool $verbose = FALSE ]] ) : resource
ibase_rollback ([ resource $link_or_trans_identifier = NULL ] ) : resource
ibase_rollback_ret ([ resource $link_or_trans_identifier = NULL ] ) : resource
ibase_server_info ( resource $service_handle , int $action ) : resource
ibase_service_attach ( string $host , string $dba_username , string $dba_password ) : string
ibase_service_detach ( resource $service_handle ) : resource
ibase_set_event_handler ( callable $event_handler , string $event_name1 [, string $... ] ) : callable [:OR:] ( resource $connection , callable $event_handler , string $event_name1 [, string $... ] ) : callable
ibase_trans ([ int $trans_args [, resource $link_identifier ]] ) : int [:OR:] ([ resource $link_identifier [, int $trans_args ]] ) : int
ibase_wait_event ( string $event_name1 [, string $... ] ) : string [:OR:] ( resource $connection , string $event_name1 [, string $... ] ) : string
iconv ( string $in_charset , string $out_charset , string $str ) : string
iconv_get_encoding ([ string $type = "all" ] ) : string
iconv_mime_decode ( string $encoded_header [, int $mode = 0 [, string $charset = ini_get("iconv.internal_encoding") ]] ) : string
iconv_mime_decode_headers ( string $encoded_headers [, int $mode = 0 [, string $charset = ini_get("iconv.internal_encoding") ]] ) : string
iconv_mime_encode ( string $field_name , string $field_value [, array $preferences = NULL ] ) : string
iconv_set_encoding ( string $type , string $charset ) : string
iconv_strlen ( string $str [, string $charset = ini_get("iconv.internal_encoding") ] ) : string
iconv_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $charset = ini_get("iconv.internal_encoding") ]] ) : string
iconv_strrpos ( string $haystack , string $needle [, string $charset = ini_get("iconv.internal_encoding") ] ) : string
iconv_substr ( string $str , int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get("iconv.internal_encoding") ]] ) : string
id3_get_frame_long_name ( string $frameId ) : string
id3_get_frame_short_name ( string $frameId ) : string
id3_get_genre_id ( string $genre ) : string
id3_get_genre_list ( void ) : array
id3_get_genre_name ( int $genre_id ) : int
id3_get_tag ( string $filename [, int $version = ID3_BEST ] ) : string
id3_get_version ( string $filename ) : string
id3_remove_tag ( string $filename [, int $version = ID3_V1_0 ] ) : string
id3_set_tag ( string $filename , array $tag [, int $version = ID3_V1_0 ] ) : string
idate ( string $format [, int $timestamp = time() ] ) : string
idn_to_ascii ( string $domain [, int $options = IDNA_DEFAULT [, int $variant = INTL_IDNA_VARIANT_UTS46 [, array &$idna_info ]]] ) : string
idn_to_utf8 ( string $domain [, int $options = IDNA_DEFAULT [, int $variant = INTL_IDNA_VARIANT_UTS46 [, array &$idna_info ]]] ) : string
ifxus_close_slob ( int $bid ) : int
ifxus_create_slob ( int $mode ) : int
ifxus_free_slob ( int $bid ) : int
ifxus_open_slob ( int $bid , int $mode ) : int
ifxus_read_slob ( int $bid , int $nbytes ) : int
ifxus_seek_slob ( int $bid , int $mode , int $offset ) : int
ifxus_tell_slob ( int $bid ) : int
ifxus_write_slob ( int $bid , string $content ) : int
ifx_affected_rows ( resource $result_id ) : resource
ifx_blobinfile_mode ( int $mode ) : int
ifx_byteasvarchar ( int $mode ) : int
ifx_close ([ resource $link_identifier ] ) : resource
ifx_connect ([ string $database [, string $userid [, string $password ]]] ) : string
ifx_copy_blob ( int $bid ) : int
ifx_create_blob ( int $type , int $mode , string $param ) : int
ifx_create_char ( string $param ) : string
ifx_do ( resource $result_id ) : resource
ifx_error ([ resource $link_identifier ] ) : resource
ifx_errormsg ([ int $errorcode ] ) : int
ifx_fetch_row ( resource $result_id [, mixed $position ] ) : resource
ifx_fieldproperties ( resource $result_id ) : resource
ifx_fieldtypes ( resource $result_id ) : resource
ifx_free_blob ( int $bid ) : int
ifx_free_char ( int $bid ) : int
ifx_free_result ( resource $result_id ) : resource
ifx_getsqlca ( resource $result_id ) : resource
ifx_get_blob ( int $bid ) : int
ifx_get_char ( int $bid ) : int
ifx_htmltbl_result ( resource $result_id [, string $html_table_options ] ) : resource
ifx_nullformat ( int $mode ) : int
ifx_num_fields ( resource $result_id ) : resource
ifx_num_rows ( resource $result_id ) : resource
ifx_pconnect ([ string $database [, string $userid [, string $password ]]] ) : string
ifx_prepare ( string $query , resource $link_identifier [, int $cursor_def ], mixed $blobidarray ) : string
ifx_query ( string $query , resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]] ) : string
ifx_textasvarchar ( int $mode ) : int
ifx_update_blob ( int $bid , string $content ) : int
ifx_update_char ( int $bid , string $content ) : int
ignore_user_abort ([ bool $value ] ) : bool
iis_add_server ( string $path , string $comment , string $server_ip , int $port , string $host_name , int $rights , int $start_server ) : string
iis_get_dir_security ( int $server_instance , string $virtual_path ) : int
iis_get_script_map ( int $server_instance , string $virtual_path , string $script_extension ) : int
iis_get_server_by_comment ( string $comment ) : string
iis_get_server_by_path ( string $path ) : string
iis_get_server_rights ( int $server_instance , string $virtual_path ) : int
iis_get_service_state ( string $service_id ) : string
iis_remove_server ( int $server_instance ) : int
iis_set_app_settings ( int $server_instance , string $virtual_path , string $application_scope ) : int
iis_set_dir_security ( int $server_instance , string $virtual_path , int $directory_flags ) : int
iis_set_script_map ( int $server_instance , string $virtual_path , string $script_extension , string $engine_path , int $allow_scripting ) : int
iis_set_server_rights ( int $server_instance , string $virtual_path , int $directory_flags ) : int
iis_start_server ( int $server_instance ) : int
iis_start_service ( string $service_id ) : string
iis_stop_server ( int $server_instance ) : int
iis_stop_service ( string $service_id ) : string
image2wbmp ( resource $image [, string $filename [, int $foreground ]] ) : resource
imageaffine ( resource $image , array $affine [, array $clip ] ) : resource
imageaffinematrixconcat ( array $m1 , array $m2 ) : array
imageaffinematrixget ( int $type [, mixed $options ] ) : int
imagealphablending ( resource $image , bool $blendmode ) : resource
imageantialias ( resource $image , bool $enabled ) : resource
imagearc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color ) : resource
imagebmp ( resource $image [, mixed $to = NULL [, bool $compressed = TRUE ]] ) : resource
imagechar ( resource $image , int $font , int $x , int $y , string $c , int $color ) : resource
imagecharup ( resource $image , int $font , int $x , int $y , string $c , int $color ) : resource
imagecolorallocate ( resource $image , int $red , int $green , int $blue ) : resource
imagecolorallocatealpha ( resource $image , int $red , int $green , int $blue , int $alpha ) : resource
imagecolorat ( resource $image , int $x , int $y ) : resource
imagecolorclosest ( resource $image , int $red , int $green , int $blue ) : resource
imagecolorclosestalpha ( resource $image , int $red , int $green , int $blue , int $alpha ) : resource
imagecolorclosesthwb ( resource $image , int $red , int $green , int $blue ) : resource
imagecolordeallocate ( resource $image , int $color ) : resource
imagecolorexact ( resource $image , int $red , int $green , int $blue ) : resource
imagecolorexactalpha ( resource $image , int $red , int $green , int $blue , int $alpha ) : resource
imagecolormatch ( resource $image1 , resource $image2 ) : resource
imagecolorresolve ( resource $image , int $red , int $green , int $blue ) : resource
imagecolorresolvealpha ( resource $image , int $red , int $green , int $blue , int $alpha ) : resource
imagecolorset ( resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ] ) : resource
imagecolorsforindex ( resource $image , int $index ) : resource
imagecolorstotal ( resource $image ) : resource
imagecolortransparent ( resource $image ) : resource [:OR:] ( resource $image , int $color ) : resource
imageconvolution ( resource $image , array $matrix , float $div , float $offset ) : resource
imagecopy ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h ) : resource
imagecopymerge ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct ) : resource
imagecopymergegray ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct ) : resource
imagecopyresampled ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h ) : resource
imagecopyresized ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h ) : resource
imagecreate ( int $width , int $height ) : int
imagecreatefrombmp ( string $filename ) : string
imagecreatefromgd ( string $filename ) : string
imagecreatefromgd2 ( string $filename ) : string
imagecreatefromgd2part ( string $filename , int $srcX , int $srcY , int $width , int $height ) : string
imagecreatefromgif ( string $filename ) : string
imagecreatefromjpeg ( string $filename ) : string
imagecreatefrompng ( string $filename ) : string
imagecreatefromstring ( string $image ) : string
imagecreatefromwbmp ( string $filename ) : string
imagecreatefromwebp ( string $filename ) : string
imagecreatefromxbm ( string $filename ) : string
imagecreatefromxpm ( string $filename ) : string
imagecreatetruecolor ( int $width , int $height ) : int
imagecrop ( resource $image , array $rect ) : resource
imagecropauto ( resource $image [, int $mode = IMG_CROP_DEFAULT [, float $threshold = .5 [, int $color = -1 ]]] ) : resource
imagedashedline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) : resource
imagedestroy ( resource $image ) : resource
imageellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color ) : resource
imagefill ( resource $image , int $x , int $y , int $color ) : resource
imagefilledarc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style ) : resource
imagefilledellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color ) : resource
imagefilledpolygon ( resource $image , array $points , int $num_points , int $color ) : resource
imagefilledrectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) : resource
imagefilltoborder ( resource $image , int $x , int $y , int $border , int $color ) : resource
imagefilter ( resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]] ) : resource
imageflip ( resource $image , int $mode ) : resource
imagefontheight ( int $font ) : int
imagefontwidth ( int $font ) : int
imageftbbox ( float $size , float $angle , string $fontfile , string $text [, array $extrainfo ] ) : float
imagefttext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ] ) : resource
imagegammacorrect ( resource $image , float $inputgamma , float $outputgamma ) : resource
imagegd ( resource $image [, mixed $to = NULL ] ) : resource
imagegd2 ( resource $image [, mixed $to = NULL [, int $chunk_size = 128 [, int $type = IMG_GD2_RAW ]]] ) : resource
imagegetclip ( resource $im ) : resource
imagegif ( resource $image [, mixed $to = NULL ] ) : resource
imagegrabscreen ( void ) : resource
imagegrabwindow ( int $window_handle [, int $client_area = 0 ] ) : int
imageinterlace ( resource $image [, int $interlace = 0 ] ) : resource
imageistruecolor ( resource $image ) : resource
imagejpeg ( resource $image [, mixed $to = NULL [, int $quality = -1 ]] ) : resource
imagelayereffect ( resource $image , int $effect ) : resource
imageline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) : resource
imageloadfont ( string $file ) : string
imageopenpolygon ( resource $image , array $points , int $num_points , int $color ) : resource
imagepalettecopy ( resource $destination , resource $source ) : resource
imagepalettetotruecolor ( resource $src ) : resource
imagepng ( resource $image [, mixed $to = NULL [, int $quality = -1 [, int $filters = -1 ]]] ) : resource
imagepolygon ( resource $image , array $points , int $num_points , int $color ) : resource
imagepsbbox ( string $text , resource $font , int $size ) : string [:OR:] ( string $text , resource $font , int $size , int $space , int $tightness , float $angle ) : string
imagepsencodefont ( resource $font_index , string $encodingfile ) : resource
imagepsextendfont ( resource $font_index , float $extend ) : resource
imagepsfreefont ( resource $font_index ) : resource
imagepsloadfont ( string $filename ) : string
imagepsslantfont ( resource $font_index , float $slant ) : resource
imagepstext ( resource $image , string $text , resource $font_index , int $size , int $foreground , int $background , int $x , int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4 ]]]] ) : resource
imagerectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) : resource
imageresolution ( resource $image ) : resource [:OR:] ( resource $image , int $res_x [, int $res_y = $res_x ] ) : resource
imagerotate ( resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ] ) : resource
imagesavealpha ( resource $image , bool $saveflag ) : resource
imagescale ( resource $image , int $new_width [, int $new_height = -1 [, int $mode = IMG_BILINEAR_FIXED ]] ) : resource
imagesetbrush ( resource $image , resource $brush ) : resource
imagesetclip ( resource $im , int $x1 , int $y1 , int $x2 , int $y2 ) : resource
imagesetinterpolation ( resource $image [, int $method = IMG_BILINEAR_FIXED ] ) : resource
imagesetpixel ( resource $image , int $x , int $y , int $color ) : resource
imagesetstyle ( resource $image , array $style ) : resource
imagesetthickness ( resource $image , int $thickness ) : resource
imagesettile ( resource $image , resource $tile ) : resource
imagestring ( resource $image , int $font , int $x , int $y , string $string , int $color ) : resource
imagestringup ( resource $image , int $font , int $x , int $y , string $string , int $color ) : resource
imagesx ( resource $image ) : resource
imagesy ( resource $image ) : resource
imagetruecolortopalette ( resource $image , bool $dither , int $ncolors ) : resource
imagettfbbox ( float $size , float $angle , string $fontfile , string $text ) : float
imagettftext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text ) : resource
imagetypes ( void ) : int
imagewbmp ( resource $image [, mixed $to = NULL [, int $foreground ]] ) : resource
imagewebp ( resource $image [, mixed $to = NULL [, int $quality = 80 ]] ) : resource
imagexbm ( resource $image [, string $filename = NULL [, int $foreground ]] ) : resource
image_type_to_extension ( int $imagetype [, bool $include_dot = TRUE ] ) : int
image_type_to_mime_type ( int $imagetype ) : int
imap_8bit ( string $string ) : string
imap_alerts ( void ) : array
imap_append ( resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]] ) : resource
imap_base64 ( string $text ) : string
imap_binary ( string $string ) : string
imap_body ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) : resource
imap_bodystruct ( resource $imap_stream , int $msg_number , string $section ) : resource
imap_check ( resource $imap_stream ) : resource
imap_clearflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = 0 ] ) : resource
imap_close ( resource $imap_stream [, int $flag = 0 ] ) : resource
imap_create ( resource $imap_stream , string $mailbox ) : resource
imap_createmailbox ( resource $imap_stream , string $mailbox ) : resource
imap_delete ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) : resource
imap_deletemailbox ( resource $imap_stream , string $mailbox ) : resource
imap_errors ( void ) : array
imap_expunge ( resource $imap_stream ) : resource
imap_fetchbody ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] ) : resource
imap_fetchheader ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) : resource
imap_fetchmime ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] ) : resource
imap_fetchstructure ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) : resource
imap_fetchtext ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) : resource
imap_fetch_overview ( resource $imap_stream , string $sequence [, int $options = 0 ] ) : resource
imap_gc ( resource $imap_stream , int $caches ) : resource
imap_getacl ( resource $imap_stream , string $mailbox ) : resource
imap_getmailboxes ( resource $imap_stream , string $ref , string $pattern ) : resource
imap_getsubscribed ( resource $imap_stream , string $ref , string $pattern ) : resource
imap_get_quota ( resource $imap_stream , string $quota_root ) : resource
imap_get_quotaroot ( resource $imap_stream , string $quota_root ) : resource
imap_header ( resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]] ) : resource
imap_headerinfo ( resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]] ) : resource
imap_headers ( resource $imap_stream ) : resource
imap_last_error ( void ) : string
imap_list ( resource $imap_stream , string $ref , string $pattern ) : resource
imap_listmailbox ( resource $imap_stream , string $ref , string $pattern ) : resource
imap_listscan ( resource $imap_stream , string $ref , string $pattern , string $content ) : resource
imap_listsubscribed ( resource $imap_stream , string $ref , string $pattern ) : resource
imap_lsub ( resource $imap_stream , string $ref , string $pattern ) : resource
imap_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $cc = NULL [, string $bcc = NULL [, string $rpath = NULL ]]]] ) : string
imap_mailboxmsginfo ( resource $imap_stream ) : resource
imap_mail_compose ( array $envelope , array $body ) : array
imap_mail_copy ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] ) : resource
imap_mail_move ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] ) : resource
imap_mime_header_decode ( string $text ) : string
imap_msgno ( resource $imap_stream , int $uid ) : resource
imap_mutf7_to_utf8 ( string $in ) : string
imap_num_msg ( resource $imap_stream ) : resource
imap_num_recent ( resource $imap_stream ) : resource
imap_open ( string $mailbox , string $username , string $password [, int $options = 0 [, int $n_retries = 0 [, array $params = NULL ]]] ) : string
imap_ping ( resource $imap_stream ) : resource
imap_qprint ( string $string ) : string
imap_rename ( resource $imap_stream , string $old_mbox , string $new_mbox ) : resource
imap_renamemailbox ( resource $imap_stream , string $old_mbox , string $new_mbox ) : resource
imap_reopen ( resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]] ) : resource
imap_rfc822_parse_adrlist ( string $address , string $default_host ) : string
imap_rfc822_parse_headers ( string $headers [, string $defaulthost = "UNKNOWN" ] ) : string
imap_rfc822_write_address ( string $mailbox , string $host , string $personal ) : string
imap_savebody ( resource $imap_stream , mixed $file , int $msg_number [, string $part_number = "" [, int $options = 0 ]] ) : resource
imap_scan ( resource $imap_stream , string $ref , string $pattern , string $content ) : resource
imap_scanmailbox ( resource $imap_stream , string $ref , string $pattern , string $content ) : resource
imap_search ( resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NULL ]] ) : resource
imap_setacl ( resource $imap_stream , string $mailbox , string $id , string $rights ) : resource
imap_setflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = NIL ] ) : resource
imap_set_quota ( resource $imap_stream , string $quota_root , int $quota_limit ) : resource
imap_sort ( resource $imap_stream , int $criteria , int $reverse [, int $options = 0 [, string $search_criteria = NULL [, string $charset = NULL ]]] ) : resource
imap_status ( resource $imap_stream , string $mailbox , int $options ) : resource
imap_subscribe ( resource $imap_stream , string $mailbox ) : resource
imap_thread ( resource $imap_stream [, int $options = SE_FREE ] ) : resource
imap_timeout ( int $timeout_type [, int $timeout = -1 ] ) : int
imap_uid ( resource $imap_stream , int $msg_number ) : resource
imap_undelete ( resource $imap_stream , int $msg_number [, int $flags = 0 ] ) : resource
imap_unsubscribe ( resource $imap_stream , string $mailbox ) : resource
imap_utf7_decode ( string $text ) : string
imap_utf7_encode ( string $data ) : string
imap_utf8 ( string $mime_encoded_text ) : string
imap_utf8_to_mutf7 ( string $in ) : string
implode ( string $glue , array $pieces ) : string [:OR:] ( array $pieces ) : string
import_request_variables ( string $types [, string $prefix ] ) : string
inclued_get_data ( void ) : array
inet_ntop ( string $in_addr ) : string
inet_pton ( string $address ) : string
inflate_add ( resource $context , string $encoded_data [, int $flush_mode = ZLIB_SYNC_FLUSH ] ) : resource
inflate_get_read_len ( resource $resource ) : resource
inflate_get_status ( resource $resource ) : resource
inflate_init ( int $encoding [, array $options = array() ] ) : int
ingres_autocommit ( resource $link ) : resource
ingres_autocommit_state ( resource $link ) : resource
ingres_charset ( resource $link ) : resource
ingres_close ( resource $link ) : resource
ingres_commit ( resource $link ) : resource
ingres_connect ([ string $database [, string $username [, string $password [, array $options ]]]] ) : string
ingres_cursor ( resource $result ) : resource
ingres_errno ([ resource $link ] ) : resource
ingres_error ([ resource $link ] ) : resource
ingres_errsqlstate ([ resource $link ] ) : resource
ingres_escape_string ( resource $link , string $source_string ) : resource
ingres_execute ( resource $result [, array $params [, string $types ]] ) : resource
ingres_fetch_array ( resource $result [, int $result_type ] ) : resource
ingres_fetch_assoc ( resource $result ) : resource
ingres_fetch_object ( resource $result [, int $result_type ] ) : resource
ingres_fetch_proc_return ( resource $result ) : resource
ingres_fetch_row ( resource $result ) : resource
ingres_field_length ( resource $result , int $index ) : resource
ingres_field_name ( resource $result , int $index ) : resource
ingres_field_nullable ( resource $result , int $index ) : resource
ingres_field_precision ( resource $result , int $index ) : resource
ingres_field_scale ( resource $result , int $index ) : resource
ingres_field_type ( resource $result , int $index ) : resource
ingres_free_result ( resource $result ) : resource
ingres_next_error ([ resource $link ] ) : resource
ingres_num_fields ( resource $result ) : resource
ingres_num_rows ( resource $result ) : resource
ingres_pconnect ([ string $database [, string $username [, string $password [, array $options ]]]] ) : string
ingres_prepare ( resource $link , string $query ) : resource
ingres_query ( resource $link , string $query [, array $params [, string $types ]] ) : resource
ingres_result_seek ( resource $result , int $position ) : resource
ingres_rollback ( resource $link ) : resource
ingres_set_environment ( resource $link , array $options ) : resource
ingres_unbuffered_query ( resource $link , string $query [, array $params [, string $types ]] ) : resource
ini_alter ( string $varname , string $newvalue ) : string
ini_get ( string $varname ) : string
ini_get_all ([ string $extension [, bool $details = TRUE ]] ) : string
ini_restore ( string $varname ) : string
ini_set ( string $varname , string $newvalue ) : string
inotify_add_watch ( resource $inotify_instance , string $pathname , int $mask ) : resource
inotify_init ( void ) : resource
inotify_queue_len ( resource $inotify_instance ) : resource
inotify_read ( resource $inotify_instance ) : resource
inotify_rm_watch ( resource $inotify_instance , int $watch_descriptor ) : resource
intdiv ( int $dividend , int $divisor ) : int
interface_exists ( string $interface_name [, bool $autoload = TRUE ] ) : string
intl_error_name ( int $error_code ) : int
intl_get_error_code ( void ) : int
intl_get_error_message ( void ) : string
intl_is_failure ( int $error_code ) : int
intval ( mixed $var [, int $base = 10 ] ) : mixed
in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] ) : mixed
ip2long ( string $ip_address ) : string
iptcembed ( string $iptcdata , string $jpeg_file_name [, int $spool = 0 ] ) : string
iptcparse ( string $iptcblock ) : string
isset ( mixed $var [, mixed $... ] ) : mixed
is_a ( mixed $object , string $class_name [, bool $allow_string = FALSE ] ) : mixed
is_array ( mixed $var ) : mixed
is_bool ( mixed $var ) : mixed
is_callable ( mixed $var [, bool $syntax_only = FALSE [, string &$callable_name ]] ) : mixed
is_countable ( mixed $var ) : mixed
is_dir ( string $filename ) : string
is_double ( mixed $var ) : mixed
is_executable ( string $filename ) : string
is_file ( string $filename ) : string
is_finite ( float $val ) : float
is_float ( mixed $var ) : mixed
is_infinite ( float $val ) : float
is_int ( mixed $var ) : mixed
is_integer ( mixed $var ) : mixed
is_iterable ( mixed $var ) : mixed
is_link ( string $filename ) : string
is_long ( mixed $var ) : mixed
is_nan ( float $val ) : float
is_null ( mixed $var ) : mixed
is_numeric ( mixed $var ) : mixed
is_object ( mixed $var ) : mixed
is_readable ( string $filename ) : string
is_real ( mixed $var ) : mixed
is_resource ( mixed $var ) : mixed
is_scalar ( mixed $var ) : mixed
is_soap_fault ( mixed $object ) : mixed
is_string ( mixed $var ) : mixed
is_subclass_of ( mixed $object , string $class_name [, bool $allow_string = TRUE ] ) : mixed
is_tainted ( string $string ) : string
is_uploaded_file ( string $filename ) : string
is_writable ( string $filename ) : string
is_writeable ( string $filename ) : string
iterator_apply ( Traversable $iterator , callable $function [, array $args = NULL ] ) : Traversable
iterator_count ( Traversable $iterator ) : Traversable
iterator_to_array ( Traversable $iterator [, bool $use_keys = TRUE ] ) : Traversable
jddayofweek ( int $julianday [, int $mode = CAL_DOW_DAYNO ] ) : int
jdmonthname ( int $julianday , int $mode ) : int
jdtofrench ( int $juliandaycount ) : int
jdtogregorian ( int $julianday ) : int
jdtojewish ( int $juliandaycount [, bool $hebrew = FALSE [, int $fl = 0 ]] ) : int
jdtojulian ( int $julianday ) : int
jdtounix ( int $jday ) : int
jewishtojd ( int $month , int $day , int $year ) : int
join ( string $glue , array $pieces ) : string [:OR:] ( array $pieces ) : string
jpeg2wbmp ( string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold ) : string
json_decode ( string $json [, bool $assoc = FALSE [, int $depth = 512 [, int $options = 0 ]]] ) : string
json_encode ( mixed $value [, int $options = 0 [, int $depth = 512 ]] ) : mixed
json_last_error ( void ) : int
json_last_error_msg ( void ) : string
judy_type ( Judy $array ) : Judy
judy_version ( void ) : string
juliantojd ( int $month , int $day , int $year ) : int
kadm5_chpass_principal ( resource $handle , string $principal , string $password ) : resource
kadm5_create_principal ( resource $handle , string $principal [, string $password [, array $options ]] ) : resource
kadm5_delete_principal ( resource $handle , string $principal ) : resource
kadm5_destroy ( resource $handle ) : resource
kadm5_flush ( resource $handle ) : resource
kadm5_get_policies ( resource $handle ) : resource
kadm5_get_principal ( resource $handle , string $principal ) : resource
kadm5_get_principals ( resource $handle ) : resource
kadm5_init_with_password ( string $admin_server , string $realm , string $principal , string $password ) : string
kadm5_modify_principal ( resource $handle , string $principal , array $options ) : resource
key ( array $array ) : array
key_exists ( mixed $key , array $array ) : mixed
krsort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) : array
ksort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) : array
lcfirst ( string $str ) : string
lcg_value ( void ) : float
lchgrp ( string $filename , mixed $group ) : string
lchown ( string $filename , mixed $user ) : string
ldap_8859_to_t61 ( string $value ) : string
ldap_add ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_add_ext ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_bind ( resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]] ) : resource
ldap_bind_ext ( resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]] ) : resource
ldap_close ( resource $link_identifier ) : resource
ldap_compare ( resource $link_identifier , string $dn , string $attribute , string $value [, array $serverctrls = array() ] ) : resource
ldap_connect ([ string $host = NULL [, int $port = 389 ]] ) : string
ldap_control_paged_result ( resource $link , int $pagesize [, bool $iscritical = FALSE [, string $cookie = "" ]] ) : resource
ldap_control_paged_result_response ( resource $link , resource $result [, string &$cookie [, int &$estimated ]] ) : resource
ldap_count_entries ( resource $link_identifier , resource $result_identifier ) : resource
ldap_delete ( resource $link_identifier , string $dn [, array $serverctrls = array() ] ) : resource
ldap_delete_ext ( resource $link_identifier , string $dn [, array $serverctrls = array() ] ) : resource
ldap_dn2ufn ( string $dn ) : string
ldap_err2str ( int $errno ) : int
ldap_errno ( resource $link_identifier ) : resource
ldap_error ( resource $link_identifier ) : resource
ldap_escape ( string $value [, string $ignore = "" [, int $flags = 0 ]] ) : string
ldap_exop ( resource $link , string $reqoid [, string $reqdata = NULL [, array $serverctrls = NULL [, string &$retdata [, string &$retoid ]]]] ) : resource
ldap_exop_passwd ( resource $link [, string $user = "" [, string $oldpw = "" [, string $newpw = "" [, array &$serverctrls ]]]] ) : resource
ldap_exop_refresh ( resource $link , string $dn , int $ttl ) : resource
ldap_exop_whoami ( resource $link ) : resource
ldap_explode_dn ( string $dn , int $with_attrib ) : string
ldap_first_attribute ( resource $link_identifier , resource $result_entry_identifier ) : resource
ldap_first_entry ( resource $link_identifier , resource $result_identifier ) : resource
ldap_first_reference ( resource $link , resource $result ) : resource
ldap_free_result ( resource $result_identifier ) : resource
ldap_get_attributes ( resource $link_identifier , resource $result_entry_identifier ) : resource
ldap_get_dn ( resource $link_identifier , resource $result_entry_identifier ) : resource
ldap_get_entries ( resource $link_identifier , resource $result_identifier ) : resource
ldap_get_option ( resource $link_identifier , int $option , mixed &$retval ) : resource
ldap_get_values ( resource $link_identifier , resource $result_entry_identifier , string $attribute ) : resource
ldap_get_values_len ( resource $link_identifier , resource $result_entry_identifier , string $attribute ) : resource
ldap_list ( resource $link_identifier , string $base_dn , string $filter [, array $attributes = array("*") [, int $attrsonly = 0 [, int $sizelimit = -1 [, int $timelimit = -1 [, int $deref = LDAP_DEREF_NEVER [, array $serverctrls = array() ]]]]]] ) : resource
ldap_modify ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_modify_batch ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_mod_add ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_mod_add_ext ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_mod_del ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_mod_del_ext ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_mod_replace ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_mod_replace_ext ( resource $link_identifier , string $dn , array $entry [, array $serverctrls = array() ] ) : resource
ldap_next_attribute ( resource $link_identifier , resource $result_entry_identifier ) : resource
ldap_next_entry ( resource $link_identifier , resource $result_entry_identifier ) : resource
ldap_next_reference ( resource $link , resource $entry ) : resource
ldap_parse_exop ( resource $link , resource $result [, string &$retdata [, string &$retoid ]] ) : resource
ldap_parse_reference ( resource $link , resource $entry , array &$referrals ) : resource
ldap_parse_result ( resource $link , resource $result , int &$errcode [, string &$matcheddn [, string &$errmsg [, array &$referrals [, array &$serverctrls ]]]] ) : resource
ldap_read ( resource $link_identifier , string $base_dn , string $filter [, array $attributes = array("*") [, int $attrsonly = 0 [, int $sizelimit = -1 [, int $timelimit = -1 [, int $deref = LDAP_DEREF_NEVER [, array $serverctrls = array() ]]]]]] ) : resource
ldap_rename ( resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn [, array $serverctrls = array() ] ) : resource
ldap_rename_ext ( resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn [, array $serverctrls = array() ] ) : resource
ldap_sasl_bind ( resource $link [, string $binddn = NULL [, string $password = NULL [, string $sasl_mech = NULL [, string $sasl_realm = NULL [, string $sasl_authc_id = NULL [, string $sasl_authz_id = NULL [, string $props = NULL ]]]]]]] ) : resource
ldap_search ( resource $link_identifier , string $base_dn , string $filter [, array $attributes = array("*") [, int $attrsonly = 0 [, int $sizelimit = -1 [, int $timelimit = -1 [, int $deref = LDAP_DEREF_NEVER [, array $serverctrls = array() ]]]]]] ) : resource
ldap_set_option ( resource $link_identifier , int $option , mixed $newval ) : resource
ldap_set_rebind_proc ( resource $link , callable $callback ) : resource
ldap_sort ( resource $link , resource $result , string $sortfilter ) : resource
ldap_start_tls ( resource $link ) : resource
ldap_t61_to_8859 ( string $value ) : string
ldap_unbind ( resource $link_identifier ) : resource
levenshtein ( string $str1 , string $str2 ) : string [:OR:] ( string $str1 , string $str2 , int $cost_ins , int $cost_rep , int $cost_del ) : string
libxml_clear_errors ( void ) : void
libxml_disable_entity_loader ([ bool $disable = TRUE ] ) : bool
libxml_get_errors ( void ) : array
libxml_get_last_error ( void ) : LibXMLError
libxml_set_external_entity_loader ( callable $resolver_function ) : callable
libxml_set_streams_context ( resource $streams_context ) : resource
libxml_use_internal_errors ([ bool $use_errors = FALSE ] ) : bool
link ( string $target , string $link ) : string
linkinfo ( string $path ) : string
list ( mixed $var1 [, mixed $... ] ) : mixed
localeconv ( void ) : array
localtime ([ int $timestamp = time() [, bool $is_associative = FALSE ]] ) : int
log ( float $arg [, float $base = M_E ] ) : float
log10 ( float $arg ) : float
log1p ( float $number ) : float
log_cmd_delete ( array $server , array $writeOptions , array $deleteOptions , array $protocolOptions ) : array
log_cmd_insert ( array $server , array $document , array $writeOptions , array $protocolOptions ) : array
log_cmd_update ( array $server , array $writeOptions , array $updateOptions , array $protocolOptions ) : array
log_getmore ( array $server , array $info ) : array
log_killcursor ( array $server , array $info ) : array
log_reply ( array $server , array $messageHeaders , array $operationHeaders ) : array
log_write_batch ( array $server , array $writeOptions , array $batch , array $protocolOptions ) : array
long2ip ( int $proper_address ) : int
lstat ( string $filename ) : string
ltrim ( string $str [, string $character_mask ] ) : string
lzf_compress ( string $data ) : string
lzf_decompress ( string $data ) : string
lzf_optimized_for ( void ) : int
magic_quotes_runtime ( bool $new_setting ) : bool
mail ( string $to , string $subject , string $message [, mixed $additional_headers [, string $additional_parameters ]] ) : string
mailparse_determine_best_xfer_encoding ( resource $fp ) : resource
mailparse_msg_create ( void ) : resource
mailparse_msg_extract_part ( resource $mimemail , string $msgbody [, callable $callbackfunc ] ) : resource
mailparse_msg_extract_part_file ( resource $mimemail , mixed $filename [, callable $callbackfunc ] ) : resource
mailparse_msg_extract_whole_part_file ( resource $mimemail , string $filename [, callable $callbackfunc ] ) : resource
mailparse_msg_free ( resource $mimemail ) : resource
mailparse_msg_get_part ( resource $mimemail , string $mimesection ) : resource
mailparse_msg_get_part_data ( resource $mimemail ) : resource
mailparse_msg_get_structure ( resource $mimemail ) : resource
mailparse_msg_parse ( resource $mimemail , string $data ) : resource
mailparse_msg_parse_file ( string $filename ) : string
mailparse_rfc822_parse_addresses ( string $addresses ) : string
mailparse_stream_encode ( resource $sourcefp , resource $destfp , string $encoding ) : resource
mailparse_uudecode_all ( resource $fp ) : resource
max ( array $values ) : array [:OR:] ( mixed $value1 [, mixed $... ] ) : array
maxdb_affected_rows ( resource $link ) : resource
maxdb_autocommit ( resource $link , bool $mode ) : resource
maxdb_bind_param ( resource $stmt , string $types , mixed &$var1 [, mixed &$... ] ) : resource [:OR:] ( resource $stmt , string $types , array &$var ) : resource
maxdb_bind_result ( resource $stmt , mixed &$var1 [, mixed &$... ] ) : resource
maxdb_change_user ( resource $link , string $user , string $password , string $database ) : resource
maxdb_character_set_name ( resource $link ) : resource
maxdb_client_encoding ( resource $link ) : resource
maxdb_close ( resource $link ) : resource
maxdb_close_long_data ( resource $stmt , int $param_nr ) : resource
maxdb_commit ( resource $link ) : resource
maxdb_connect ([ string $host [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] ) : string
maxdb_connect_errno ( void ) : int
maxdb_connect_error ( void ) : string
maxdb_data_seek ( resource $result , int $offset ) : resource
maxdb_debug ( string $debug ) : string
maxdb_disable_reads_from_master ( resource $link ) : resource
maxdb_disable_rpl_parse ( resource $link ) : resource
maxdb_dump_debug_info ( resource $link ) : resource
maxdb_embedded_connect ([ string $dbname ] ) : string
maxdb_enable_reads_from_master ( resource $link ) : resource
maxdb_enable_rpl_parse ( resource $link ) : resource
maxdb_errno ( resource $link ) : resource
maxdb_error ( resource $link ) : resource
maxdb_escape_string ( resource $link , string $escapestr ) : resource
maxdb_execute ( resource $stmt ) : resource
maxdb_fetch ( resource $stmt ) : resource
maxdb_fetch_array ( resource $result [, int $resulttype ] ) : resource
maxdb_fetch_assoc ( resource $result ) : resource
maxdb_fetch_field ( resource $result ) : resource
maxdb_fetch_fields ( resource $result ) : resource
maxdb_fetch_field_direct ( resource $result , int $fieldnr ) : resource
maxdb_fetch_lengths ( resource $result ) : resource
maxdb_fetch_object ( object $result ) : object
maxdb_fetch_row ( resource $result ) : resource
maxdb_field_count ( resource $link ) : resource
maxdb_field_seek ( resource $result , int $fieldnr ) : resource
maxdb_field_tell ( resource $result ) : resource
maxdb_free_result ( resource $result ) : resource
maxdb_get_client_info ( void ) : string
maxdb_get_client_version ( void ) : int
maxdb_get_host_info ( resource $link ) : resource
maxdb_get_metadata ( resource $stmt ) : resource
maxdb_get_proto_info ( resource $link ) : resource
maxdb_get_server_info ( resource $link ) : resource
maxdb_get_server_version ( resource $link ) : resource
maxdb_info ( resource $link ) : resource
maxdb_init ( void ) : resource
maxdb_insert_id ( resource $link ) : resource
maxdb_kill ( resource $link , int $processid ) : resource
maxdb_master_query ( resource $link , string $query ) : resource
maxdb_more_results ( resource $link ) : resource
maxdb_multi_query ( resource $link , string $query ) : resource
maxdb_next_result ( resource $link ) : resource
maxdb_num_fields ( resource $result ) : resource
maxdb_num_rows ( resource $result ) : resource
maxdb_options ( resource $link , int $option , mixed $value ) : resource
maxdb_param_count ( resource $stmt ) : resource
maxdb_ping ( resource $link ) : resource
maxdb_prepare ( resource $link , string $query ) : resource
maxdb_query ( resource $link , string $query [, int $resultmode ] ) : resource
maxdb_real_connect ( resource $link [, string $hostname [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] ) : resource
maxdb_real_escape_string ( resource $link , string $escapestr ) : resource
maxdb_real_query ( resource $link , string $query ) : resource
maxdb_report ( int $flags ) : int
maxdb_rollback ( resource $link ) : resource
maxdb_rpl_parse_enabled ( resource $link ) : resource
maxdb_rpl_probe ( resource $link ) : resource
maxdb_rpl_query_type ( resource $link ) : resource
maxdb_select_db ( resource $link , string $dbname ) : resource
maxdb_send_long_data ( resource $stmt , int $param_nr , string $data ) : resource
maxdb_send_query ( resource $link , string $query ) : resource
maxdb_server_end ( void ) : void
maxdb_server_init ([ array $server [, array $groups ]] ) : array
maxdb_set_opt ( resource $link , int $option , mixed $value ) : resource
maxdb_sqlstate ( resource $link ) : resource
maxdb_ssl_set ( resource $link , string $key , string $cert , string $ca , string $capath , string $cipher ) : resource
maxdb_stat ( resource $link ) : resource
maxdb_stmt_affected_rows ( resource $stmt ) : resource
maxdb_stmt_bind_param ( resource $stmt , string $types , mixed &$var1 [, mixed &$... ] ) : resource [:OR:] ( resource $stmt , string $types , array &$var ) : resource
maxdb_stmt_bind_result ( resource $stmt , mixed &$var1 [, mixed &$... ] ) : resource
maxdb_stmt_close ( resource $stmt ) : resource
maxdb_stmt_close_long_data ( resource $stmt , int $param_nr ) : resource
maxdb_stmt_data_seek ( resource $statement , int $offset ) : resource
maxdb_stmt_errno ( resource $stmt ) : resource
maxdb_stmt_error ( resource $stmt ) : resource
maxdb_stmt_execute ( resource $stmt ) : resource
maxdb_stmt_fetch ( resource $stmt ) : resource
maxdb_stmt_free_result ( resource $stmt ) : resource
maxdb_stmt_init ( resource $link ) : resource
maxdb_stmt_num_rows ( resource $stmt ) : resource
maxdb_stmt_param_count ( resource $stmt ) : resource
maxdb_stmt_prepare ( resource $stmt , string $query ) : resource
maxdb_stmt_reset ( resource $stmt ) : resource
maxdb_stmt_result_metadata ( resource $stmt ) : resource
maxdb_stmt_send_long_data ( resource $stmt , int $param_nr , string $data ) : resource
maxdb_stmt_sqlstate ( resource $stmt ) : resource
maxdb_stmt_store_result ( resource $stmt ) : resource
maxdb_store_result ( resource $link ) : resource
maxdb_thread_id ( resource $link ) : resource
maxdb_thread_safe ( void ) : bool
maxdb_use_result ( resource $link ) : resource
maxdb_warning_count ( resource $link ) : resource
mb_check_encoding ([ string $var = NULL [, string $encoding = mb_internal_encoding() ]] ) : string
mb_chr ( int $cp [, string $encoding ] ) : int
mb_convert_case ( string $str , int $mode [, string $encoding = mb_internal_encoding() ] ) : string
mb_convert_encoding ( string $str , string $to_encoding [, mixed $from_encoding = mb_internal_encoding() ] ) : string
mb_convert_kana ( string $str [, string $option = "KV" [, string $encoding = mb_internal_encoding() ]] ) : string
mb_convert_variables ( string $to_encoding , mixed $from_encoding , mixed &$vars [, mixed &$... ] ) : string
mb_decode_mimeheader ( string $str ) : string
mb_decode_numericentity ( string $str , array $convmap [, string $encoding = mb_internal_encoding() [, bool $is_hex = FALSE ]] ) : string
mb_detect_encoding ( string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = FALSE ]] ) : string
mb_detect_order ([ mixed $encoding_list = mb_detect_order() ] ) : mixed
mb_encode_mimeheader ( string $str [, string $charset = determined by mb_language() [, string $transfer_encoding = "B" [, string $linefeed = "\r\n" [, int $indent = 0 ]]]] ) : string
mb_encode_numericentity ( string $str , array $convmap [, string $encoding = mb_internal_encoding() [, bool $is_hex = FALSE ]] ) : string
mb_encoding_aliases ( string $encoding ) : string
mb_ereg ( string $pattern , string $string [, array &$regs ] ) : string
mb_eregi ( string $pattern , string $string [, array &$regs ] ) : string
mb_eregi_replace ( string $pattern , string $replace , string $string [, string $option = "msri" ] ) : string
mb_ereg_match ( string $pattern , string $string [, string $option = "msr" ] ) : string
mb_ereg_replace ( string $pattern , string $replacement , string $string [, string $option = "msr" ] ) : string
mb_ereg_replace_callback ( string $pattern , callable $callback , string $string [, string $option = "msr" ] ) : string
mb_ereg_search ([ string $pattern [, string $option = "ms" ]] ) : string
mb_ereg_search_getpos ( void ) : int
mb_ereg_search_getregs ( void ) : array
mb_ereg_search_init ( string $string [, string $pattern [, string $option = "msr" ]] ) : string
mb_ereg_search_pos ([ string $pattern [, string $option = "ms" ]] ) : string
mb_ereg_search_regs ([ string $pattern [, string $option = "ms" ]] ) : string
mb_ereg_search_setpos ( int $position ) : int
mb_get_info ([ string $type = "all" ] ) : string
mb_http_input ([ string $type = "" ] ) : string
mb_http_output ([ string $encoding = mb_http_output() ] ) : string
mb_internal_encoding ([ string $encoding = mb_internal_encoding() ] ) : string
mb_language ([ string $language = mb_language() ] ) : string
mb_list_encodings ( void ) : array
mb_ord ( string $str [, string $encoding ] ) : string
mb_output_handler ( string $contents , int $status ) : string
mb_parse_str ( string $encoded_string [, array &$result ] ) : string
mb_preferred_mime_name ( string $encoding ) : string
mb_regex_encoding ([ string $encoding = mb_regex_encoding() ] ) : string
mb_regex_set_options ([ string $options = mb_regex_set_options() ] ) : string
mb_scrub ( string $str [, string $encoding ] ) : string
mb_send_mail ( string $to , string $subject , string $message [, mixed $additional_headers = NULL [, string $additional_parameter = NULL ]] ) : string
mb_split ( string $pattern , string $string [, int $limit = -1 ] ) : string
mb_strcut ( string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strimwidth ( string $str , int $start , int $width [, string $trimmarker = "" [, string $encoding = mb_internal_encoding() ]] ) : string
mb_stripos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] ) : string
mb_stristr ( string $haystack , string $needle [, bool $before_needle = FALSE [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strlen ( string $str [, string $encoding = mb_internal_encoding() ] ) : string
mb_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strrchr ( string $haystack , string $needle [, bool $part = FALSE [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strrichr ( string $haystack , string $needle [, bool $part = FALSE [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strripos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strrpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strstr ( string $haystack , string $needle [, bool $before_needle = FALSE [, string $encoding = mb_internal_encoding() ]] ) : string
mb_strtolower ( string $str [, string $encoding = mb_internal_encoding() ] ) : string
mb_strtoupper ( string $str [, string $encoding = mb_internal_encoding() ] ) : string
mb_strwidth ( string $str [, string $encoding = mb_internal_encoding() ] ) : string
mb_substitute_character ([ mixed $substchar = mb_substitute_character() ] ) : mixed
mb_substr ( string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding() ]] ) : string
mb_substr_count ( string $haystack , string $needle [, string $encoding = mb_internal_encoding() ] ) : string
mcrypt_cbc ( int $cipher , string $key , string $data , int $mode [, string $iv ] ) : int [:OR:] ( string $cipher , string $key , string $data , int $mode [, string $iv ] ) : int
mcrypt_cfb ( int $cipher , string $key , string $data , int $mode , string $iv ) : int [:OR:] ( string $cipher , string $key , string $data , int $mode [, string $iv ] ) : int
mcrypt_create_iv ( int $size [, int $source = MCRYPT_DEV_URANDOM ] ) : int
mcrypt_decrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] ) : string
mcrypt_ecb ( int $cipher , string $key , string $data , int $mode ) : int [:OR:] ( string $cipher , string $key , string $data , int $mode [, string $iv ] ) : int
mcrypt_encrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] ) : string
mcrypt_enc_get_algorithms_name ( resource $td ) : resource
mcrypt_enc_get_block_size ( resource $td ) : resource
mcrypt_enc_get_iv_size ( resource $td ) : resource
mcrypt_enc_get_key_size ( resource $td ) : resource
mcrypt_enc_get_modes_name ( resource $td ) : resource
mcrypt_enc_get_supported_key_sizes ( resource $td ) : resource
mcrypt_enc_is_block_algorithm ( resource $td ) : resource
mcrypt_enc_is_block_algorithm_mode ( resource $td ) : resource
mcrypt_enc_is_block_mode ( resource $td ) : resource
mcrypt_enc_self_test ( resource $td ) : resource
mcrypt_generic ( resource $td , string $data ) : resource
mcrypt_generic_deinit ( resource $td ) : resource
mcrypt_generic_end ( resource $td ) : resource
mcrypt_generic_init ( resource $td , string $key , string $iv ) : resource
mcrypt_get_block_size ( int $cipher ) : int [:OR:] ( string $cipher , string $mode ) : int
mcrypt_get_cipher_name ( int $cipher ) : int [:OR:] ( string $cipher ) : int
mcrypt_get_iv_size ( string $cipher , string $mode ) : string
mcrypt_get_key_size ( int $cipher ) : int [:OR:] ( string $cipher , string $mode ) : int
mcrypt_list_algorithms ([ string $lib_dir = ini_get("mcrypt.algorithms_dir") ] ) : string
mcrypt_list_modes ([ string $lib_dir = ini_get("mcrypt.modes_dir") ] ) : string
mcrypt_module_close ( resource $td ) : resource
mcrypt_module_get_algo_block_size ( string $algorithm [, string $lib_dir ] ) : string
mcrypt_module_get_algo_key_size ( string $algorithm [, string $lib_dir ] ) : string
mcrypt_module_get_supported_key_sizes ( string $algorithm [, string $lib_dir ] ) : string
mcrypt_module_is_block_algorithm ( string $algorithm [, string $lib_dir ] ) : string
mcrypt_module_is_block_algorithm_mode ( string $mode [, string $lib_dir ] ) : string
mcrypt_module_is_block_mode ( string $mode [, string $lib_dir ] ) : string
mcrypt_module_open ( string $algorithm , string $algorithm_directory , string $mode , string $mode_directory ) : string
mcrypt_module_self_test ( string $algorithm [, string $lib_dir ] ) : string
mcrypt_ofb ( int $cipher , string $key , string $data , int $mode , string $iv ) : int [:OR:] ( string $cipher , string $key , string $data , int $mode [, string $iv ] ) : int
md5 ( string $str [, bool $raw_output = FALSE ] ) : string
md5_file ( string $filename [, bool $raw_output = FALSE ] ) : string
mdecrypt_generic ( resource $td , string $data ) : resource
memcache_debug ( bool $on_off ) : bool
memory_get_peak_usage ([ bool $real_usage = FALSE ] ) : bool
memory_get_usage ([ bool $real_usage = FALSE ] ) : bool
metaphone ( string $str [, int $phonemes = 0 ] ) : string
method_exists ( mixed $object , string $method_name ) : mixed
mhash ( int $hash , string $data [, string $key ] ) : int
mhash_count ( void ) : int
mhash_get_block_size ( int $hash ) : int
mhash_get_hash_name ( int $hash ) : int
mhash_keygen_s2k ( int $hash , string $password , string $salt , int $bytes ) : int
microtime ([ bool $get_as_float = FALSE ] ) : bool
mime_content_type ( string $filename ) : string
min ( array $values ) : array [:OR:] ( mixed $value1 [, mixed $... ] ) : array
ming_keypress ( string $char ) : string
ming_setcubicthreshold ( int $threshold ) : int
ming_setscale ( float $scale ) : float
ming_setswfcompression ( int $level ) : int
ming_useconstants ( int $use ) : int
ming_useswfversion ( int $version ) : int
mkdir ( string $pathname [, int $mode = 0777 [, bool $recursive = FALSE [, resource $context ]]] ) : string
mktime ([ int $hour = date("H") [, int $minute = date("i") [, int $second = date("s") [, int $month = date("n") [, int $day = date("j") [, int $year = date("Y") [, int $is_dst = -1 ]]]]]]] ) : int
money_format ( string $format , float $number ) : string
move_uploaded_file ( string $filename , string $destination ) : string
mqseries_back ( resource $hconn , resource &$compCode , resource &$reason ) : resource
mqseries_begin ( resource $hconn , array $beginOptions , resource &$compCode , resource &$reason ) : resource
mqseries_close ( resource $hconn , resource $hobj , int $options , resource &$compCode , resource &$reason ) : resource
mqseries_cmit ( resource $hconn , resource &$compCode , resource &$reason ) : resource
mqseries_conn ( string $qManagerName , resource &$hconn , resource &$compCode , resource &$reason ) : string
mqseries_connx ( string $qManagerName , array &$connOptions , resource &$hconn , resource &$compCode , resource &$reason ) : string
mqseries_disc ( resource $hconn , resource &$compCode , resource &$reason ) : resource
mqseries_get ( resource $hConn , resource $hObj , array &$md , array &$gmo , int &$bufferLength , string &$msg , int &$data_length , resource &$compCode , resource &$reason ) : resource
mqseries_inq ( resource $hconn , resource $hobj , int $selectorCount , array $selectors , int $intAttrCount , resource &$intAttr , int $charAttrLength , resource &$charAttr , resource &$compCode , resource &$reason ) : resource
mqseries_open ( resource $hconn , array &$objDesc , int $option , resource &$hobj , resource &$compCode , resource &$reason ) : resource
mqseries_put ( resource $hConn , resource $hObj , array &$md , array &$pmo , string $message , resource &$compCode , resource &$reason ) : resource
mqseries_put1 ( resource $hconn , resource &$objDesc , resource &$msgDesc , resource &$pmo , string $buffer , resource &$compCode , resource &$reason ) : resource
mqseries_set ( resource $hConn , resource $hObj , int $selectorCount , array $selectors , int $intAttrCount , array $intAttrs , int $charAttrLength , array $charAttrs , resource &$compCode , resource &$reason ) : resource
mqseries_strerror ( int $reason ) : int
msession_connect ( string $host , string $port ) : string
msession_count ( void ) : int
msession_create ( string $session [, string $classname [, string $data ]] ) : string
msession_destroy ( string $name ) : string
msession_disconnect ( void ) : void
msession_find ( string $name , string $value ) : string
msession_get ( string $session , string $name , string $value ) : string
msession_get_array ( string $session ) : string
msession_get_data ( string $session ) : string
msession_inc ( string $session , string $name ) : string
msession_list ( void ) : array
msession_listvar ( string $name ) : string
msession_lock ( string $name ) : string
msession_plugin ( string $session , string $val [, string $param ] ) : string
msession_randstr ( int $param ) : int
msession_set ( string $session , string $name , string $value ) : string
msession_set_array ( string $session , array $tuples ) : string
msession_set_data ( string $session , string $value ) : string
msession_timeout ( string $session [, int $param ] ) : string
msession_uniq ( int $param [, string $classname [, string $data ]] ) : int
msession_unlock ( string $session , int $key ) : string
msg_get_queue ( int $key [, int $perms = 0666 ] ) : int
msg_queue_exists ( int $key ) : int
msg_receive ( resource $queue , int $desiredmsgtype , int &$msgtype , int $maxsize , mixed &$message [, bool $unserialize = TRUE [, int $flags = 0 [, int &$errorcode ]]] ) : resource
msg_remove_queue ( resource $queue ) : resource
msg_send ( resource $queue , int $msgtype , mixed $message [, bool $serialize = TRUE [, bool $blocking = TRUE [, int &$errorcode ]]] ) : resource
msg_set_queue ( resource $queue , array $data ) : resource
msg_stat_queue ( resource $queue ) : resource
msql ( string $database , string $query [, resource $link_identifier ] ) : string
msql_affected_rows ( resource $result ) : resource
msql_close ([ resource $link_identifier ] ) : resource
msql_connect ([ string $hostname ] ) : string
msql_createdb ( string $database_name [, resource $link_identifier ] ) : string
msql_create_db ( string $database_name [, resource $link_identifier ] ) : string
msql_data_seek ( resource $result , int $row_number ) : resource
msql_dbname ( resource $result , int $row [, mixed $field ] ) : resource
msql_db_query ( string $database , string $query [, resource $link_identifier ] ) : string
msql_drop_db ( string $database_name [, resource $link_identifier ] ) : string
msql_error ( void ) : string
msql_fetch_array ( resource $result [, int $result_type ] ) : resource
msql_fetch_field ( resource $result [, int $field_offset = 0 ] ) : resource
msql_fetch_object ( resource $result ) : resource
msql_fetch_row ( resource $result ) : resource
msql_fieldflags ( resource $result , int $field_offset ) : resource
msql_fieldlen ( resource $result , int $field_offset ) : resource
msql_fieldname ( resource $result , int $field_offset ) : resource
msql_fieldtable ( resource $result , int $field_offset ) : resource
msql_fieldtype ( resource $result , int $field_offset ) : resource
msql_field_flags ( resource $result , int $field_offset ) : resource
msql_field_len ( resource $result , int $field_offset ) : resource
msql_field_name ( resource $result , int $field_offset ) : resource
msql_field_seek ( resource $result , int $field_offset ) : resource
msql_field_table ( resource $result , int $field_offset ) : resource
msql_field_type ( resource $result , int $field_offset ) : resource
msql_free_result ( resource $result ) : resource
msql_list_dbs ([ resource $link_identifier ] ) : resource
msql_list_fields ( string $database , string $tablename [, resource $link_identifier ] ) : string
msql_list_tables ( string $database [, resource $link_identifier ] ) : string
msql_numfields ( resource $result ) : resource
msql_numrows ( resource $query_identifier ) : resource
msql_num_fields ( resource $result ) : resource
msql_num_rows ( resource $query_identifier ) : resource
msql_pconnect ([ string $hostname ] ) : string
msql_query ( string $query [, resource $link_identifier ] ) : string
msql_regcase ( string $string ) : string
msql_result ( resource $result , int $row [, mixed $field ] ) : resource
msql_select_db ( string $database_name [, resource $link_identifier ] ) : string
msql_tablename ( resource $result , int $row [, mixed $field ] ) : resource
mssql_bind ( resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = FALSE [, bool $is_null = FALSE [, int $maxlen = -1 ]]] ) : resource
mssql_close ([ resource $link_identifier ] ) : resource
mssql_connect ([ string $servername [, string $username [, string $password [, bool $new_link = FALSE ]]]] ) : string
mssql_data_seek ( resource $result_identifier , int $row_number ) : resource
mssql_execute ( resource $stmt [, bool $skip_results = FALSE ] ) : resource
mssql_fetch_array ( resource $result [, int $result_type = MSSQL_BOTH ] ) : resource
mssql_fetch_assoc ( resource $result_id ) : resource
mssql_fetch_batch ( resource $result ) : resource
mssql_fetch_field ( resource $result [, int $field_offset = -1 ] ) : resource
mssql_fetch_object ( resource $result ) : resource
mssql_fetch_row ( resource $result ) : resource
mssql_field_length ( resource $result [, int $offset = -1 ] ) : resource
mssql_field_name ( resource $result [, int $offset = -1 ] ) : resource
mssql_field_seek ( resource $result , int $field_offset ) : resource
mssql_field_type ( resource $result [, int $offset = -1 ] ) : resource
mssql_free_result ( resource $result ) : resource
mssql_free_statement ( resource $stmt ) : resource
mssql_get_last_message ( void ) : string
mssql_guid_string ( string $binary [, bool $short_format = FALSE ] ) : string
mssql_init ( string $sp_name [, resource $link_identifier ] ) : string
mssql_min_error_severity ( int $severity ) : int
mssql_min_message_severity ( int $severity ) : int
mssql_next_result ( resource $result_id ) : resource
mssql_num_fields ( resource $result ) : resource
mssql_num_rows ( resource $result ) : resource
mssql_pconnect ([ string $servername [, string $username [, string $password [, bool $new_link = FALSE ]]]] ) : string
mssql_query ( string $query [, resource $link_identifier [, int $batch_size = 0 ]] ) : string
mssql_result ( resource $result , int $row , mixed $field ) : resource
mssql_rows_affected ( resource $link_identifier ) : resource
mssql_select_db ( string $database_name [, resource $link_identifier ] ) : string
mt_getrandmax ( void ) : int
mt_rand ( void ) : int [:OR:] ( int $min , int $max ) : int
mt_srand ([ int $seed [, int $mode = MT_RAND_MT19937 ]] ) : int
mysqli_bind_param ( ) : bool
mysqli_bind_result ( ) : bool
mysqli_client_encoding ( ) : string
mysqli_connect ([ string $host = ini_get("mysqli.default_host") [, string $username = ini_get("mysqli.default_user") [, string $passwd = ini_get("mysqli.default_pw") [, string $dbname = "" [, int $port = ini_get("mysqli.default_port") [, string $socket = ini_get("mysqli.default_socket") ]]]]]] ) : mysqli
mysqli_disable_reads_from_master ( mysqli $link ) : void
mysqli_disable_rpl_parse ( mysqli $link ) : mysqli
mysqli_enable_reads_from_master ( mysqli $link ) : mysqli
mysqli_enable_rpl_parse ( mysqli $link ) : mysqli
mysqli_escape_string ( ) : string
mysqli_execute ( ) : bool
mysqli_fetch ( ) : bool
mysqli_get_cache_stats ( void ) : array
mysqli_get_client_stats ( void ) : array
mysqli_get_links_stats ( void ) : array
mysqli_get_metadata ( ) : mysqli_result
mysqli_master_query ( mysqli $link , string $query ) : mysqli
mysqli_param_count ( void ) 
mysqli_report ( void ) 
mysqli_rpl_parse_enabled ( mysqli $link ) : mysqli
mysqli_rpl_probe ( mysqli $link ) : mysqli
mysqli_send_long_data ( ) : bool
mysqli_set_opt ( ) : bool
mysqli_slave_query ( mysqli $link , string $query ) : mysqli
mysqli_query ( ) : mixed
mysqlnd_memcache_get_config ( mixed $connection ) : mixed
mysqlnd_memcache_set ( mixed $mysql_connection [, Memcached $memcache_connection [, string $pattern [, callback $callback ]]] ) : mixed
mysqlnd_ms_dump_servers ( mixed $connection ) : mixed
mysqlnd_ms_fabric_select_global ( mixed $connection , mixed $table_name ) : mixed
mysqlnd_ms_fabric_select_shard ( mixed $connection , mixed $table_name , mixed $shard_key ) : mixed
mysqlnd_ms_get_last_gtid ( mixed $connection ) : mixed
mysqlnd_ms_get_last_used_connection ( mixed $connection ) : mixed
mysqlnd_ms_get_stats ( void ) : array
mysqlnd_ms_match_wild ( string $table_name , string $wildcard ) : string
mysqlnd_ms_query_is_select ( string $query ) : string
mysqlnd_ms_set_qos ( mixed $connection , int $service_level [, int $service_level_option [, mixed $option_value ]] ) : mixed
mysqlnd_ms_set_user_pick_server ( string $function ) : string
mysqlnd_ms_xa_begin ( mixed $connection , string $gtrid [, int $timeout ] ) : mixed
mysqlnd_ms_xa_commit ( mixed $connection , string $gtrid ) : mixed
mysqlnd_ms_xa_gc ( mixed $connection [, string $gtrid [, bool $ignore_max_retries ]] ) : mixed
mysqlnd_ms_xa_rollback ( mixed $connection , string $gtrid ) : mixed
mysqlnd_qc_clear_cache ( void ) : bool
mysqlnd_qc_get_available_handlers ( void ) : array
mysqlnd_qc_get_cache_info ( void ) : array
mysqlnd_qc_get_core_stats ( void ) : array
mysqlnd_qc_get_normalized_query_trace_log ( void ) : array
mysqlnd_qc_get_query_trace_log ( void ) : array
mysqlnd_qc_set_cache_condition ( int $condition_type , mixed $condition , mixed $condition_option ) : int
mysqlnd_qc_set_is_select ( string $callback ) : string
mysqlnd_qc_set_storage_handler ( string $handler ) : string
mysqlnd_qc_set_user_handlers ( string $get_hash , string $find_query_in_cache , string $return_to_cache , string $add_query_to_cache_if_not_exists , string $query_is_select , string $update_query_run_time_stats , string $get_stats , string $clear_cache ) : string
mysqlnd_uh_convert_to_mysqlnd ( mysqli &$mysql_connection ) : mysqli
mysqlnd_uh_set_connection_proxy ( MysqlndUhConnection &$connection_proxy [, mysqli &$mysqli_connection ] ) : MysqlndUhConnection
mysqlnd_uh_set_statement_proxy ( MysqlndUhStatement &$statement_proxy ) : MysqlndUhStatement
mysql_affected_rows ([ resource $link_identifier = NULL ] ) : resource
mysql_client_encoding ([ resource $link_identifier = NULL ] ) : resource
mysql_close ([ resource $link_identifier = NULL ] ) : resource
mysql_connect ([ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get("mysql.default_password") [, bool $new_link = FALSE [, int $client_flags = 0 ]]]]] ) : string
mysql_create_db ( string $database_name [, resource $link_identifier = NULL ] ) : string
mysql_data_seek ( resource $result , int $row_number ) : resource
mysql_db_name ( resource $result , int $row [, mixed $field = NULL ] ) : resource
mysql_db_query ( string $database , string $query [, resource $link_identifier = NULL ] ) : string
mysql_drop_db ( string $database_name [, resource $link_identifier = NULL ] ) : string
mysql_errno ([ resource $link_identifier = NULL ] ) : resource
mysql_error ([ resource $link_identifier = NULL ] ) : resource
mysql_escape_string ( string $unescaped_string ) : string
mysql_fetch_array ( resource $result [, int $result_type = MYSQL_BOTH ] ) : resource
mysql_fetch_assoc ( resource $result ) : resource
mysql_fetch_field ( resource $result [, int $field_offset = 0 ] ) : resource
mysql_fetch_lengths ( resource $result ) : resource
mysql_fetch_object ( resource $result [, string $class_name [, array $params ]] ) : resource
mysql_fetch_row ( resource $result ) : resource
mysql_field_flags ( resource $result , int $field_offset ) : resource
mysql_field_len ( resource $result , int $field_offset ) : resource
mysql_field_name ( resource $result , int $field_offset ) : resource
mysql_field_seek ( resource $result , int $field_offset ) : resource
mysql_field_table ( resource $result , int $field_offset ) : resource
mysql_field_type ( resource $result , int $field_offset ) : resource
mysql_free_result ( resource $result ) : resource
mysql_get_client_info ( void ) : string
mysql_get_host_info ([ resource $link_identifier = NULL ] ) : resource
mysql_get_proto_info ([ resource $link_identifier = NULL ] ) : resource
mysql_get_server_info ([ resource $link_identifier = NULL ] ) : resource
mysql_info ([ resource $link_identifier = NULL ] ) : resource
mysql_insert_id ([ resource $link_identifier = NULL ] ) : resource
mysql_list_dbs ([ resource $link_identifier = NULL ] ) : resource
mysql_list_fields ( string $database_name , string $table_name [, resource $link_identifier = NULL ] ) : string
mysql_list_processes ([ resource $link_identifier = NULL ] ) : resource
mysql_list_tables ( string $database [, resource $link_identifier = NULL ] ) : string
mysql_num_fields ( resource $result ) : resource
mysql_num_rows ( resource $result ) : resource
mysql_pconnect ([ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get("mysql.default_password") [, int $client_flags = 0 ]]]] ) : string
mysql_ping ([ resource $link_identifier = NULL ] ) : resource
mysql_query ( string $query [, resource $link_identifier = NULL ] ) : string
mysql_real_escape_string ( string $unescaped_string [, resource $link_identifier = NULL ] ) : string
mysql_result ( resource $result , int $row [, mixed $field = 0 ] ) : resource
mysql_select_db ( string $database_name [, resource $link_identifier = NULL ] ) : string
mysql_set_charset ( string $charset [, resource $link_identifier = NULL ] ) : string
mysql_stat ([ resource $link_identifier = NULL ] ) : resource
mysql_tablename ( resource $result , int $i ) : resource
mysql_thread_id ([ resource $link_identifier = NULL ] ) : resource
mysql_unbuffered_query ( string $query [, resource $link_identifier = NULL ] ) : string
mysql_xdevapi\expression ( string $expression ) : string
mysql_xdevapi\getSession ( string $uri ) : string
m_checkstatus ( resource $conn , int $identifier ) : resource
m_completeauthorizations ( resource $conn , int &$array ) : resource
m_connect ( resource $conn ) : resource
m_connectionerror ( resource $conn ) : resource
m_deletetrans ( resource $conn , int $identifier ) : resource
m_destroyconn ( resource $conn ) : resource
m_destroyengine ( void ) : void
m_getcell ( resource $conn , int $identifier , string $column , int $row ) : resource
m_getcellbynum ( resource $conn , int $identifier , int $column , int $row ) : resource
m_getcommadelimited ( resource $conn , int $identifier ) : resource
m_getheader ( resource $conn , int $identifier , int $column_num ) : resource
m_initconn ( void ) : resource
m_initengine ( string $location ) : string
m_iscommadelimited ( resource $conn , int $identifier ) : resource
m_maxconntimeout ( resource $conn , int $secs ) : resource
m_monitor ( resource $conn ) : resource
m_numcolumns ( resource $conn , int $identifier ) : resource
m_numrows ( resource $conn , int $identifier ) : resource
m_parsecommadelimited ( resource $conn , int $identifier ) : resource
m_responsekeys ( resource $conn , int $identifier ) : resource
m_responseparam ( resource $conn , int $identifier , string $key ) : resource
m_returnstatus ( resource $conn , int $identifier ) : resource
m_setblocking ( resource $conn , int $tf ) : resource
m_setdropfile ( resource $conn , string $directory ) : resource
m_setip ( resource $conn , string $host , int $port ) : resource
m_setssl ( resource $conn , string $host , int $port ) : resource
m_setssl_cafile ( resource $conn , string $cafile ) : resource
m_setssl_files ( resource $conn , string $sslkeyfile , string $sslcertfile ) : resource
m_settimeout ( resource $conn , int $seconds ) : resource
m_sslcert_gen_hash ( string $filename ) : string
m_transactionssent ( resource $conn ) : resource
m_transinqueue ( resource $conn ) : resource
m_transkeyval ( resource $conn , int $identifier , string $key , string $value ) : resource
m_transnew ( resource $conn ) : resource
m_transsend ( resource $conn , int $identifier ) : resource
m_uwait ( int $microsecs ) : int
m_validateidentifier ( resource $conn , int $tf ) : resource
m_verifyconnection ( resource $conn , int $tf ) : resource
m_verifysslcert ( resource $conn , int $tf ) : resource
natcasesort ( array &$array ) : array
natsort ( array &$array ) : array
ncurses_addch ( int $ch ) : int
ncurses_addchnstr ( string $s , int $n ) : string
ncurses_addchstr ( string $s ) : string
ncurses_addnstr ( string $s , int $n ) : string
ncurses_addstr ( string $text ) : string
ncurses_assume_default_colors ( int $fg , int $bg ) : int
ncurses_attroff ( int $attributes ) : int
ncurses_attron ( int $attributes ) : int
ncurses_attrset ( int $attributes ) : int
ncurses_baudrate ( void ) : int
ncurses_beep ( void ) : int
ncurses_bkgd ( int $attrchar ) : int
ncurses_bkgdset ( int $attrchar ) : int
ncurses_border ( int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner ) : int
ncurses_bottom_panel ( resource $panel ) : resource
ncurses_can_change_color ( void ) : bool
ncurses_cbreak ( void ) : bool
ncurses_clear ( void ) : bool
ncurses_clrtobot ( void ) : bool
ncurses_clrtoeol ( void ) : bool
ncurses_color_content ( int $color , int &$r , int &$g , int &$b ) : int
ncurses_color_set ( int $pair ) : int
ncurses_curs_set ( int $visibility ) : int
ncurses_define_key ( string $definition , int $keycode ) : string
ncurses_def_prog_mode ( void ) : bool
ncurses_def_shell_mode ( void ) : bool
ncurses_delay_output ( int $milliseconds ) : int
ncurses_delch ( void ) : bool
ncurses_deleteln ( void ) : bool
ncurses_delwin ( resource $window ) : resource
ncurses_del_panel ( resource $panel ) : resource
ncurses_doupdate ( void ) : bool
ncurses_echo ( void ) : bool
ncurses_echochar ( int $character ) : int
ncurses_end ( void ) : int
ncurses_erase ( void ) : bool
ncurses_erasechar ( void ) : string
ncurses_filter ( void ) : void
ncurses_flash ( void ) : bool
ncurses_flushinp ( void ) : bool
ncurses_getch ( void ) : int
ncurses_getmaxyx ( resource $window , int &$y , int &$x ) : resource
ncurses_getmouse ( array &$mevent ) : array
ncurses_getyx ( resource $window , int &$y , int &$x ) : resource
ncurses_halfdelay ( int $tenth ) : int
ncurses_has_colors ( void ) : bool
ncurses_has_ic ( void ) : bool
ncurses_has_il ( void ) : bool
ncurses_has_key ( int $keycode ) : int
ncurses_hide_panel ( resource $panel ) : resource
ncurses_hline ( int $charattr , int $n ) : int
ncurses_inch ( void ) : string
ncurses_init ( void ) : void
ncurses_init_color ( int $color , int $r , int $g , int $b ) : int
ncurses_init_pair ( int $pair , int $fg , int $bg ) : int
ncurses_insch ( int $character ) : int
ncurses_insdelln ( int $count ) : int
ncurses_insertln ( void ) : int
ncurses_insstr ( string $text ) : string
ncurses_instr ( string &$buffer ) : string
ncurses_isendwin ( void ) : bool
ncurses_keyok ( int $keycode , bool $enable ) : int
ncurses_keypad ( resource $window , bool $bf ) : resource
ncurses_killchar ( void ) : string
ncurses_longname ( void ) : string
ncurses_meta ( resource $window , bool $8bit ) : resource
ncurses_mouseinterval ( int $milliseconds ) : int
ncurses_mousemask ( int $newmask , int &$oldmask ) : int
ncurses_mouse_trafo ( int &$y , int &$x , bool $toscreen ) : int
ncurses_move ( int $y , int $x ) : int
ncurses_move_panel ( resource $panel , int $startx , int $starty ) : resource
ncurses_mvaddch ( int $y , int $x , int $c ) : int
ncurses_mvaddchnstr ( int $y , int $x , string $s , int $n ) : int
ncurses_mvaddchstr ( int $y , int $x , string $s ) : int
ncurses_mvaddnstr ( int $y , int $x , string $s , int $n ) : int
ncurses_mvaddstr ( int $y , int $x , string $s ) : int
ncurses_mvcur ( int $old_y , int $old_x , int $new_y , int $new_x ) : int
ncurses_mvdelch ( int $y , int $x ) : int
ncurses_mvgetch ( int $y , int $x ) : int
ncurses_mvhline ( int $y , int $x , int $attrchar , int $n ) : int
ncurses_mvinch ( int $y , int $x ) : int
ncurses_mvvline ( int $y , int $x , int $attrchar , int $n ) : int
ncurses_mvwaddstr ( resource $window , int $y , int $x , string $text ) : resource
ncurses_napms ( int $milliseconds ) : int
ncurses_newpad ( int $rows , int $cols ) : int
ncurses_newwin ( int $rows , int $cols , int $y , int $x ) : int
ncurses_new_panel ( resource $window ) : resource
ncurses_nl ( void ) : bool
ncurses_nocbreak ( void ) : bool
ncurses_noecho ( void ) : bool
ncurses_nonl ( void ) : bool
ncurses_noqiflush ( void ) : void
ncurses_noraw ( void ) : bool
ncurses_pair_content ( int $pair , int &$f , int &$b ) : int
ncurses_panel_above ( resource $panel ) : resource
ncurses_panel_below ( resource $panel ) : resource
ncurses_panel_window ( resource $panel ) : resource
ncurses_pnoutrefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol ) : resource
ncurses_prefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol ) : resource
ncurses_putp ( string $text ) : string
ncurses_qiflush ( void ) : void
ncurses_raw ( void ) : bool
ncurses_refresh ( int $ch ) : int
ncurses_replace_panel ( resource $panel , resource $window ) : resource
ncurses_resetty ( void ) : bool
ncurses_reset_prog_mode ( void ) : int
ncurses_reset_shell_mode ( void ) : int
ncurses_savetty ( void ) : bool
ncurses_scrl ( int $count ) : int
ncurses_scr_dump ( string $filename ) : string
ncurses_scr_init ( string $filename ) : string
ncurses_scr_restore ( string $filename ) : string
ncurses_scr_set ( string $filename ) : string
ncurses_show_panel ( resource $panel ) : resource
ncurses_slk_attr ( void ) : int
ncurses_slk_attroff ( int $intarg ) : int
ncurses_slk_attron ( int $intarg ) : int
ncurses_slk_attrset ( int $intarg ) : int
ncurses_slk_clear ( void ) : bool
ncurses_slk_color ( int $intarg ) : int
ncurses_slk_init ( int $format ) : int
ncurses_slk_noutrefresh ( void ) : bool
ncurses_slk_refresh ( void ) : int
ncurses_slk_restore ( void ) : int
ncurses_slk_set ( int $labelnr , string $label , int $format ) : int
ncurses_slk_touch ( void ) : int
ncurses_standend ( void ) : int
ncurses_standout ( void ) : int
ncurses_start_color ( void ) : int
ncurses_termattrs ( void ) : bool
ncurses_termname ( void ) : string
ncurses_timeout ( int $millisec ) : int
ncurses_top_panel ( resource $panel ) : resource
ncurses_typeahead ( int $fd ) : int
ncurses_ungetch ( int $keycode ) : int
ncurses_ungetmouse ( array $mevent ) : array
ncurses_update_panels ( void ) : void
ncurses_use_default_colors ( void ) : bool
ncurses_use_env ( bool $flag ) : bool
ncurses_use_extended_names ( bool $flag ) : bool
ncurses_vidattr ( int $intarg ) : int
ncurses_vline ( int $charattr , int $n ) : int
ncurses_waddch ( resource $window , int $ch ) : resource
ncurses_waddstr ( resource $window , string $str [, int $n ] ) : resource
ncurses_wattroff ( resource $window , int $attrs ) : resource
ncurses_wattron ( resource $window , int $attrs ) : resource
ncurses_wattrset ( resource $window , int $attrs ) : resource
ncurses_wborder ( resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner ) : resource
ncurses_wclear ( resource $window ) : resource
ncurses_wcolor_set ( resource $window , int $color_pair ) : resource
ncurses_werase ( resource $window ) : resource
ncurses_wgetch ( resource $window ) : resource
ncurses_whline ( resource $window , int $charattr , int $n ) : resource
ncurses_wmouse_trafo ( resource $window , int &$y , int &$x , bool $toscreen ) : resource
ncurses_wmove ( resource $window , int $y , int $x ) : resource
ncurses_wnoutrefresh ( resource $window ) : resource
ncurses_wrefresh ( resource $window ) : resource
ncurses_wstandend ( resource $window ) : resource
ncurses_wstandout ( resource $window ) : resource
ncurses_wvline ( resource $window , int $charattr , int $n ) : resource
newt_bell ( void ) : void
newt_button ( int $left , int $top , string $text ) : int
newt_button_bar ( array &$buttons ) : array
newt_centered_window ( int $width , int $height [, string $title ] ) : int
newt_checkbox ( int $left , int $top , string $text , string $def_value [, string $seq ] ) : int
newt_checkbox_get_value ( resource $checkbox ) : resource
newt_checkbox_set_flags ( resource $checkbox , int $flags , int $sense ) : resource
newt_checkbox_set_value ( resource $checkbox , string $value ) : resource
newt_checkbox_tree ( int $left , int $top , int $height [, int $flags ] ) : int
newt_checkbox_tree_add_item ( resource $checkboxtree , string $text , mixed $data , int $flags , int $index [, int $... ] ) : resource
newt_checkbox_tree_find_item ( resource $checkboxtree , mixed $data ) : resource
newt_checkbox_tree_get_current ( resource $checkboxtree ) : resource
newt_checkbox_tree_get_entry_value ( resource $checkboxtree , mixed $data ) : resource
newt_checkbox_tree_get_multi_selection ( resource $checkboxtree , string $seqnum ) : resource
newt_checkbox_tree_get_selection ( resource $checkboxtree ) : resource
newt_checkbox_tree_multi ( int $left , int $top , int $height , string $seq [, int $flags ] ) : int
newt_checkbox_tree_set_current ( resource $checkboxtree , mixed $data ) : resource
newt_checkbox_tree_set_entry ( resource $checkboxtree , mixed $data , string $text ) : resource
newt_checkbox_tree_set_entry_value ( resource $checkboxtree , mixed $data , string $value ) : resource
newt_checkbox_tree_set_width ( resource $checkbox_tree , int $width ) : resource
newt_clear_key_buffer ( void ) : void
newt_cls ( void ) : void
newt_compact_button ( int $left , int $top , string $text ) : int
newt_component_add_callback ( resource $component , mixed $func_name , mixed $data ) : resource
newt_component_takes_focus ( resource $component , bool $takes_focus ) : resource
newt_create_grid ( int $cols , int $rows ) : int
newt_cursor_off ( void ) : void
newt_cursor_on ( void ) : void
newt_delay ( int $microseconds ) : int
newt_draw_form ( resource $form ) : resource
newt_draw_root_text ( int $left , int $top , string $text ) : int
newt_entry ( int $left , int $top , int $width [, string $init_value [, int $flags ]] ) : int
newt_entry_get_value ( resource $entry ) : resource
newt_entry_set ( resource $entry , string $value [, bool $cursor_at_end ] ) : resource
newt_entry_set_filter ( resource $entry , callable $filter , mixed $data ) : resource
newt_entry_set_flags ( resource $entry , int $flags , int $sense ) : resource
newt_finished ( void ) : int
newt_form ([ resource $vert_bar [, string $help [, int $flags ]]] ) : resource
newt_form_add_component ( resource $form , resource $component ) : resource
newt_form_add_components ( resource $form , array $components ) : resource
newt_form_add_hot_key ( resource $form , int $key ) : resource
newt_form_destroy ( resource $form ) : resource
newt_form_get_current ( resource $form ) : resource
newt_form_run ( resource $form , array &$exit_struct ) : resource
newt_form_set_background ( resource $from , int $background ) : resource
newt_form_set_height ( resource $form , int $height ) : resource
newt_form_set_size ( resource $form ) : resource
newt_form_set_timer ( resource $form , int $milliseconds ) : resource
newt_form_set_width ( resource $form , int $width ) : resource
newt_form_watch_fd ( resource $form , resource $stream [, int $flags ] ) : resource
newt_get_screen_size ( int &$cols , int &$rows ) : int
newt_grid_add_components_to_form ( resource $grid , resource $form , bool $recurse ) : resource
newt_grid_basic_window ( resource $text , resource $middle , resource $buttons ) : resource
newt_grid_free ( resource $grid , bool $recurse ) : resource
newt_grid_get_size ( resouce $grid , int &$width , int &$height ) : resouce
newt_grid_h_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] ) : int
newt_grid_h_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] ) : int
newt_grid_place ( resource $grid , int $left , int $top ) : resource
newt_grid_set_field ( resource $grid , int $col , int $row , int $type , resource $val , int $pad_left , int $pad_top , int $pad_right , int $pad_bottom , int $anchor [, int $flags ] ) : resource
newt_grid_simple_window ( resource $text , resource $middle , resource $buttons ) : resource
newt_grid_v_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] ) : int
newt_grid_v_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] ) : int
newt_grid_wrapped_window ( resource $grid , string $title ) : resource
newt_grid_wrapped_window_at ( resource $grid , string $title , int $left , int $top ) : resource
newt_init ( void ) : int
newt_label ( int $left , int $top , string $text ) : int
newt_label_set_text ( resource $label , string $text ) : resource
newt_listbox ( int $left , int $top , int $height [, int $flags ] ) : int
newt_listbox_append_entry ( resource $listbox , string $text , mixed $data ) : resource
newt_listbox_clear ( resource $listobx ) : resource
newt_listbox_clear_selection ( resource $listbox ) : resource
newt_listbox_delete_entry ( resource $listbox , mixed $key ) : resource
newt_listbox_get_current ( resource $listbox ) : resource
newt_listbox_get_selection ( resource $listbox ) : resource
newt_listbox_insert_entry ( resource $listbox , string $text , mixed $data , mixed $key ) : resource
newt_listbox_item_count ( resource $listbox ) : resource
newt_listbox_select_item ( resource $listbox , mixed $key , int $sense ) : resource
newt_listbox_set_current ( resource $listbox , int $num ) : resource
newt_listbox_set_current_by_key ( resource $listbox , mixed $key ) : resource
newt_listbox_set_data ( resource $listbox , int $num , mixed $data ) : resource
newt_listbox_set_entry ( resource $listbox , int $num , string $text ) : resource
newt_listbox_set_width ( resource $listbox , int $width ) : resource
newt_listitem ( int $left , int $top , string $text , bool $is_default , resouce $prev_item , mixed $data [, int $flags ] ) : int
newt_listitem_get_data ( resource $item ) : resource
newt_listitem_set ( resource $item , string $text ) : resource
newt_open_window ( int $left , int $top , int $width , int $height [, string $title ] ) : int
newt_pop_help_line ( void ) : void
newt_pop_window ( void ) : void
newt_push_help_line ([ string $text ] ) : string
newt_radiobutton ( int $left , int $top , string $text , bool $is_default [, resource $prev_button ] ) : int
newt_radio_get_current ( resource $set_member ) : resource
newt_redraw_help_line ( void ) : void
newt_reflow_text ( string $text , int $width , int $flex_down , int $flex_up , int &$actual_width , int &$actual_height ) : string
newt_refresh ( void ) : void
newt_resize_screen ([ bool $redraw ] ) : bool
newt_resume ( void ) : void
newt_run_form ( resource $form ) : resource
newt_scale ( int $left , int $top , int $width , int $full_value ) : int
newt_scale_set ( resource $scale , int $amount ) : resource
newt_scrollbar_set ( resource $scrollbar , int $where , int $total ) : resource
newt_set_help_callback ( mixed $function ) : mixed
newt_set_suspend_callback ( callable $function , mixed $data ) : callable
newt_suspend ( void ) : void
newt_textbox ( int $left , int $top , int $width , int $height [, int $flags ] ) : int
newt_textbox_get_num_lines ( resource $textbox ) : resource
newt_textbox_reflowed ( int $left , int $top , char $*text , int $width , int $flex_down , int $flex_up [, int $flags ] ) : int
newt_textbox_set_height ( resource $textbox , int $height ) : resource
newt_textbox_set_text ( resource $textbox , string $text ) : resource
newt_vertical_scrollbar ( int $left , int $top , int $height [, int $normal_colorset [, int $thumb_colorset ]] ) : int
newt_wait_for_key ( void ) : void
newt_win_choice ( string $title , string $button1_text , string $button2_text , string $format [, mixed $args [, mixed $... ]] ) : string
newt_win_entries ( string $title , string $text , int $suggested_width , int $flex_down , int $flex_up , int $data_width , array &$items , string $button1 [, string $... ] ) : string
newt_win_menu ( string $title , string $text , int $suggestedWidth , int $flexDown , int $flexUp , int $maxListHeight , array $items , int &$listItem [, string $button1 [, string $... ]] ) : string
newt_win_message ( string $title , string $button_text , string $format [, mixed $args [, mixed $... ]] ) : string
newt_win_messagev ( string $title , string $button_text , string $format , array $args ) : string
newt_win_ternary ( string $title , string $button1_text , string $button2_text , string $button3_text , string $format [, mixed $args [, mixed $... ]] ) : string
next ( array &$array ) : array
ngettext ( string $msgid1 , string $msgid2 , int $n ) : string
nl2br ( string $string [, bool $is_xhtml = TRUE ] ) : string
nl_langinfo ( int $item ) : int
nsapi_request_headers ( void ) : array
nsapi_response_headers ( void ) : array
nsapi_virtual ( string $uri ) : string
number_format ( float $number [, int $decimals = 0 ] ) : float [:OR:] ( float $number , int $decimals = 0 , string $dec_point = "." , string $thousands_sep = "," ) : float
oauth_get_sbs ( string $http_method , string $uri [, array $request_parameters ] ) : string
oauth_urlencode ( string $uri ) : string
ob_clean ( void ) : void
ob_end_clean ( void ) : bool
ob_end_flush ( void ) : bool
ob_flush ( void ) : void
ob_get_clean ( void ) : string
ob_get_contents ( void ) : string
ob_get_flush ( void ) : string
ob_get_length ( void ) : int
ob_get_level ( void ) : int
ob_get_status ([ bool $full_status = FALSE ] ) : bool
ob_gzhandler ( string $buffer , int $mode ) : string
ob_iconv_handler ( string $contents , int $status ) : string
ob_implicit_flush ([ int $flag = 1 ] ) : int
ob_list_handlers ( void ) : array
ob_start ([ callable $output_callback = NULL [, int $chunk_size = 0 [, int $flags = PHP_OUTPUT_HANDLER_STDFLAGS ]]] ) : callable
ob_tidyhandler ( string $input [, int $mode ] ) : string
ocibindbyname ( resource $statement , string $bv_name , mixed &$variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]] ) : resource
ocicancel ( resource $statement ) : resource
ocicloselob ( ) : bool
ocicollappend ( ) : bool
ocicollassign ( ) : bool
ocicollassignelem ( ) : bool
ocicollgetelem ( ) : mixed
ocicollmax ( ) : int
ocicollsize ( ) : int
ocicolltrim ( ) : bool
ocicolumnisnull ( resource $statement , mixed $field ) : resource
ocicolumnname ( resource $statement , mixed $field ) : resource
ocicolumnprecision ( resource $statement , mixed $field ) : resource
ocicolumnscale ( resource $statement , mixed $field ) : resource
ocicolumnsize ( resource $statement , mixed $field ) : resource
ocicolumntype ( resource $statement , mixed $field ) : resource
ocicolumntyperaw ( resource $statement , mixed $field ) : resource
ocicommit ( resource $connection ) : resource
ocidefinebyname ( resource $statement , string $column_name , mixed &$variable [, int $type = SQLT_CHR ] ) : resource
ocierror ([ resource $resource ] ) : resource
ociexecute ( resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ] ) : resource
ocifetch ( resource $statement ) : resource
ocifetchstatement ( resource $statement , array &$output [, int $skip = 0 [, int $maxrows = -1 [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]] ) : resource
ocifreecollection ( ) : bool
ocifreecursor ( resource $statement ) : resource
ocifreedesc ( ) : bool
ocifreestatement ( resource $statement ) : resource
ociinternaldebug ( bool $onoff ) : bool
ociloadlob ( ) : string
ocilogoff ( resource $connection ) : resource
ocilogon ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) : string
ocinewcollection ( resource $connection , string $tdo [, string $schema = NULL ] ) : resource
ocinewcursor ( resource $connection ) : resource
ocinewdescriptor ( resource $connection [, int $type = OCI_DTYPE_LOB ] ) : resource
ocinlogon ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) : string
ocinumcols ( resource $statement ) : resource
ociparse ( resource $connection , string $sql_text ) : resource
ociplogon ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) : string
ociresult ( resource $statement , mixed $field ) : resource
ocirollback ( resource $connection ) : resource
ocirowcount ( resource $statement ) : resource
ocisavelob ( ) : bool
ocisavelobfile ( ) : bool
ociserverversion ( resource $connection ) : resource
ocisetprefetch ( resource $statement , int $rows ) : resource
ocistatementtype ( resource $statement ) : resource
ociwritelobtofile ( ) : bool
ociwritetemporarylob ( ) : bool
oci_bind_array_by_name ( resource $statement , string $name , array &$var_array , int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC ]] ) : resource
oci_bind_by_name ( resource $statement , string $bv_name , mixed &$variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]] ) : resource
oci_cancel ( resource $statement ) : resource
oci_client_version ( void ) : string
oci_close ( resource $connection ) : resource
oci_commit ( resource $connection ) : resource
oci_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) : string
oci_define_by_name ( resource $statement , string $column_name , mixed &$variable [, int $type = SQLT_CHR ] ) : resource
oci_error ([ resource $resource ] ) : resource
oci_execute ( resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ] ) : resource
oci_fetch ( resource $statement ) : resource
oci_fetch_all ( resource $statement , array &$output [, int $skip = 0 [, int $maxrows = -1 [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]] ) : resource
oci_fetch_array ( resource $statement [, int $mode ] ) : resource
oci_fetch_assoc ( resource $statement ) : resource
oci_fetch_object ( resource $statement ) : resource
oci_fetch_row ( resource $statement ) : resource
oci_field_is_null ( resource $statement , mixed $field ) : resource
oci_field_name ( resource $statement , mixed $field ) : resource
oci_field_precision ( resource $statement , mixed $field ) : resource
oci_field_scale ( resource $statement , mixed $field ) : resource
oci_field_size ( resource $statement , mixed $field ) : resource
oci_field_type ( resource $statement , mixed $field ) : resource
oci_field_type_raw ( resource $statement , mixed $field ) : resource
oci_free_descriptor ( resource $descriptor ) : resource
oci_free_statement ( resource $statement ) : resource
oci_get_implicit_resultset ( resource $statement ) : resource
oci_internal_debug ( bool $onoff ) : bool
oci_lob_copy ( OCI-Lob $lob_to , OCI-Lob $lob_from [, int $length = 0 ] ) : OCI-Lob
oci_lob_is_equal ( OCI-Lob $lob1 , OCI-Lob $lob2 ) : OCI-Lob
oci_new_collection ( resource $connection , string $tdo [, string $schema = NULL ] ) : resource
oci_new_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) : string
oci_new_cursor ( resource $connection ) : resource
oci_new_descriptor ( resource $connection [, int $type = OCI_DTYPE_LOB ] ) : resource
oci_num_fields ( resource $statement ) : resource
oci_num_rows ( resource $statement ) : resource
oci_parse ( resource $connection , string $sql_text ) : resource
oci_password_change ( resource $connection , string $username , string $old_password , string $new_password ) : resource [:OR:] ( string $dbname , string $username , string $old_password , string $new_password ) : resource
oci_pconnect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) : string
oci_register_taf_callback ( resource $connection [, mixed $callbackFn ] ) : resource
oci_result ( resource $statement , mixed $field ) : resource
oci_rollback ( resource $connection ) : resource
oci_server_version ( resource $connection ) : resource
oci_set_action ( resource $connection , string $action_name ) : resource
oci_set_call_timeout ( resource $connection , int $time_out ) : resource
oci_set_client_identifier ( resource $connection , string $client_identifier ) : resource
oci_set_client_info ( resource $connection , string $client_info ) : resource
oci_set_db_operation ( resource $connection , string $dbop ) : resource
oci_set_edition ( string $edition ) : string
oci_set_module_name ( resource $connection , string $module_name ) : resource
oci_set_prefetch ( resource $statement , int $rows ) : resource
oci_statement_type ( resource $statement ) : resource
oci_unregister_taf_callback ( resource $connection ) : resource
octdec ( string $octal_string ) : string
odbc_autocommit ( resource $connection_id [, bool $OnOff = FALSE ] ) : resource
odbc_binmode ( resource $result_id , int $mode ) : resource
odbc_close ( resource $connection_id ) : resource
odbc_close_all ( void ) : void
odbc_columnprivileges ( resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name ) : resource
odbc_columns ( resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]] ) : resource
odbc_commit ( resource $connection_id ) : resource
odbc_connect ( string $dsn , string $user , string $password [, int $cursor_type ] ) : string
odbc_cursor ( resource $result_id ) : resource
odbc_data_source ( resource $connection_id , int $fetch_type ) : resource
odbc_do ( resource $connection_id , string $query_string [, int $flags ] ) : resource
odbc_error ([ resource $connection_id ] ) : resource
odbc_errormsg ([ resource $connection_id ] ) : resource
odbc_exec ( resource $connection_id , string $query_string [, int $flags ] ) : resource
odbc_execute ( resource $result_id [, array $parameters_array ] ) : resource
odbc_fetch_array ( resource $result [, int $rownumber ] ) : resource
odbc_fetch_into ( resource $result_id , array &$result_array [, int $rownumber ] ) : resource
odbc_fetch_object ( resource $result [, int $rownumber ] ) : resource
odbc_fetch_row ( resource $result_id [, int $row_number = 1 ] ) : resource
odbc_field_len ( resource $result_id , int $field_number ) : resource
odbc_field_name ( resource $result_id , int $field_number ) : resource
odbc_field_num ( resource $result_id , string $field_name ) : resource
odbc_field_precision ( resource $result_id , int $field_number ) : resource
odbc_field_scale ( resource $result_id , int $field_number ) : resource
odbc_field_type ( resource $result_id , int $field_number ) : resource
odbc_foreignkeys ( resource $connection_id , string $pk_qualifier , string $pk_owner , string $pk_table , string $fk_qualifier , string $fk_owner , string $fk_table ) : resource
odbc_free_result ( resource $result_id ) : resource
odbc_gettypeinfo ( resource $connection_id [, int $data_type ] ) : resource
odbc_longreadlen ( resource $result_id , int $length ) : resource
odbc_next_result ( resource $result_id ) : resource
odbc_num_fields ( resource $result_id ) : resource
odbc_num_rows ( resource $result_id ) : resource
odbc_pconnect ( string $dsn , string $user , string $password [, int $cursor_type ] ) : string
odbc_prepare ( resource $connection_id , string $query_string ) : resource
odbc_primarykeys ( resource $connection_id , string $qualifier , string $owner , string $table ) : resource
odbc_procedurecolumns ( resource $connection_id ) : resource [:OR:] ( resource $connection_id , string $qualifier , string $owner , string $proc , string $column ) : resource
odbc_procedures ( resource $connection_id ) : resource [:OR:] ( resource $connection_id , string $qualifier , string $owner , string $name ) : resource
odbc_result ( resource $result_id , mixed $field ) : resource
odbc_result_all ( resource $result_id [, string $format ] ) : resource
odbc_rollback ( resource $connection_id ) : resource
odbc_setoption ( resource $id , int $function , int $option , int $param ) : resource
odbc_specialcolumns ( resource $connection_id , int $type , string $qualifier , string $table , int $scope , int $nullable ) : resource
odbc_statistics ( resource $connection_id , string $qualifier , string $owner , string $table_name , int $unique , int $accuracy ) : resource
odbc_tableprivileges ( resource $connection_id , string $qualifier , string $owner , string $name ) : resource
odbc_tables ( resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]] ) : resource
opcache_compile_file ( string $file ) : string
opcache_get_configuration ( void ) : array
opcache_get_status ([ bool $get_scripts = TRUE ] ) : bool
opcache_invalidate ( string $script [, bool $force = FALSE ] ) : string
opcache_is_script_cached ( string $file ) : string
opcache_reset ( void ) : bool
openal_buffer_create ( void ) : resource
openal_buffer_data ( resource $buffer , int $format , string $data , int $freq ) : resource
openal_buffer_destroy ( resource $buffer ) : resource
openal_buffer_get ( resource $buffer , int $property ) : resource
openal_buffer_loadwav ( resource $buffer , string $wavfile ) : resource
openal_context_create ( resource $device ) : resource
openal_context_current ( resource $context ) : resource
openal_context_destroy ( resource $context ) : resource
openal_context_process ( resource $context ) : resource
openal_context_suspend ( resource $context ) : resource
openal_device_close ( resource $device ) : resource
openal_device_open ([ string $device_desc ] ) : string
openal_listener_get ( int $property ) : int
openal_listener_set ( int $property , mixed $setting ) : int
openal_source_create ( void ) : resource
openal_source_destroy ( resource $source ) : resource
openal_source_get ( resource $source , int $property ) : resource
openal_source_pause ( resource $source ) : resource
openal_source_play ( resource $source ) : resource
openal_source_rewind ( resource $source ) : resource
openal_source_set ( resource $source , int $property , mixed $setting ) : resource
openal_source_stop ( resource $source ) : resource
openal_stream ( resource $source , int $format , int $rate ) : resource
opendir ( string $path [, resource $context ] ) : string
openlog ( string $ident , int $option , int $facility ) : string
openssl_cipher_iv_length ( string $method ) : string
openssl_csr_export ( mixed $csr , string &$out [, bool $notext = TRUE ] ) : mixed
openssl_csr_export_to_file ( mixed $csr , string $outfilename [, bool $notext = TRUE ] ) : mixed
openssl_csr_get_public_key ( mixed $csr [, bool $use_shortnames = TRUE ] ) : mixed
openssl_csr_get_subject ( mixed $csr [, bool $use_shortnames = TRUE ] ) : mixed
openssl_csr_new ( array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]] ) : array
openssl_csr_sign ( mixed $csr , mixed $cacert , mixed $priv_key , int $days [, array $configargs [, int $serial = 0 ]] ) : mixed
openssl_decrypt ( string $data , string $method , string $key [, int $options = 0 [, string $iv = "" [, string $tag = "" [, string $aad = "" ]]]] ) : string
openssl_dh_compute_key ( string $pub_key , resource $dh_key ) : string
openssl_digest ( string $data , string $method [, bool $raw_output = FALSE ] ) : string
openssl_encrypt ( string $data , string $method , string $key [, int $options = 0 [, string $iv = "" [, string &$tag = NULL [, string $aad = "" [, int $tag_length = 16 ]]]]] ) : string
openssl_error_string ( void ) : string
openssl_free_key ( resource $key_identifier ) : resource
openssl_get_cert_locations ( void ) : array
openssl_get_cipher_methods ([ bool $aliases = FALSE ] ) : bool
openssl_get_curve_names ( void ) : array
openssl_get_md_methods ([ bool $aliases = FALSE ] ) : bool
openssl_get_privatekey ( mixed $key [, string $passphrase = "" ] ) : mixed
openssl_get_publickey ( mixed $certificate ) : mixed
openssl_open ( string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id [, string $method = "RC4" [, string $iv ]] ) : string
openssl_pbkdf2 ( string $password , string $salt , int $key_length , int $iterations [, string $digest_algorithm = "sha1" ] ) : string
openssl_pkcs12_export ( mixed $x509 , string &$out , mixed $priv_key , string $pass [, array $args ] ) : mixed
openssl_pkcs12_export_to_file ( mixed $x509 , string $filename , mixed $priv_key , string $pass [, array $args ] ) : mixed
openssl_pkcs12_read ( string $pkcs12 , array &$certs , string $pass ) : string
openssl_pkcs7_decrypt ( string $infilename , string $outfilename , mixed $recipcert [, mixed $recipkey ] ) : string
openssl_pkcs7_encrypt ( string $infile , string $outfile , mixed $recipcerts , array $headers [, int $flags = 0 [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]] ) : string
openssl_pkcs7_read ( string $infilename , array &$certs ) : string
openssl_pkcs7_sign ( string $infilename , string $outfilename , mixed $signcert , mixed $privkey , array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts ]] ) : string
openssl_pkcs7_verify ( string $filename , int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content [, string $p7bfilename ]]]]] ) : string
openssl_pkey_export ( mixed $key , string &$out [, string $passphrase [, array $configargs ]] ) : mixed
openssl_pkey_export_to_file ( mixed $key , string $outfilename [, string $passphrase [, array $configargs ]] ) : mixed
openssl_pkey_free ( resource $key ) : resource
openssl_pkey_get_details ( resource $key ) : resource
openssl_pkey_get_private ( mixed $key [, string $passphrase = "" ] ) : mixed
openssl_pkey_get_public ( mixed $certificate ) : mixed
openssl_pkey_new ([ array $configargs ] ) : array
openssl_private_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) : string
openssl_private_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) : string
openssl_public_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) : string
openssl_public_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) : string
openssl_random_pseudo_bytes ( int $length [, bool &$crypto_strong ] ) : int
openssl_seal ( string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids [, string $method = "RC4" [, string &$iv ]] ) : string
openssl_sign ( string $data , string &$signature , mixed $priv_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1 ] ) : string
openssl_spki_export ( string &$spkac ) : string
openssl_spki_export_challenge ( string &$spkac ) : string
openssl_spki_new ( resource &$privkey , string &$challenge [, int $algorithm = 0 ] ) : resource
openssl_spki_verify ( string &$spkac ) : string
openssl_verify ( string $data , string $signature , mixed $pub_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1 ] ) : string
openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] ) : mixed
openssl_x509_check_private_key ( mixed $cert , mixed $key ) : mixed
openssl_x509_export ( mixed $x509 , string &$output [, bool $notext = TRUE ] ) : mixed
openssl_x509_export_to_file ( mixed $x509 , string $outfilename [, bool $notext = TRUE ] ) : mixed
openssl_x509_fingerprint ( mixed $x509 [, string $hash_algorithm = "sha1" [, bool $raw_output = FALSE ]] ) : mixed
openssl_x509_free ( resource $x509cert ) : resource
openssl_x509_parse ( mixed $x509cert [, bool $shortnames = TRUE ] ) : mixed
openssl_x509_read ( mixed $x509certdata ) : mixed
ord ( string $string ) : string
output_add_rewrite_var ( string $name , string $value ) : string
output_reset_rewrite_vars ( void ) : bool
override_function ( string $function_name , string $function_args , string $function_code ) : string
pack ( string $format [, mixed $... ] ) : string
parsekit_compile_file ( string $filename [, array &$errors [, int $options = PARSEKIT_QUIET ]] ) : string
parsekit_compile_string ( string $phpcode [, array &$errors [, int $options = PARSEKIT_QUIET ]] ) : string
parsekit_func_arginfo ( mixed $function ) : mixed
parse_ini_file ( string $filename [, bool $process_sections = FALSE [, int $scanner_mode = INI_SCANNER_NORMAL ]] ) : string
parse_ini_string ( string $ini [, bool $process_sections = FALSE [, int $scanner_mode = INI_SCANNER_NORMAL ]] ) : string
parse_str ( string $encoded_string [, array &$result ] ) : string
parse_url ( string $url [, int $component = -1 ] ) : string
passthru ( string $command [, int &$return_var ] ) : string
password_get_info ( string $hash ) : string
password_hash ( string $password , int $algo [, array $options ] ) : string
password_needs_rehash ( string $hash , int $algo [, array $options ] ) : string
password_verify ( string $password , string $hash ) : string
pathinfo ( string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ] ) : string
pclose ( resource $handle ) : resource
pcntl_alarm ( int $seconds ) : int
pcntl_async_signals ([ bool $on = NULL ] ) : bool
pcntl_errno ( void ) : int
pcntl_exec ( string $path [, array $args [, array $envs ]] ) : string
pcntl_fork ( void ) : int
pcntl_getpriority ([ int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] ) : int
pcntl_get_last_error ( void ) : int
pcntl_setpriority ( int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] ) : int
pcntl_signal ( int $signo , callable|int $handler [, bool $restart_syscalls = TRUE ] ) : int
pcntl_signal_dispatch ( void ) : bool
pcntl_signal_get_handler ( int $signo ) : int
pcntl_sigprocmask ( int $how , array $set [, array &$oldset ] ) : int
pcntl_sigtimedwait ( array $set [, array &$siginfo [, int $seconds = 0 [, int $nanoseconds = 0 ]]] ) : array
pcntl_sigwaitinfo ( array $set [, array &$siginfo ] ) : array
pcntl_strerror ( int $errno ) : int
pcntl_wait ( int &$status [, int $options = 0 [, array &$rusage ]] ) : int
pcntl_waitpid ( int $pid , int &$status [, int $options = 0 [, array &$rusage ]] ) : int
pcntl_wexitstatus ( int $status ) : int
pcntl_wifexited ( int $status ) : int
pcntl_wifsignaled ( int $status ) : int
pcntl_wifstopped ( int $status ) : int
pcntl_wstopsig ( int $status ) : int
pcntl_wtermsig ( int $status ) : int
PDF_activate_item ( resource $pdfdoc , int $id ) : resource
PDF_add_launchlink ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename ) : resource
PDF_add_locallink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , int $page , string $dest ) : resource
PDF_add_nameddest ( resource $pdfdoc , string $name , string $optlist ) : resource
PDF_add_note ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open ) : resource
PDF_add_pdflink ( resource $pdfdoc , float $bottom_left_x , float $bottom_left_y , float $up_right_x , float $up_right_y , string $filename , int $page , string $dest ) : resource
PDF_add_table_cell ( resource $pdfdoc , int $table , int $column , int $row , string $text , string $optlist ) : resource
PDF_add_textflow ( resource $pdfdoc , int $textflow , string $text , string $optlist ) : resource
PDF_add_thumbnail ( resource $pdfdoc , int $image ) : resource
PDF_add_weblink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , string $url ) : resource
PDF_arc ( resource $p , float $x , float $y , float $r , float $alpha , float $beta ) : resource
PDF_arcn ( resource $p , float $x , float $y , float $r , float $alpha , float $beta ) : resource
PDF_attach_file ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename , string $description , string $author , string $mimetype , string $icon ) : resource
PDF_begin_document ( resource $pdfdoc , string $filename , string $optlist ) : resource
PDF_begin_font ( resource $pdfdoc , string $filename , float $a , float $b , float $c , float $d , float $e , float $f , string $optlist ) : resource
PDF_begin_glyph ( resource $pdfdoc , string $glyphname , float $wx , float $llx , float $lly , float $urx , float $ury ) : resource
PDF_begin_item ( resource $pdfdoc , string $tag , string $optlist ) : resource
PDF_begin_layer ( resource $pdfdoc , int $layer ) : resource
PDF_begin_page ( resource $pdfdoc , float $width , float $height ) : resource
PDF_begin_page_ext ( resource $pdfdoc , float $width , float $height , string $optlist ) : resource
PDF_begin_pattern ( resource $pdfdoc , float $width , float $height , float $xstep , float $ystep , int $painttype ) : resource
PDF_begin_template ( resource $pdfdoc , float $width , float $height ) : resource
PDF_begin_template_ext ( resource $pdfdoc , float $width , float $height , string $optlist ) : resource
PDF_circle ( resource $pdfdoc , float $x , float $y , float $r ) : resource
PDF_clip ( resource $p ) : resource
PDF_close ( resource $p ) : resource
PDF_closepath ( resource $p ) : resource
PDF_closepath_fill_stroke ( resource $p ) : resource
PDF_closepath_stroke ( resource $p ) : resource
PDF_close_image ( resource $p , int $image ) : resource
PDF_close_pdi ( resource $p , int $doc ) : resource
PDF_close_pdi_page ( resource $p , int $page ) : resource
PDF_concat ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f ) : resource
PDF_continue_text ( resource $p , string $text ) : resource
PDF_create_3dview ( resource $pdfdoc , string $username , string $optlist ) : resource
PDF_create_action ( resource $pdfdoc , string $type , string $optlist ) : resource
PDF_create_annotation ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $type , string $optlist ) : resource
PDF_create_bookmark ( resource $pdfdoc , string $text , string $optlist ) : resource
PDF_create_field ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $name , string $type , string $optlist ) : resource
PDF_create_fieldgroup ( resource $pdfdoc , string $name , string $optlist ) : resource
PDF_create_gstate ( resource $pdfdoc , string $optlist ) : resource
PDF_create_pvf ( resource $pdfdoc , string $filename , string $data , string $optlist ) : resource
PDF_create_textflow ( resource $pdfdoc , string $text , string $optlist ) : resource
PDF_curveto ( resource $p , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 ) : resource
PDF_define_layer ( resource $pdfdoc , string $name , string $optlist ) : resource
PDF_delete ( resource $pdfdoc ) : resource
PDF_delete_pvf ( resource $pdfdoc , string $filename ) : resource
PDF_delete_table ( resource $pdfdoc , int $table , string $optlist ) : resource
PDF_delete_textflow ( resource $pdfdoc , int $textflow ) : resource
PDF_encoding_set_char ( resource $pdfdoc , string $encoding , int $slot , string $glyphname , int $uv ) : resource
PDF_endpath ( resource $p ) : resource
PDF_end_document ( resource $pdfdoc , string $optlist ) : resource
PDF_end_font ( resource $pdfdoc ) : resource
PDF_end_glyph ( resource $pdfdoc ) : resource
PDF_end_item ( resource $pdfdoc , int $id ) : resource
PDF_end_layer ( resource $pdfdoc ) : resource
PDF_end_page ( resource $p ) : resource
PDF_end_page_ext ( resource $pdfdoc , string $optlist ) : resource
PDF_end_pattern ( resource $p ) : resource
PDF_end_template ( resource $p ) : resource
PDF_fill ( resource $p ) : resource
PDF_fill_imageblock ( resource $pdfdoc , int $page , string $blockname , int $image , string $optlist ) : resource
PDF_fill_pdfblock ( resource $pdfdoc , int $page , string $blockname , int $contents , string $optlist ) : resource
PDF_fill_stroke ( resource $p ) : resource
PDF_fill_textblock ( resource $pdfdoc , int $page , string $blockname , string $text , string $optlist ) : resource
PDF_findfont ( resource $p , string $fontname , string $encoding , int $embed ) : resource
PDF_fit_image ( resource $pdfdoc , int $image , float $x , float $y , string $optlist ) : resource
PDF_fit_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , string $optlist ) : resource
PDF_fit_table ( resource $pdfdoc , int $table , float $llx , float $lly , float $urx , float $ury , string $optlist ) : resource
PDF_fit_textflow ( resource $pdfdoc , int $textflow , float $llx , float $lly , float $urx , float $ury , string $optlist ) : resource
PDF_fit_textline ( resource $pdfdoc , string $text , float $x , float $y , string $optlist ) : resource
PDF_get_apiname ( resource $pdfdoc ) : resource
PDF_get_buffer ( resource $p ) : resource
PDF_get_errmsg ( resource $pdfdoc ) : resource
PDF_get_errnum ( resource $pdfdoc ) : resource
PDF_get_majorversion ( void ) : int
PDF_get_minorversion ( void ) : int
PDF_get_parameter ( resource $p , string $key , float $modifier ) : resource
PDF_get_pdi_parameter ( resource $p , string $key , int $doc , int $page , int $reserved ) : resource
PDF_get_pdi_value ( resource $p , string $key , int $doc , int $page , int $reserved ) : resource
PDF_get_value ( resource $p , string $key , float $modifier ) : resource
PDF_info_font ( resource $pdfdoc , int $font , string $keyword , string $optlist ) : resource
PDF_info_matchbox ( resource $pdfdoc , string $boxname , int $num , string $keyword ) : resource
PDF_info_table ( resource $pdfdoc , int $table , string $keyword ) : resource
PDF_info_textflow ( resource $pdfdoc , int $textflow , string $keyword ) : resource
PDF_info_textline ( resource $pdfdoc , string $text , string $keyword , string $optlist ) : resource
PDF_initgraphics ( resource $p ) : resource
PDF_lineto ( resource $p , float $x , float $y ) : resource
PDF_load_3ddata ( resource $pdfdoc , string $filename , string $optlist ) : resource
PDF_load_font ( resource $pdfdoc , string $fontname , string $encoding , string $optlist ) : resource
PDF_load_iccprofile ( resource $pdfdoc , string $profilename , string $optlist ) : resource
PDF_load_image ( resource $pdfdoc , string $imagetype , string $filename , string $optlist ) : resource
PDF_makespotcolor ( resource $p , string $spotname ) : resource
PDF_moveto ( resource $p , float $x , float $y ) : resource
PDF_new ( void ) : resource
PDF_open_ccitt ( resource $pdfdoc , string $filename , int $width , int $height , int $BitReverse , int $k , int $Blackls1 ) : resource
PDF_open_file ( resource $p , string $filename ) : resource
PDF_open_image ( resource $p , string $imagetype , string $source , string $data , int $length , int $width , int $height , int $components , int $bpc , string $params ) : resource
PDF_open_image_file ( resource $p , string $imagetype , string $filename , string $stringparam , int $intparam ) : resource
PDF_open_memory_image ( resource $p , resource $image ) : resource
PDF_open_pdi ( resource $pdfdoc , string $filename , string $optlist , int $len ) : resource
PDF_open_pdi_document ( resource $p , string $filename , string $optlist ) : resource
PDF_open_pdi_page ( resource $p , int $doc , int $pagenumber , string $optlist ) : resource
PDF_pcos_get_number ( resource $p , int $doc , string $path ) : resource
PDF_pcos_get_stream ( resource $p , int $doc , string $optlist , string $path ) : resource
PDF_pcos_get_string ( resource $p , int $doc , string $path ) : resource
PDF_place_image ( resource $pdfdoc , int $image , float $x , float $y , float $scale ) : resource
PDF_place_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , float $sx , float $sy ) : resource
PDF_process_pdi ( resource $pdfdoc , int $doc , int $page , string $optlist ) : resource
PDF_rect ( resource $p , float $x , float $y , float $width , float $height ) : resource
PDF_restore ( resource $p ) : resource
PDF_resume_page ( resource $pdfdoc , string $optlist ) : resource
PDF_rotate ( resource $p , float $phi ) : resource
PDF_save ( resource $p ) : resource
PDF_scale ( resource $p , float $sx , float $sy ) : resource
PDF_setcolor ( resource $p , string $fstype , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 ) : resource
PDF_setdash ( resource $pdfdoc , float $b , float $w ) : resource
PDF_setdashpattern ( resource $pdfdoc , string $optlist ) : resource
PDF_setflat ( resource $pdfdoc , float $flatness ) : resource
PDF_setfont ( resource $pdfdoc , int $font , float $fontsize ) : resource
PDF_setgray ( resource $p , float $g ) : resource
PDF_setgray_fill ( resource $p , float $g ) : resource
PDF_setgray_stroke ( resource $p , float $g ) : resource
PDF_setlinecap ( resource $p , int $linecap ) : resource
PDF_setlinejoin ( resource $p , int $value ) : resource
PDF_setlinewidth ( resource $p , float $width ) : resource
PDF_setmatrix ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f ) : resource
PDF_setmiterlimit ( resource $pdfdoc , float $miter ) : resource
PDF_setrgbcolor ( resource $p , float $red , float $green , float $blue ) : resource
PDF_setrgbcolor_fill ( resource $p , float $red , float $green , float $blue ) : resource
PDF_setrgbcolor_stroke ( resource $p , float $red , float $green , float $blue ) : resource
PDF_set_border_color ( resource $p , float $red , float $green , float $blue ) : resource
PDF_set_border_dash ( resource $pdfdoc , float $black , float $white ) : resource
PDF_set_border_style ( resource $pdfdoc , string $style , float $width ) : resource
PDF_set_gstate ( resource $pdfdoc , int $gstate ) : resource
PDF_set_info ( resource $p , string $key , string $value ) : resource
PDF_set_layer_dependency ( resource $pdfdoc , string $type , string $optlist ) : resource
PDF_set_parameter ( resource $p , string $key , string $value ) : resource
PDF_set_text_pos ( resource $p , float $x , float $y ) : resource
PDF_set_value ( resource $p , string $key , float $value ) : resource
PDF_shading ( resource $pdfdoc , string $shtype , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist ) : resource
PDF_shading_pattern ( resource $pdfdoc , int $shading , string $optlist ) : resource
PDF_shfill ( resource $pdfdoc , int $shading ) : resource
PDF_show ( resource $pdfdoc , string $text ) : resource
PDF_show_boxed ( resource $p , string $text , float $left , float $top , float $width , float $height , string $mode , string $feature ) : resource
PDF_show_xy ( resource $p , string $text , float $x , float $y ) : resource
PDF_skew ( resource $p , float $alpha , float $beta ) : resource
PDF_stringwidth ( resource $p , string $text , int $font , float $fontsize ) : resource
PDF_stroke ( resource $p ) : resource
PDF_suspend_page ( resource $pdfdoc , string $optlist ) : resource
PDF_translate ( resource $p , float $tx , float $ty ) : resource
PDF_utf16_to_utf8 ( resource $pdfdoc , string $utf16string ) : resource
PDF_utf32_to_utf16 ( resource $pdfdoc , string $utf32string , string $ordering ) : resource
PDF_utf8_to_utf16 ( resource $pdfdoc , string $utf8string , string $ordering ) : resource
pfsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]] ) : string
pg_affected_rows ( resource $result ) : resource
pg_cancel_query ( resource $connection ) : resource
pg_client_encoding ([ resource $connection ] ) : resource
pg_close ([ resource $connection ] ) : resource
pg_connect ( string $connection_string [, int $connect_type ] ) : string
pg_connection_busy ( resource $connection ) : resource
pg_connection_reset ( resource $connection ) : resource
pg_connection_status ( resource $connection ) : resource
pg_connect_poll ( resource $connection ) : resource
pg_consume_input ( resource $connection ) : resource
pg_convert ( resource $connection , string $table_name , array $assoc_array [, int $options = 0 ] ) : resource
pg_copy_from ( resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]] ) : resource
pg_copy_to ( resource $connection , string $table_name [, string $delimiter [, string $null_as ]] ) : resource
pg_dbname ([ resource $connection ] ) : resource
pg_delete ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] ) : resource
pg_end_copy ([ resource $connection ] ) : resource
pg_escape_bytea ([ resource $connection ], string $data ) : resource
pg_escape_identifier ([ resource $connection ], string $data ) : resource
pg_escape_literal ([ resource $connection ], string $data ) : resource
pg_escape_string ([ resource $connection ], string $data ) : resource
pg_execute ([ resource $connection ], string $stmtname , array $params ) : resource
pg_fetch_all ( resource $result [, int $result_type = PGSQL_ASSOC ] ) : resource
pg_fetch_all_columns ( resource $result [, int $column = 0 ] ) : resource
pg_fetch_array ( resource $result [, int $row [, int $result_type = PGSQL_BOTH ]] ) : resource
pg_fetch_assoc ( resource $result [, int $row ] ) : resource
pg_fetch_object ( resource $result [, int $row [, int $result_type = PGSQL_ASSOC ]] ) : resource [:OR:] ( resource $result [, int $row [, string $class_name [, array $params ]]] ) : resource
pg_fetch_result ( resource $result , int $row , mixed $field ) : resource [:OR:] ( resource $result , mixed $field ) : resource
pg_fetch_row ( resource $result [, int $row ] ) : resource
pg_field_is_null ( resource $result , int $row , mixed $field ) : resource [:OR:] ( resource $result , mixed $field ) : resource
pg_field_name ( resource $result , int $field_number ) : resource
pg_field_num ( resource $result , string $field_name ) : resource
pg_field_prtlen ( resource $result , int $row_number , mixed $field_name_or_number ) : resource [:OR:] ( resource $result , mixed $field_name_or_number ) : resource
pg_field_size ( resource $result , int $field_number ) : resource
pg_field_table ( resource $result , int $field_number [, bool $oid_only = FALSE ] ) : resource
pg_field_type ( resource $result , int $field_number ) : resource
pg_field_type_oid ( resource $result , int $field_number ) : resource
pg_flush ( resource $connection ) : resource
pg_free_result ( resource $result ) : resource
pg_get_notify ( resource $connection [, int $result_type ] ) : resource
pg_get_pid ( resource $connection ) : resource
pg_get_result ([ resource $connection ] ) : resource
pg_host ([ resource $connection ] ) : resource
pg_insert ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] ) : resource
pg_last_error ([ resource $connection ] ) : resource
pg_last_notice ( resource $connection [, int $option = PGSQL_NOTICE_LAST ] ) : resource
pg_last_oid ( resource $result ) : resource
pg_lo_close ( resource $large_object ) : resource
pg_lo_create ([ resource $connection [, mixed $object_id ]] ) : resource [:OR:] ( mixed $object_id ) : resource
pg_lo_export ([ resource $connection ], int $oid , string $pathname ) : resource
pg_lo_import ([ resource $connection ], string $pathname [, mixed $object_id ] ) : resource
pg_lo_open ( resource $connection , int $oid , string $mode ) : resource
pg_lo_read ( resource $large_object [, int $len = 8192 ] ) : resource
pg_lo_read_all ( resource $large_object ) : resource
pg_lo_seek ( resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ] ) : resource
pg_lo_tell ( resource $large_object ) : resource
pg_lo_truncate ( resource $large_object , int $size ) : resource
pg_lo_unlink ( resource $connection , int $oid ) : resource
pg_lo_write ( resource $large_object , string $data [, int $len ] ) : resource
pg_meta_data ( resource $connection , string $table_name [, bool $extended = FALSE ] ) : resource
pg_num_fields ( resource $result ) : resource
pg_num_rows ( resource $result ) : resource
pg_options ([ resource $connection ] ) : resource
pg_parameter_status ([ resource $connection ], string $param_name ) : resource
pg_pconnect ( string $connection_string [, int $connect_type ] ) : string
pg_ping ([ resource $connection ] ) : resource
pg_port ([ resource $connection ] ) : resource
pg_prepare ([ resource $connection ], string $stmtname , string $query ) : resource
pg_put_line ([ resource $connection ], string $data ) : resource
pg_query ([ resource $connection ], string $query ) : resource
pg_query_params ([ resource $connection ], string $query , array $params ) : resource
pg_result_error ( resource $result ) : resource
pg_result_error_field ( resource $result , int $fieldcode ) : resource
pg_result_seek ( resource $result , int $offset ) : resource
pg_result_status ( resource $result [, int $type = PGSQL_STATUS_LONG ] ) : resource
pg_select ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC [, int $result_type = PGSQL_ASSOC ]] ) : resource
pg_send_execute ( resource $connection , string $stmtname , array $params ) : resource
pg_send_prepare ( resource $connection , string $stmtname , string $query ) : resource
pg_send_query ( resource $connection , string $query ) : resource
pg_send_query_params ( resource $connection , string $query , array $params ) : resource
pg_set_client_encoding ([ resource $connection ], string $encoding ) : resource
pg_set_error_verbosity ([ resource $connection ], int $verbosity ) : resource
pg_socket ( resource $connection ) : resource
pg_trace ( string $pathname [, string $mode = "w" [, resource $connection ]] ) : string
pg_transaction_status ( resource $connection ) : resource
pg_tty ([ resource $connection ] ) : resource
pg_unescape_bytea ( string $data ) : string
pg_untrace ([ resource $connection ] ) : resource
pg_update ( resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ] ) : resource
pg_version ([ resource $connection ] ) : resource
phpcredits ([ int $flag = CREDITS_ALL ] ) : int
phpdbg_break_file ( string $file , int $line ) : string
phpdbg_break_function ( string $function ) : string
phpdbg_break_method ( string $class , string $method ) : string
phpdbg_break_next ( void ) : void
phpdbg_clear ( void ) : void
phpdbg_color ( int $element , string $color ) : int
phpdbg_end_oplog ([ array $options ] ) : array
phpdbg_exec ([ string $context ] ) : string
phpdbg_get_executable ([ array $options ] ) : array
phpdbg_prompt ( string $string ) : string
phpdbg_start_oplog ( void ) : void
phpinfo ([ int $what = INFO_ALL ] ) : int
phpversion ([ string $extension ] ) : string
php_check_syntax ( string $filename [, string &$error_message ] ) : string
php_ini_loaded_file ( void ) : string
php_ini_scanned_files ( void ) : string
php_logo_guid ( void ) : string
php_sapi_name ( void ) : string
php_strip_whitespace ( string $filename ) : string
php_uname ([ string $mode = "a" ] ) : string
pi ( void ) : float
png2wbmp ( string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold ) : string
popen ( string $command , string $mode ) : string
pos ( array $array ) : array
posix_access ( string $file [, int $mode = POSIX_F_OK ] ) : string
posix_ctermid ( void ) : string
posix_errno ( void ) : int
posix_getcwd ( void ) : string
posix_getegid ( void ) : int
posix_geteuid ( void ) : int
posix_getgid ( void ) : int
posix_getgrgid ( int $gid ) : int
posix_getgrnam ( string $name ) : string
posix_getgroups ( void ) : array
posix_getlogin ( void ) : string
posix_getpgid ( int $pid ) : int
posix_getpgrp ( void ) : int
posix_getpid ( void ) : int
posix_getppid ( void ) : int
posix_getpwnam ( string $username ) : string
posix_getpwuid ( int $uid ) : int
posix_getrlimit ( void ) : array
posix_getsid ( int $pid ) : int
posix_getuid ( void ) : int
posix_get_last_error ( void ) : int
posix_initgroups ( string $name , int $base_group_id ) : string
posix_isatty ( mixed $fd ) : mixed
posix_kill ( int $pid , int $sig ) : int
posix_mkfifo ( string $pathname , int $mode ) : string
posix_mknod ( string $pathname , int $mode [, int $major = 0 [, int $minor = 0 ]] ) : string
posix_setegid ( int $gid ) : int
posix_seteuid ( int $uid ) : int
posix_setgid ( int $gid ) : int
posix_setpgid ( int $pid , int $pgid ) : int
posix_setrlimit ( int $resource , int $softlimit , int $hardlimit ) : int
posix_setsid ( void ) : int
posix_setuid ( int $uid ) : int
posix_strerror ( int $errno ) : int
posix_times ( void ) : array
posix_ttyname ( mixed $fd ) : mixed
posix_uname ( void ) : array
pow ( number $base , number $exp ) : number
preg_filter ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] ) : mixed
preg_grep ( string $pattern , array $input [, int $flags = 0 ] ) : string
preg_last_error ( void ) : int
preg_match ( string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]] ) : string
preg_match_all ( string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]] ) : string
preg_quote ( string $str [, string $delimiter = NULL ] ) : string
preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] ) : mixed
preg_replace_callback ( mixed $pattern , callable $callback , mixed $subject [, int $limit = -1 [, int &$count ]] ) : mixed
preg_replace_callback_array ( array $patterns_and_callbacks , mixed $subject [, int $limit = -1 [, int &$count ]] ) : array
preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] ) : string
prev ( array &$array ) : array
print ( string $arg ) : string
printf ( string $format [, mixed $args [, mixed $... ]] ) : string
print_r ( mixed $expression [, bool $return = FALSE ] ) : mixed
proc_close ( resource $process ) : resource
proc_get_status ( resource $process ) : resource
proc_nice ( int $increment ) : int
proc_open ( string $cmd , array $descriptorspec , array &$pipes [, string $cwd = NULL [, array $env = NULL [, array $other_options = NULL ]]] ) : string
proc_terminate ( resource $process [, int $signal = 15 ] ) : resource
property_exists ( mixed $class , string $property ) : mixed
pspell_add_to_personal ( int $dictionary_link , string $word ) : int
pspell_add_to_session ( int $dictionary_link , string $word ) : int
pspell_check ( int $dictionary_link , string $word ) : int
pspell_clear_session ( int $dictionary_link ) : int
pspell_config_create ( string $language [, string $spelling [, string $jargon [, string $encoding ]]] ) : string
pspell_config_data_dir ( int $conf , string $directory ) : int
pspell_config_dict_dir ( int $conf , string $directory ) : int
pspell_config_ignore ( int $dictionary_link , int $n ) : int
pspell_config_mode ( int $dictionary_link , int $mode ) : int
pspell_config_personal ( int $dictionary_link , string $file ) : int
pspell_config_repl ( int $dictionary_link , string $file ) : int
pspell_config_runtogether ( int $dictionary_link , bool $flag ) : int
pspell_config_save_repl ( int $dictionary_link , bool $flag ) : int
pspell_new ( string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] ) : string
pspell_new_config ( int $config ) : int
pspell_new_personal ( string $personal , string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] ) : string
pspell_save_wordlist ( int $dictionary_link ) : int
pspell_store_replacement ( int $dictionary_link , string $misspelled , string $correct ) : int
pspell_suggest ( int $dictionary_link , string $word ) : int
ps_add_bookmark ( resource $psdoc , string $text [, int $parent = 0 [, int $open = 0 ]] ) : resource
ps_add_launchlink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename ) : resource
ps_add_locallink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , int $page , string $dest ) : resource
ps_add_note ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open ) : resource
ps_add_pdflink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename , int $page , string $dest ) : resource
ps_add_weblink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $url ) : resource
ps_arc ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta ) : resource
ps_arcn ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta ) : resource
ps_begin_page ( resource $psdoc , float $width , float $height ) : resource
ps_begin_pattern ( resource $psdoc , float $width , float $height , float $xstep , float $ystep , int $painttype ) : resource
ps_begin_template ( resource $psdoc , float $width , float $height ) : resource
ps_circle ( resource $psdoc , float $x , float $y , float $radius ) : resource
ps_clip ( resource $psdoc ) : resource
ps_close ( resource $psdoc ) : resource
ps_closepath ( resource $psdoc ) : resource
ps_closepath_stroke ( resource $psdoc ) : resource
ps_close_image ( resource $psdoc , int $imageid ) : resource
ps_continue_text ( resource $psdoc , string $text ) : resource
ps_curveto ( resource $psdoc , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 ) : resource
ps_delete ( resource $psdoc ) : resource
ps_end_page ( resource $psdoc ) : resource
ps_end_pattern ( resource $psdoc ) : resource
ps_end_template ( resource $psdoc ) : resource
ps_fill ( resource $psdoc ) : resource
ps_fill_stroke ( resource $psdoc ) : resource
ps_findfont ( resource $psdoc , string $fontname , string $encoding [, bool $embed = FALSE ] ) : resource
ps_get_buffer ( resource $psdoc ) : resource
ps_get_parameter ( resource $psdoc , string $name [, float $modifier ] ) : resource
ps_get_value ( resource $psdoc , string $name [, float $modifier ] ) : resource
ps_hyphenate ( resource $psdoc , string $text ) : resource
ps_include_file ( resource $psdoc , string $file ) : resource
ps_lineto ( resource $psdoc , float $x , float $y ) : resource
ps_makespotcolor ( resource $psdoc , string $name [, int $reserved = 0 ] ) : resource
ps_moveto ( resource $psdoc , float $x , float $y ) : resource
ps_new ( void ) : resource
ps_open_file ( resource $psdoc [, string $filename ] ) : resource
ps_open_image ( resource $psdoc , string $type , string $source , string $data , int $lenght , int $width , int $height , int $components , int $bpc , string $params ) : resource
ps_open_image_file ( resource $psdoc , string $type , string $filename [, string $stringparam [, int $intparam = 0 ]] ) : resource
ps_open_memory_image ( resource $psdoc , int $gd ) : resource
ps_place_image ( resource $psdoc , int $imageid , float $x , float $y , float $scale ) : resource
ps_rect ( resource $psdoc , float $x , float $y , float $width , float $height ) : resource
ps_restore ( resource $psdoc ) : resource
ps_rotate ( resource $psdoc , float $rot ) : resource
ps_save ( resource $psdoc ) : resource
ps_scale ( resource $psdoc , float $x , float $y ) : resource
ps_setcolor ( resource $psdoc , string $type , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 ) : resource
ps_setdash ( resource $psdoc , float $on , float $off ) : resource
ps_setflat ( resource $psdoc , float $value ) : resource
ps_setfont ( resource $psdoc , int $fontid , float $size ) : resource
ps_setgray ( resource $psdoc , float $gray ) : resource
ps_setlinecap ( resource $psdoc , int $type ) : resource
ps_setlinejoin ( resource $psdoc , int $type ) : resource
ps_setlinewidth ( resource $psdoc , float $width ) : resource
ps_setmiterlimit ( resource $psdoc , float $value ) : resource
ps_setoverprintmode ( resource $psdoc , int $mode ) : resource
ps_setpolydash ( resource $psdoc , float $arr ) : resource
ps_set_border_color ( resource $psdoc , float $red , float $green , float $blue ) : resource
ps_set_border_dash ( resource $psdoc , float $black , float $white ) : resource
ps_set_border_style ( resource $psdoc , string $style , float $width ) : resource
ps_set_info ( resource $p , string $key , string $val ) : resource
ps_set_parameter ( resource $psdoc , string $name , string $value ) : resource
ps_set_text_pos ( resource $psdoc , float $x , float $y ) : resource
ps_set_value ( resource $psdoc , string $name , float $value ) : resource
ps_shading ( resource $psdoc , string $type , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist ) : resource
ps_shading_pattern ( resource $psdoc , int $shadingid , string $optlist ) : resource
ps_shfill ( resource $psdoc , int $shadingid ) : resource
ps_show ( resource $psdoc , string $text ) : resource
ps_show2 ( resource $psdoc , string $text , int $len ) : resource
ps_show_boxed ( resource $psdoc , string $text , float $left , float $bottom , float $width , float $height , string $hmode [, string $feature ] ) : resource
ps_show_xy ( resource $psdoc , string $text , float $x , float $y ) : resource
ps_show_xy2 ( resource $psdoc , string $text , int $len , float $xcoor , float $ycoor ) : resource
ps_stringwidth ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] ) : resource
ps_string_geometry ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] ) : resource
ps_stroke ( resource $psdoc ) : resource
ps_symbol ( resource $psdoc , int $ord ) : resource
ps_symbol_name ( resource $psdoc , int $ord [, int $fontid = 0 ] ) : resource
ps_symbol_width ( resource $psdoc , int $ord [, int $fontid = 0 [, float $size = 0.0 ]] ) : resource
ps_translate ( resource $psdoc , float $x , float $y ) : resource
putenv ( string $setting ) : string
px_close ( resource $pxdoc ) : resource
px_create_fp ( resource $pxdoc , resource $file , array $fielddesc ) : resource
px_date2string ( resource $pxdoc , int $value , string $format ) : resource
px_delete ( resource $pxdoc ) : resource
px_delete_record ( resource $pxdoc , int $num ) : resource
px_get_field ( resource $pxdoc , int $fieldno ) : resource
px_get_info ( resource $pxdoc ) : resource
px_get_parameter ( resource $pxdoc , string $name ) : resource
px_get_record ( resource $pxdoc , int $num [, int $mode = 0 ] ) : resource
px_get_schema ( resource $pxdoc [, int $mode = 0 ] ) : resource
px_get_value ( resource $pxdoc , string $name ) : resource
px_insert_record ( resource $pxdoc , array $data ) : resource
px_new ( void ) : resource
px_numfields ( resource $pxdoc ) : resource
px_numrecords ( resource $pxdoc ) : resource
px_open_fp ( resource $pxdoc , resource $file ) : resource
px_put_record ( resource $pxdoc , array $record [, int $recpos = -1 ] ) : resource
px_retrieve_record ( resource $pxdoc , int $num [, int $mode = 0 ] ) : resource
px_set_blob_file ( resource $pxdoc , string $filename ) : resource
px_set_parameter ( resource $pxdoc , string $name , string $value ) : resource
px_set_tablename ( resource $pxdoc , string $name ) : resource
px_set_targetencoding ( resource $pxdoc , string $encoding ) : resource
px_set_value ( resource $pxdoc , string $name , float $value ) : resource
px_timestamp2string ( resource $pxdoc , float $value , string $format ) : resource
px_update_record ( resource $pxdoc , array $data , int $num ) : resource
quoted_printable_decode ( string $str ) : string
quoted_printable_encode ( string $str ) : string
quotemeta ( string $str ) : string
rad2deg ( float $number ) : float
radius_acct_open ( void ) : resource
radius_add_server ( resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries ) : resource
radius_auth_open ( void ) : resource
radius_close ( resource $radius_handle ) : resource
radius_config ( resource $radius_handle , string $file ) : resource
radius_create_request ( resource $radius_handle , int $type ) : resource
radius_cvt_addr ( string $data ) : string
radius_cvt_int ( string $data ) : string
radius_cvt_string ( string $data ) : string
radius_demangle ( resource $radius_handle , string $mangled ) : resource
radius_demangle_mppe_key ( resource $radius_handle , string $mangled ) : resource
radius_get_attr ( resource $radius_handle ) : resource
radius_get_tagged_attr_data ( string $data ) : string
radius_get_tagged_attr_tag ( string $data ) : string
radius_get_vendor_attr ( string $data ) : string
radius_put_addr ( resource $radius_handle , int $type , string $addr [, int $options = 0 [, int $tag ]] ) : resource
radius_put_attr ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] ) : resource
radius_put_int ( resource $radius_handle , int $type , int $value [, int $options = 0 [, int $tag ]] ) : resource
radius_put_string ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] ) : resource
radius_put_vendor_addr ( resource $radius_handle , int $vendor , int $type , string $addr ) : resource
radius_put_vendor_attr ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] ) : resource
radius_put_vendor_int ( resource $radius_handle , int $vendor , int $type , int $value [, int $options = 0 [, int $tag ]] ) : resource
radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] ) : resource
radius_request_authenticator ( resource $radius_handle ) : resource
radius_salt_encrypt_attr ( resource $radius_handle , string $data ) : resource
radius_send_request ( resource $radius_handle ) : resource
radius_server_secret ( resource $radius_handle ) : resource
radius_strerror ( resource $radius_handle ) : resource
rand ( void ) : int [:OR:] ( int $min , int $max ) : int
random_bytes ( int $length ) : int
random_int ( int $min , int $max ) : int
range ( mixed $start , mixed $end [, number $step = 1 ] ) : mixed
rar_wrapper_cache_stats ( void ) : string
rawurldecode ( string $str ) : string
rawurlencode ( string $str ) : string
readdir ([ resource $dir_handle ] ) : resource
readfile ( string $filename [, bool $use_include_path = FALSE [, resource $context ]] ) : string
readgzfile ( string $filename [, int $use_include_path = 0 ] ) : string
readline ([ string $prompt = NULL ] ) : string
readline_add_history ( string $line ) : string
readline_callback_handler_install ( string $prompt , callable $callback ) : string
readline_callback_handler_remove ( void ) : bool
readline_callback_read_char ( void ) : void
readline_clear_history ( void ) : bool
readline_completion_function ( callable $function ) : callable
readline_info ([ string $varname [, string $newvalue ]] ) : string
readline_list_history ( void ) : array
readline_on_new_line ( void ) : void
readline_read_history ([ string $filename ] ) : string
readline_redisplay ( void ) : void
readline_write_history ([ string $filename ] ) : string
readlink ( string $path ) : string
read_exif_data ( mixed $stream [, string $sections = NULL [, bool $arrays = FALSE [, bool $thumbnail = FALSE ]]] ) : mixed
realpath ( string $path ) : string
realpath_cache_get ( void ) : array
realpath_cache_size ( void ) : int
recode ( string $request , string $string ) : string
recode_file ( string $request , resource $input , resource $output ) : string
recode_string ( string $request , string $string ) : string
register_shutdown_function ( callable $callback [, mixed $... ] ) : callable
register_tick_function ( callable $function [, mixed $... ] ) : callable
rename ( string $oldname , string $newname [, resource $context ] ) : string
rename_function ( string $original_name , string $new_name ) : string
reset ( array &$array ) : array
restore_error_handler ( void ) : bool
restore_exception_handler ( void ) : bool
restore_include_path ( void ) : void
rewind ( resource $handle ) : resource
rewinddir ([ resource $dir_handle ] ) : resource
rmdir ( string $dirname [, resource $context ] ) : string
round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] ) : float
rpm_close ( resource $rpmr ) : resource
rpm_get_tag ( resource $rpmr , int $tagnum ) : resource
rpm_is_valid ( string $filename ) : string
rpm_open ( string $filename ) : string
rpm_version ( void ) : string
rrdc_disconnect ( void ) : void
rrd_create ( string $filename , array $options ) : string
rrd_error ( void ) : string
rrd_fetch ( string $filename , array $options ) : string
rrd_first ( string $file [, int $raaindex = 0 ] ) : string
rrd_graph ( string $filename , array $options ) : string
rrd_info ( string $filename ) : string
rrd_last ( string $filename ) : string
rrd_lastupdate ( string $filename ) : string
rrd_restore ( string $xml_file , string $rrd_file [, array $options ] ) : string
rrd_tune ( string $filename , array $options ) : string
rrd_update ( string $filename , array $options ) : string
rrd_version ( void ) : string
rrd_xport ( array $options ) : array
rsort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) : array
rtrim ( string $str [, string $character_mask ] ) : string
runkit_class_adopt ( string $classname , string $parentname ) : string
runkit_class_emancipate ( string $classname ) : string
runkit_constant_add ( string $constname , mixed $value ) : string
runkit_constant_redefine ( string $constname , mixed $newvalue ) : string
runkit_constant_remove ( string $constname ) : string
runkit_function_add ( string $funcname , string $arglist , string $code [, bool $return_by_reference = NULL [, string $doc_comment = NULL ]] ) : string [:OR:] ( string $funcname , Closure $closure [, string $doc_comment = NULL ] ) : string
runkit_function_copy ( string $funcname , string $targetname ) : string
runkit_function_redefine ( string $funcname , string $arglist , string $code [, bool $return_by_reference = NULL [, string $doc_comment = NULL ]] ) : string [:OR:] ( string $funcname , Closure $closure [, string $doc_comment = NULL ] ) : string
runkit_function_remove ( string $funcname ) : string
runkit_function_rename ( string $funcname , string $newname ) : string
runkit_import ( string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS ] ) : string
runkit_lint ( string $code ) : string
runkit_lint_file ( string $filename ) : string
runkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = NULL ]] ) : string [:OR:] ( string $classname , string $methodname , Closure $closure [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = NULL ]] ) : string
runkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] ) : string
runkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = NULL ]] ) : string [:OR:] ( string $classname , string $methodname , Closure $closure [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = NULL ]] ) : string
runkit_method_remove ( string $classname , string $methodname ) : string
runkit_method_rename ( string $classname , string $methodname , string $newname ) : string
runkit_return_value_used ( void ) : bool
runkit_sandbox_output_handler ( object $sandbox [, mixed $callback ] ) : object
runkit_superglobals ( void ) : array
sapi_windows_cp_conv ( int|string $in_codepage , int|string $out_codepage , string $subject ) : int|string
sapi_windows_cp_get ( string $kind ) : string
sapi_windows_cp_is_utf8 ( void ) : bool
sapi_windows_cp_set ( int $cp ) : int
sapi_windows_vt100_support ( resource $stream [, bool $enable ] ) : resource
scandir ( string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context ]] ) : string
seaslog_get_author ( void ) : string
seaslog_get_version ( void ) : string
sem_acquire ( resource $sem_identifier [, bool $nowait = FALSE ] ) : resource
sem_get ( int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]] ) : int
sem_release ( resource $sem_identifier ) : resource
sem_remove ( resource $sem_identifier ) : resource
serialize ( mixed $value ) : mixed
session_abort ( void ) : bool
session_cache_expire ([ string $new_cache_expire ] ) : string
session_cache_limiter ([ string $cache_limiter ] ) : string
session_commit ( void ) : bool
session_create_id ([ string $prefix ] ) : string
session_decode ( string $data ) : string
session_destroy ( void ) : bool
session_encode ( void ) : string
session_gc ( void ) : int
session_get_cookie_params ( void ) : array
session_id ([ string $id ] ) : string
session_is_registered ( string $name ) : string
session_module_name ([ string $module ] ) : string
session_name ([ string $name ] ) : string
session_pgsql_add_error ( int $error_level [, string $error_message ] ) : int
session_pgsql_get_error ([ bool $with_error_message = FALSE ] ) : bool
session_pgsql_get_field ( void ) : string
session_pgsql_reset ( void ) : bool
session_pgsql_set_field ( string $value ) : string
session_pgsql_status ( void ) : array
session_regenerate_id ([ bool $delete_old_session = FALSE ] ) : bool
session_register ( mixed $name [, mixed $... ] ) : mixed
session_register_shutdown ( void ) : void
session_reset ( void ) : bool
session_save_path ([ string $path ] ) : string
session_set_cookie_params ( int $lifetime [, string $path [, string $domain [, bool $secure = FALSE [, bool $httponly = FALSE ]]]] ) : int [:OR:] ( array $options ) : int
session_set_save_handler ( callable $open , callable $close , callable $read , callable $write , callable $destroy , callable $gc [, callable $create_sid [, callable $validate_sid [, callable $update_timestamp ]]] ) : callable [:OR:] ( object $sessionhandler [, bool $register_shutdown = TRUE ] ) : callable
session_start ([ array $options = array() ] ) : array
session_status ( void ) : int
session_unregister ( string $name ) : string
session_unset ( void ) : bool
session_write_close ( void ) : bool
setcookie ( string $name [, string $value = "" [, int $expires = 0 [, string $path = "" [, string $domain = "" [, bool $secure = FALSE [, bool $httponly = FALSE ]]]]]] ) : string [:OR:] ( string $name [, string $value = "" [, array $options = [] ]] ) : string
setlocale ( int $category , string $locale [, string $... ] ) : int [:OR:] ( int $category , array $locale ) : int
setproctitle ( string $title ) : string
setrawcookie ( string $name [, string $value [, int $expires = 0 [, string $path [, string $domain [, bool $secure = FALSE [, bool $httponly = FALSE ]]]]]] ) : string [:OR:] ( string $name [, string $value [, array $options = [] ]] ) : string
setthreadtitle ( string $title ) : string
settype ( mixed &$var , string $type ) : mixed
set_error_handler ( callable $error_handler [, int $error_types = E_ALL | E_STRICT ] ) : callable
set_exception_handler ( callable $exception_handler ) : callable
set_file_buffer ( resource $stream , int $buffer ) : resource
set_include_path ( string $new_include_path ) : string
set_magic_quotes_runtime ( bool $new_setting ) : bool
set_socket_blocking ( resource $stream , bool $mode ) : resource
set_time_limit ( int $seconds ) : int
sha1 ( string $str [, bool $raw_output = FALSE ] ) : string
sha1_file ( string $filename [, bool $raw_output = FALSE ] ) : string
shell_exec ( string $cmd ) : string
shmop_close ( resource $shmid ) : resource
shmop_delete ( resource $shmid ) : resource
shmop_open ( int $key , string $flags , int $mode , int $size ) : int
shmop_read ( resource $shmid , int $start , int $count ) : resource
shmop_size ( resource $shmid ) : resource
shmop_write ( resource $shmid , string $data , int $offset ) : resource
shm_attach ( int $key [, int $memsize [, int $perm = 0666 ]] ) : int
shm_detach ( resource $shm_identifier ) : resource
shm_get_var ( resource $shm_identifier , int $variable_key ) : resource
shm_has_var ( resource $shm_identifier , int $variable_key ) : resource
shm_put_var ( resource $shm_identifier , int $variable_key , mixed $variable ) : resource
shm_remove ( resource $shm_identifier ) : resource
shm_remove_var ( resource $shm_identifier , int $variable_key ) : resource
show_source ( string $filename [, bool $return = FALSE ] ) : string
shuffle ( array &$array ) : array
similar_text ( string $first , string $second [, float &$percent ] ) : string
simplexml_import_dom ( DOMNode $node [, string $class_name = "SimpleXMLElement" ] ) : DOMNode
simplexml_load_file ( string $filename [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns = "" [, bool $is_prefix = FALSE ]]]] ) : string
simplexml_load_string ( string $data [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns = "" [, bool $is_prefix = FALSE ]]]] ) : string
sin ( float $arg ) : float
sinh ( float $arg ) : float
sizeof ( mixed $array_or_countable [, int $mode = COUNT_NORMAL ] ) : mixed
sleep ( int $seconds ) : int
snmp2_get ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp2_getnext ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp2_real_walk ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp2_set ( string $host , string $community , string $object_id , string $type , string $value [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp2_walk ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp3_get ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp3_getnext ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp3_real_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp3_set ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id , string $type , string $value [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp3_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmpget ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmpgetnext ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmprealwalk ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmpset ( string $host , string $community , string $object_id , string $type , mixed $value [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmpwalk ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmpwalkoid ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) : string
snmp_get_quick_print ( void ) : bool
snmp_get_valueretrieval ( void ) : int
snmp_read_mib ( string $filename ) : string
snmp_set_enum_print ( int $enum_print ) : int
snmp_set_oid_numeric_print ( int $oid_format ) : int
snmp_set_oid_output_format ( int $oid_format = SNMP_OID_OUTPUT_MODULE ) : int
snmp_set_quick_print ( bool $quick_print ) : bool
snmp_set_valueretrieval ( int $method = SNMP_VALUE_LIBRARY ) : int
socket_accept ( resource $socket ) : resource
socket_addrinfo_bind ( resource $addr ) : resource
socket_addrinfo_connect ( resource $addr ) : resource
socket_addrinfo_explain ( resource $addr ) : resource
socket_addrinfo_lookup ( string $host [, string $service [, array $hints ]] ) : string
socket_bind ( resource $socket , string $address [, int $port = 0 ] ) : resource
socket_clear_error ([ resource $socket ] ) : resource
socket_close ( resource $socket ) : resource
socket_cmsg_space ( int $level , int $type [, int $n = 0 ] ) : int
socket_connect ( resource $socket , string $address [, int $port = 0 ] ) : resource
socket_create ( int $domain , int $type , int $protocol ) : int
socket_create_listen ( int $port [, int $backlog = 128 ] ) : int
socket_create_pair ( int $domain , int $type , int $protocol , array &$fd ) : int
socket_export_stream ( resource $socket ) : resource
socket_getopt ( resource $socket , int $level , int $optname ) : resource
socket_getpeername ( resource $socket , string &$address [, int &$port ] ) : resource
socket_getsockname ( resource $socket , string &$addr [, int &$port ] ) : resource
socket_get_option ( resource $socket , int $level , int $optname ) : resource
socket_get_status ( resource $stream ) : resource
socket_import_stream ( resource $stream ) : resource
socket_last_error ([ resource $socket ] ) : resource
socket_listen ( resource $socket [, int $backlog = 0 ] ) : resource
socket_read ( resource $socket , int $length [, int $type = PHP_BINARY_READ ] ) : resource
socket_recv ( resource $socket , string &$buf , int $len , int $flags ) : resource
socket_recvfrom ( resource $socket , string &$buf , int $len , int $flags , string &$name [, int &$port ] ) : resource
socket_recvmsg ( resource $socket , array &$message [, int $flags = 0 ] ) : resource
socket_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] ) : array
socket_send ( resource $socket , string $buf , int $len , int $flags ) : resource
socket_sendmsg ( resource $socket , array $message [, int $flags = 0 ] ) : resource
socket_sendto ( resource $socket , string $buf , int $len , int $flags , string $addr [, int $port = 0 ] ) : resource
socket_setopt ( resource $socket , int $level , int $optname , mixed $optval ) : resource
socket_set_block ( resource $socket ) : resource
socket_set_blocking ( resource $stream , bool $mode ) : resource
socket_set_nonblock ( resource $socket ) : resource
socket_set_option ( resource $socket , int $level , int $optname , mixed $optval ) : resource
socket_set_timeout ( resource $stream , int $seconds [, int $microseconds = 0 ] ) : resource
socket_shutdown ( resource $socket [, int $how = 2 ] ) : resource
socket_strerror ( int $errno ) : int
socket_write ( resource $socket , string $buffer [, int $length = 0 ] ) : resource
sodium_add ( string &$val , string $addv ) : string
sodium_base642bin ( string $b64 , int $id [, string $ignore ] ) : string
sodium_bin2base64 ( string $bin , int $id ) : string
sodium_bin2hex ( string $bin ) : string
sodium_compare ( string $buf1 , string $buf2 ) : string
sodium_crypto_aead_aes256gcm_decrypt ( string $ciphertext , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_aes256gcm_encrypt ( string $msg , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_aes256gcm_is_available ( void ) : bool
sodium_crypto_aead_aes256gcm_keygen ( void ) : string
sodium_crypto_aead_chacha20poly1305_decrypt ( string $ciphertext , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_chacha20poly1305_encrypt ( string $msg , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_chacha20poly1305_ietf_decrypt ( string $ciphertext , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_chacha20poly1305_ietf_encrypt ( string $msg , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_chacha20poly1305_ietf_keygen ( void ) : string
sodium_crypto_aead_chacha20poly1305_keygen ( void ) : string
sodium_crypto_aead_xchacha20poly1305_ietf_decrypt ( string $ciphertext , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_xchacha20poly1305_ietf_encrypt ( string $msg , string $ad , string $nonce , string $key ) : string
sodium_crypto_aead_xchacha20poly1305_ietf_keygen ( void ) : string
sodium_crypto_auth ( string $msg , string $key ) : string
sodium_crypto_auth_keygen ( void ) : string
sodium_crypto_auth_verify ( string $signature , string $msg , string $key ) : string
sodium_crypto_box ( string $msg , string $nonce , string $key ) : string
sodium_crypto_box_keypair ( void ) : string
sodium_crypto_box_keypair_from_secretkey_and_publickey ( string $secret_key , string $public_key ) : string
sodium_crypto_box_open ( string $ciphertext , string $nonce , string $key ) : string
sodium_crypto_box_publickey ( string $key ) : string
sodium_crypto_box_publickey_from_secretkey ( string $key ) : string
sodium_crypto_box_seal ( string $msg , string $key ) : string
sodium_crypto_box_seal_open ( string $ciphertext , string $key ) : string
sodium_crypto_box_secretkey ( string $key ) : string
sodium_crypto_box_seed_keypair ( string $key ) : string
sodium_crypto_generichash ( string $msg [, string $key [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES ]] ) : string
sodium_crypto_generichash_final ( string &$state [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES ] ) : string
sodium_crypto_generichash_init ([ string $key [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES ]] ) : string
sodium_crypto_generichash_keygen ( void ) : string
sodium_crypto_generichash_update ( string &$state , string $msg ) : string
sodium_crypto_kdf_derive_from_key ( int $subkey_len , int $subkey_id , string $context , string $key ) : int
sodium_crypto_kdf_keygen ( void ) : string
sodium_crypto_kx_client_session_keys ( string $client_keypair , string $server_key ) : string
sodium_crypto_kx_keypair ( void ) : string
sodium_crypto_kx_publickey ( string $key ) : string
sodium_crypto_kx_secretkey ( string $key ) : string
sodium_crypto_kx_seed_keypair ( string $string ) : string
sodium_crypto_kx_server_session_keys ( string $server_keypair , string $client_key ) : string
sodium_crypto_pwhash ( int $length , string $password , string $salt , int $opslimit , int $memlimit [, int $alg ] ) : int
sodium_crypto_pwhash_scryptsalsa208sha256 ( int $length , string $password , string $salt , int $opslimit , int $memlimit ) : int
sodium_crypto_pwhash_scryptsalsa208sha256_str ( string $password , int $opslimit , int $memlimit ) : string
sodium_crypto_pwhash_scryptsalsa208sha256_str_verify ( string $hash , string $password ) : string
sodium_crypto_pwhash_str ( string $password , int $opslimit , int $memlimit ) : string
sodium_crypto_pwhash_str_needs_rehash ( string $password , int $opslimit , int $memlimit ) : string
sodium_crypto_pwhash_str_verify ( string $hash , string $password ) : string
sodium_crypto_scalarmult ( string $n , string $p ) : string
sodium_crypto_scalarmult_base ( string $key ) : string
sodium_crypto_secretbox ( string $string , string $nonce , string $key ) : string
sodium_crypto_secretbox_keygen ( void ) : string
sodium_crypto_secretbox_open ( string $ciphertext , string $nonce , string $key ) : string
sodium_crypto_secretstream_xchacha20poly1305_init_pull ( string $header , string $key ) : string
sodium_crypto_secretstream_xchacha20poly1305_init_push ( string $key ) : string
sodium_crypto_secretstream_xchacha20poly1305_keygen ( void ) : string
sodium_crypto_secretstream_xchacha20poly1305_pull ( string &$state , string $c [, string $ad ] ) : string
sodium_crypto_secretstream_xchacha20poly1305_push ( string &$state , string $msg [, string $ad [, int $tag ]] ) : string
sodium_crypto_secretstream_xchacha20poly1305_rekey ( string &$state ) : string
sodium_crypto_shorthash ( string $msg , string $key ) : string
sodium_crypto_shorthash_keygen ( void ) : string
sodium_crypto_sign ( string $msg , string $secret_key ) : string
sodium_crypto_sign_detached ( string $msg , string $secretkey ) : string
sodium_crypto_sign_ed25519_pk_to_curve25519 ( string $key ) : string
sodium_crypto_sign_ed25519_sk_to_curve25519 ( string $key ) : string
sodium_crypto_sign_keypair ( void ) : string
sodium_crypto_sign_keypair_from_secretkey_and_publickey ( string $secret_key , string $public_key ) : string
sodium_crypto_sign_open ( string $string , string $public_key ) : string
sodium_crypto_sign_publickey ( string $keypair ) : string
sodium_crypto_sign_publickey_from_secretkey ( string $key ) : string
sodium_crypto_sign_secretkey ( string $key ) : string
sodium_crypto_sign_seed_keypair ( string $key ) : string
sodium_crypto_sign_verify_detached ( string $signature , string $msg , string $public_key ) : string
sodium_crypto_stream ( int $length , string $nonce , string $key ) : int
sodium_crypto_stream_keygen ( void ) : string
sodium_crypto_stream_xor ( string $msg , string $nonce , string $key ) : string
sodium_hex2bin ( string $hex [, string $ignore ] ) : string
sodium_increment ( string &$val ) : string
sodium_memcmp ( string $buf1 , string $buf2 ) : string
sodium_memzero ( string &$buf ) : string
sodium_pad ( string $unpadded , int $length ) : string
sodium_unpad ( string $padded , int $length ) : string
solr_get_version ( void ) : string
sort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) : array
soundex ( string $str ) : string
split ( string $pattern , string $string [, int $limit = -1 ] ) : string
spliti ( string $pattern , string $string [, int $limit = -1 ] ) : string
spl_autoload ( string $class_name [, string $file_extensions = spl_autoload_extensions() ] ) : string
spl_autoload_call ( string $class_name ) : string
spl_autoload_extensions ([ string $file_extensions ] ) : string
spl_autoload_functions ( void ) : array
spl_autoload_register ([ callable $autoload_function [, bool $throw = TRUE [, bool $prepend = FALSE ]]] ) : callable
spl_autoload_unregister ( mixed $autoload_function ) : mixed
spl_classes ( void ) : array
spl_object_hash ( object $obj ) : object
spl_object_id ( object $obj ) : object
sprintf ( string $format [, mixed $... ] ) : string
sqlite_array_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] ) : resource [:OR:] ( string $query , resource $dbhandle [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] ) : resource
sqlite_busy_timeout ( resource $dbhandle , int $milliseconds ) : resource
sqlite_changes ( resource $dbhandle ) : resource
sqlite_close ( resource $dbhandle ) : resource
sqlite_column ( resource $result , mixed $index_or_name [, bool $decode_binary = TRUE ] ) : resource
sqlite_create_aggregate ( resource $dbhandle , string $function_name , callable $step_func , callable $finalize_func [, int $num_args = -1 ] ) : resource
sqlite_create_function ( resource $dbhandle , string $function_name , callable $callback [, int $num_args = -1 ] ) : resource
sqlite_current ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] ) : resource
sqlite_error_string ( int $error_code ) : int
sqlite_escape_string ( string $item ) : string
sqlite_exec ( resource $dbhandle , string $query [, string &$error_msg ] ) : resource [:OR:] ( string $query , resource $dbhandle ) : resource
sqlite_factory ( string $filename [, int $mode = 0666 [, string &$error_message ]] ) : string
sqlite_fetch_all ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] ) : resource
sqlite_fetch_array ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] ) : resource
sqlite_fetch_column_types ( string $table_name , resource $dbhandle [, int $result_type = SQLITE_ASSOC ] ) : string
sqlite_fetch_object ( resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary = TRUE ]]] ) : resource
sqlite_fetch_single ( resource $result [, bool $decode_binary = TRUE ] ) : resource
sqlite_fetch_string ( resource $result [, bool $decode_binary = TRUE ] ) : resource
sqlite_field_name ( resource $result , int $field_index ) : resource
sqlite_has_more ( resource $result ) : resource
sqlite_has_prev ( resource $result ) : resource
sqlite_key ( void ) 
sqlite_last_error ( resource $dbhandle ) : resource
sqlite_last_insert_rowid ( resource $dbhandle ) : resource
sqlite_libencoding ( void ) : string
sqlite_libversion ( void ) : string
sqlite_next ( resource $result ) : resource
sqlite_num_fields ( resource $result ) : resource
sqlite_num_rows ( resource $result ) : resource
sqlite_open ( string $filename [, int $mode = 0666 [, string &$error_message ]] ) : string
sqlite_popen ( string $filename [, int $mode = 0666 [, string &$error_message ]] ) : string
sqlite_prev ( resource $result ) : resource
sqlite_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] ) : resource [:OR:] ( string $query , resource $dbhandle [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] ) : resource
sqlite_rewind ( resource $result ) : resource
sqlite_seek ( resource $result , int $rownum ) : resource
sqlite_single_query ( resource $db , string $query [, bool $first_row_only [, bool $decode_binary ]] ) : resource
sqlite_udf_decode_binary ( string $data ) : string
sqlite_udf_encode_binary ( string $data ) : string
sqlite_unbuffered_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] ) : resource [:OR:] ( string $query , resource $dbhandle [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] ) : resource
sqlite_valid ( resource $result ) : resource
sqlsrv_begin_transaction ( resource $conn ) : resource
sqlsrv_cancel ( resource $stmt ) : resource
sqlsrv_client_info ( resource $conn ) : resource
sqlsrv_close ( resource $conn ) : resource
sqlsrv_commit ( resource $conn ) : resource
sqlsrv_configure ( string $setting , mixed $value ) : string
sqlsrv_connect ( string $serverName [, array $connectionInfo ] ) : string
sqlsrv_errors ([ int $errorsOrWarnings ] ) : int
sqlsrv_execute ( resource $stmt ) : resource
sqlsrv_fetch ( resource $stmt [, int $row [, int $offset ]] ) : resource
sqlsrv_fetch_array ( resource $stmt [, int $fetchType [, int $row [, int $offset ]]] ) : resource
sqlsrv_fetch_object ( resource $stmt [, string $className [, array $ctorParams [, int $row [, int $offset ]]]] ) : resource
sqlsrv_field_metadata ( resource $stmt ) : resource
sqlsrv_free_stmt ( resource $stmt ) : resource
sqlsrv_get_config ( string $setting ) : string
sqlsrv_get_field ( resource $stmt , int $fieldIndex [, int $getAsType ] ) : resource
sqlsrv_has_rows ( resource $stmt ) : resource
sqlsrv_next_result ( resource $stmt ) : resource
sqlsrv_num_fields ( resource $stmt ) : resource
sqlsrv_num_rows ( resource $stmt ) : resource
sqlsrv_prepare ( resource $conn , string $sql [, array $params [, array $options ]] ) : resource
sqlsrv_query ( resource $conn , string $sql [, array $params [, array $options ]] ) : resource
sqlsrv_rollback ( resource $conn ) : resource
sqlsrv_rows_affected ( resource $stmt ) : resource
sqlsrv_send_stream_data ( resource $stmt ) : resource
sqlsrv_server_info ( resource $conn ) : resource
sql_regcase ( string $string ) : string
sqrt ( float $arg ) : float
srand ([ int $seed ] ) : int
sscanf ( string $str , string $format [, mixed &$... ] ) : string
ssdeep_fuzzy_compare ( string $signature1 , string $signature2 ) : string
ssdeep_fuzzy_hash ( string $to_hash ) : string
ssdeep_fuzzy_hash_filename ( string $file_name ) : string
ssh2_auth_agent ( resource $session , string $username ) : resource
ssh2_auth_hostbased_file ( resource $session , string $username , string $hostname , string $pubkeyfile , string $privkeyfile [, string $passphrase [, string $local_username ]] ) : resource
ssh2_auth_none ( resource $session , string $username ) : resource
ssh2_auth_password ( resource $session , string $username , string $password ) : resource
ssh2_auth_pubkey_file ( resource $session , string $username , string $pubkeyfile , string $privkeyfile [, string $passphrase ] ) : resource
ssh2_connect ( string $host [, int $port = 22 [, array $methods [, array $callbacks ]]] ) : string
ssh2_disconnect ( resource $session ) : resource
ssh2_exec ( resource $session , string $command [, string $pty [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] ) : resource
ssh2_fetch_stream ( resource $channel , int $streamid ) : resource
ssh2_fingerprint ( resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX ] ) : resource
ssh2_methods_negotiated ( resource $session ) : resource
ssh2_publickey_add ( resource $pkey , string $algoname , string $blob [, bool $overwrite = FALSE [, array $attributes ]] ) : resource
ssh2_publickey_init ( resource $session ) : resource
ssh2_publickey_list ( resource $pkey ) : resource
ssh2_publickey_remove ( resource $pkey , string $algoname , string $blob ) : resource
ssh2_scp_recv ( resource $session , string $remote_file , string $local_file ) : resource
ssh2_scp_send ( resource $session , string $local_file , string $remote_file [, int $create_mode = 0644 ] ) : resource
ssh2_sftp ( resource $session ) : resource
ssh2_sftp_chmod ( resource $sftp , string $filename , int $mode ) : resource
ssh2_sftp_lstat ( resource $sftp , string $path ) : resource
ssh2_sftp_mkdir ( resource $sftp , string $dirname [, int $mode = 0777 [, bool $recursive = FALSE ]] ) : resource
ssh2_sftp_readlink ( resource $sftp , string $link ) : resource
ssh2_sftp_realpath ( resource $sftp , string $filename ) : resource
ssh2_sftp_rename ( resource $sftp , string $from , string $to ) : resource
ssh2_sftp_rmdir ( resource $sftp , string $dirname ) : resource
ssh2_sftp_stat ( resource $sftp , string $path ) : resource
ssh2_sftp_symlink ( resource $sftp , string $target , string $link ) : resource
ssh2_sftp_unlink ( resource $sftp , string $filename ) : resource
ssh2_shell ( resource $session [, string $term_type = "vanilla" [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] ) : resource
ssh2_tunnel ( resource $session , string $host , int $port ) : resource
stat ( string $filename ) : string
stats_absolute_deviation ( array $a ) : array
stats_cdf_beta ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_binomial ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_cauchy ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_chisquare ( float $par1 , float $par2 , int $which ) : float
stats_cdf_exponential ( float $par1 , float $par2 , int $which ) : float
stats_cdf_f ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_gamma ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_laplace ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_logistic ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_negative_binomial ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_noncentral_chisquare ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_noncentral_f ( float $par1 , float $par2 , float $par3 , float $par4 , int $which ) : float
stats_cdf_noncentral_t ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_normal ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_poisson ( float $par1 , float $par2 , int $which ) : float
stats_cdf_t ( float $par1 , float $par2 , int $which ) : float
stats_cdf_uniform ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_cdf_weibull ( float $par1 , float $par2 , float $par3 , int $which ) : float
stats_covariance ( array $a , array $b ) : array
stats_dens_beta ( float $x , float $a , float $b ) : float
stats_dens_cauchy ( float $x , float $ave , float $stdev ) : float
stats_dens_chisquare ( float $x , float $dfr ) : float
stats_dens_exponential ( float $x , float $scale ) : float
stats_dens_f ( float $x , float $dfr1 , float $dfr2 ) : float
stats_dens_gamma ( float $x , float $shape , float $scale ) : float
stats_dens_laplace ( float $x , float $ave , float $stdev ) : float
stats_dens_logistic ( float $x , float $ave , float $stdev ) : float
stats_dens_normal ( float $x , float $ave , float $stdev ) : float
stats_dens_pmf_binomial ( float $x , float $n , float $pi ) : float
stats_dens_pmf_hypergeometric ( float $n1 , float $n2 , float $N1 , float $N2 ) : float
stats_dens_pmf_negative_binomial ( float $x , float $n , float $pi ) : float
stats_dens_pmf_poisson ( float $x , float $lb ) : float
stats_dens_t ( float $x , float $dfr ) : float
stats_dens_uniform ( float $x , float $a , float $b ) : float
stats_dens_weibull ( float $x , float $a , float $b ) : float
stats_harmonic_mean ( array $a ) : array
stats_kurtosis ( array $a ) : array
stats_rand_gen_beta ( float $a , float $b ) : float
stats_rand_gen_chisquare ( float $df ) : float
stats_rand_gen_exponential ( float $av ) : float
stats_rand_gen_f ( float $dfn , float $dfd ) : float
stats_rand_gen_funiform ( float $low , float $high ) : float
stats_rand_gen_gamma ( float $a , float $r ) : float
stats_rand_gen_ibinomial ( int $n , float $pp ) : int
stats_rand_gen_ibinomial_negative ( int $n , float $p ) : int
stats_rand_gen_int ( void ) : int
stats_rand_gen_ipoisson ( float $mu ) : float
stats_rand_gen_iuniform ( int $low , int $high ) : int
stats_rand_gen_noncenral_chisquare ( float $df , float $xnonc ) : float
stats_rand_gen_noncentral_chisquare ( float $df , float $xnonc ) : float
stats_rand_gen_noncentral_f ( float $dfn , float $dfd , float $xnonc ) : float
stats_rand_gen_noncentral_t ( float $df , float $xnonc ) : float
stats_rand_gen_normal ( float $av , float $sd ) : float
stats_rand_gen_t ( float $df ) : float
stats_rand_get_seeds ( void ) : array
stats_rand_phrase_to_seeds ( string $phrase ) : string
stats_rand_ranf ( void ) : float
stats_rand_setall ( int $iseed1 , int $iseed2 ) : int
stats_skew ( array $a ) : array
stats_standard_deviation ( array $a [, bool $sample = FALSE ] ) : array
stats_stat_binomial_coef ( int $x , int $n ) : int
stats_stat_correlation ( array $arr1 , array $arr2 ) : array
stats_stat_factorial ( int $n ) : int
stats_stat_independent_t ( array $arr1 , array $arr2 ) : array
stats_stat_innerproduct ( array $arr1 , array $arr2 ) : array
stats_stat_paired_t ( array $arr1 , array $arr2 ) : array
stats_stat_percentile ( array $arr , float $perc ) : array
stats_stat_powersum ( array $arr , float $power ) : array
stats_variance ( array $a [, bool $sample = FALSE ] ) : array
stomp_connect_error ( void ) : string
stomp_version ( void ) : string
strcasecmp ( string $str1 , string $str2 ) : string
strchr ( string $haystack , mixed $needle [, bool $before_needle = FALSE ] ) : string
strcmp ( string $str1 , string $str2 ) : string
strcoll ( string $str1 , string $str2 ) : string
strcspn ( string $subject , string $mask [, int $start [, int $length ]] ) : string
stream_bucket_append ( resource $brigade , object $bucket ) : resource
stream_bucket_make_writeable ( resource $brigade ) : resource
stream_bucket_new ( resource $stream , string $buffer ) : resource
stream_bucket_prepend ( resource $brigade , object $bucket ) : resource
stream_context_create ([ array $options [, array $params ]] ) : array
stream_context_get_default ([ array $options ] ) : array
stream_context_get_options ( resource $stream_or_context ) : resource
stream_context_get_params ( resource $stream_or_context ) : resource
stream_context_set_default ( array $options ) : array
stream_context_set_option ( resource $stream_or_context , string $wrapper , string $option , mixed $value ) : resource [:OR:] ( resource $stream_or_context , array $options ) : resource
stream_context_set_params ( resource $stream_or_context , array $params ) : resource
stream_copy_to_stream ( resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]] ) : resource
stream_filter_append ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] ) : resource
stream_filter_prepend ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] ) : resource
stream_filter_register ( string $filtername , string $classname ) : string
stream_filter_remove ( resource $stream_filter ) : resource
stream_get_contents ( resource $handle [, int $maxlength = -1 [, int $offset = -1 ]] ) : resource
stream_get_filters ( void ) : array
stream_get_line ( resource $handle , int $length [, string $ending ] ) : resource
stream_get_meta_data ( resource $stream ) : resource
stream_get_transports ( void ) : array
stream_get_wrappers ( void ) : array
stream_isatty ( resource $stream ) : resource
stream_is_local ( mixed $stream_or_url ) : mixed
stream_notification_callback ( int $notification_code , int $severity , string $message , int $message_code , int $bytes_transferred , int $bytes_max ) : int
stream_register_wrapper ( string $protocol , string $classname [, int $flags = 0 ] ) : string
stream_resolve_include_path ( string $filename ) : string
stream_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] ) : array
stream_set_blocking ( resource $stream , bool $mode ) : resource
stream_set_chunk_size ( resource $fp , int $chunk_size ) : resource
stream_set_read_buffer ( resource $stream , int $buffer ) : resource
stream_set_timeout ( resource $stream , int $seconds [, int $microseconds = 0 ] ) : resource
stream_set_write_buffer ( resource $stream , int $buffer ) : resource
stream_socket_accept ( resource $server_socket [, float $timeout = ini_get("default_socket_timeout") [, string &$peername ]] ) : resource
stream_socket_client ( string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]] ) : string
stream_socket_enable_crypto ( resource $stream , bool $enable [, int $crypto_type [, resource $session_stream ]] ) : resource
stream_socket_get_name ( resource $handle , bool $want_peer ) : resource
stream_socket_pair ( int $domain , int $type , int $protocol ) : int
stream_socket_recvfrom ( resource $socket , int $length [, int $flags = 0 [, string &$address ]] ) : resource
stream_socket_sendto ( resource $socket , string $data [, int $flags = 0 [, string $address ]] ) : resource
stream_socket_server ( string $local_socket [, int &$errno [, string &$errstr [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]] ) : string
stream_socket_shutdown ( resource $stream , int $how ) : resource
stream_supports_lock ( resource $stream ) : resource
stream_wrapper_register ( string $protocol , string $classname [, int $flags = 0 ] ) : string
stream_wrapper_restore ( string $protocol ) : string
stream_wrapper_unregister ( string $protocol ) : string
strftime ( string $format [, int $timestamp = time() ] ) : string
stripcslashes ( string $str ) : string
stripos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : string
stripslashes ( string $str ) : string
strip_tags ( string $str [, string $allowable_tags ] ) : string
stristr ( string $haystack , mixed $needle [, bool $before_needle = FALSE ] ) : string
strlen ( string $string ) : string
strnatcasecmp ( string $str1 , string $str2 ) : string
strnatcmp ( string $str1 , string $str2 ) : string
strncasecmp ( string $str1 , string $str2 , int $len ) : string
strncmp ( string $str1 , string $str2 , int $len ) : string
strpbrk ( string $haystack , string $char_list ) : string
strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : string
strptime ( string $date , string $format ) : string
strrchr ( string $haystack , mixed $needle ) : string
strrev ( string $string ) : string
strripos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : string
strrpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : string
strspn ( string $subject , string $mask [, int $start [, int $length ]] ) : string
strstr ( string $haystack , mixed $needle [, bool $before_needle = FALSE ] ) : string
strtok ( string $str , string $token ) : string [:OR:] ( string $token ) : string
strtolower ( string $string ) : string
strtotime ( string $time [, int $now = time() ] ) : string
strtoupper ( string $string ) : string
strtr ( string $str , string $from , string $to ) : string [:OR:] ( string $str , array $replace_pairs ) : string
strval ( mixed $var ) : mixed
str_getcsv ( string $input [, string $delimiter = "," [, string $enclosure = '"' [, string $escape = "\\" ]]] ) : string
str_ireplace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] ) : mixed
str_pad ( string $input , int $pad_length [, string $pad_string = " " [, int $pad_type = STR_PAD_RIGHT ]] ) : string
str_repeat ( string $input , int $multiplier ) : string
str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] ) : mixed
str_rot13 ( string $str ) : string
str_shuffle ( string $str ) : string
str_split ( string $string [, int $split_length = 1 ] ) : string
str_word_count ( string $string [, int $format = 0 [, string $charlist ]] ) : string
substr ( string $string , int $start [, int $length ] ) : string
substr_compare ( string $main_str , string $str , int $offset [, int $length [, bool $case_insensitivity = FALSE ]] ) : string
substr_count ( string $haystack , string $needle [, int $offset = 0 [, int $length ]] ) : string
substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] ) : mixed
svn_add ( string $path [, bool $recursive = TRUE [, bool $force = FALSE ]] ) : string
svn_auth_get_parameter ( string $key ) : string
svn_auth_set_parameter ( string $key , string $value ) : string
svn_blame ( string $repository_url [, int $revision_no = SVN_REVISION_HEAD ] ) : string
svn_cat ( string $repos_url [, int $revision_no ] ) : string
svn_checkout ( string $repos , string $targetpath [, int $revision [, int $flags = 0 ]] ) : string
svn_cleanup ( string $workingdir ) : string
svn_client_version ( void ) : string
svn_commit ( string $log , array $targets [, bool $recursive = TRUE ] ) : string
svn_delete ( string $path [, bool $force = FALSE ] ) : string
svn_diff ( string $path1 , int $rev1 , string $path2 , int $rev2 ) : string
svn_export ( string $frompath , string $topath [, bool $working_copy = TRUE [, int $revision_no = -1 ]] ) : string
svn_fs_abort_txn ( resource $txn ) : resource
svn_fs_apply_text ( resource $root , string $path ) : resource
svn_fs_begin_txn2 ( resource $repos , int $rev ) : resource
svn_fs_change_node_prop ( resource $root , string $path , string $name , string $value ) : resource
svn_fs_check_path ( resource $fsroot , string $path ) : resource
svn_fs_contents_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 ) : resource
svn_fs_copy ( resource $from_root , string $from_path , resource $to_root , string $to_path ) : resource
svn_fs_delete ( resource $root , string $path ) : resource
svn_fs_dir_entries ( resource $fsroot , string $path ) : resource
svn_fs_file_contents ( resource $fsroot , string $path ) : resource
svn_fs_file_length ( resource $fsroot , string $path ) : resource
svn_fs_is_dir ( resource $root , string $path ) : resource
svn_fs_is_file ( resource $root , string $path ) : resource
svn_fs_make_dir ( resource $root , string $path ) : resource
svn_fs_make_file ( resource $root , string $path ) : resource
svn_fs_node_created_rev ( resource $fsroot , string $path ) : resource
svn_fs_node_prop ( resource $fsroot , string $path , string $propname ) : resource
svn_fs_props_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 ) : resource
svn_fs_revision_prop ( resource $fs , int $revnum , string $propname ) : resource
svn_fs_revision_root ( resource $fs , int $revnum ) : resource
svn_fs_txn_root ( resource $txn ) : resource
svn_fs_youngest_rev ( resource $fs ) : resource
svn_import ( string $path , string $url , bool $nonrecursive ) : string
svn_log ( string $repos_url [, int $start_revision [, int $end_revision [, int $limit = 0 [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY ]]]] ) : string
svn_ls ( string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = FALSE [, bool $peg = FALSE ]]] ) : string
svn_mkdir ( string $path [, string $log_message ] ) : string
svn_repos_create ( string $path [, array $config [, array $fsconfig ]] ) : string
svn_repos_fs ( resource $repos ) : resource
svn_repos_fs_begin_txn_for_commit ( resource $repos , int $rev , string $author , string $log_msg ) : resource
svn_repos_fs_commit_txn ( resource $txn ) : resource
svn_repos_hotcopy ( string $repospath , string $destpath , bool $cleanlogs ) : string
svn_repos_open ( string $path ) : string
svn_repos_recover ( string $path ) : string
svn_revert ( string $path [, bool $recursive = FALSE ] ) : string
svn_status ( string $path [, int $flags = 0 ] ) : string
svn_update ( string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = TRUE ]] ) : string
swoole_async_dns_lookup ( string $hostname , callable $callback ) : string
swoole_async_read ( string $filename , callable $callback [, int $chunk_size = 65536 [, int $offset = 0 ]] ) : string
swoole_async_readfile ( string $filename , callable $callback ) : string
swoole_async_set ( array $settings ) : array
swoole_async_write ( string $filename , string $content [, integer $offset [, callable $callback ]] ) : string
swoole_async_writefile ( string $filename , string $content [, callable $callback [, int $flags = 0 ]] ) : string
swoole_client_select ( array &$read_array , array &$write_array , array &$error_array [, float $timeout = 0.5 ] ) : array
swoole_cpu_num ( void ) : int
swoole_errno ( void ) : int
swoole_event_add ( int $fd [, callable $read_callback [, callable $write_callback [, int $events = 0 ]]] ) : int
swoole_event_defer ( callable $callback ) : callable
swoole_event_del ( int $fd ) : int
swoole_event_exit ( void ) : void
swoole_event_set ( int $fd [, callable $read_callback [, callable $write_callback [, int $events = 0 ]]] ) : int
swoole_event_wait ( void ) : void
swoole_event_write ( int $fd , string $data ) : int
swoole_get_local_ip ( void ) : array
swoole_last_error ( void ) : int
swoole_load_module ( string $filename ) : string
swoole_select ( array &$read_array , array &$write_array , array &$error_array [, float $timeout ] ) : array
swoole_set_process_name ( string $process_name [, int $size = 128 ] ) : string
swoole_strerror ( int $errno [, int $error_type = 0 ] ) : int
swoole_timer_after ( int $ms , callable $callback [, mixed $param ] ) : int
swoole_timer_exists ( int $timer_id ) : int
swoole_timer_tick ( int $ms , callable $callback [, mixed $param ] ) : int
swoole_version ( void ) : string
sybase_affected_rows ([ resource $link_identifier ] ) : resource
sybase_close ([ resource $link_identifier ] ) : resource
sybase_connect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = FALSE ]]]]]] ) : string
sybase_data_seek ( resource $result_identifier , int $row_number ) : resource
sybase_deadlock_retry_count ( int $retry_count ) : int
sybase_fetch_array ( resource $result ) : resource
sybase_fetch_assoc ( resource $result ) : resource
sybase_fetch_field ( resource $result [, int $field_offset = -1 ] ) : resource
sybase_fetch_object ( resource $result [, mixed $object ] ) : resource
sybase_fetch_row ( resource $result ) : resource
sybase_field_seek ( resource $result , int $field_offset ) : resource
sybase_free_result ( resource $result ) : resource
sybase_get_last_message ( void ) : string
sybase_min_client_severity ( int $severity ) : int
sybase_min_error_severity ( int $severity ) : int
sybase_min_message_severity ( int $severity ) : int
sybase_min_server_severity ( int $severity ) : int
sybase_num_fields ( resource $result ) : resource
sybase_num_rows ( resource $result ) : resource
sybase_pconnect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]] ) : string
sybase_query ( string $query [, resource $link_identifier ] ) : string
sybase_result ( resource $result , int $row , mixed $field ) : resource
sybase_select_db ( string $database_name [, resource $link_identifier ] ) : string
sybase_set_message_handler ( callable $handler [, resource $link_identifier ] ) : callable
sybase_unbuffered_query ( string $query , resource $link_identifier [, bool $store_result ] ) : string
symlink ( string $target , string $link ) : string
syslog ( int $priority , string $message ) : int
system ( string $command [, int &$return_var ] ) : string
sys_getloadavg ( void ) : array
sys_get_temp_dir ( void ) : string
taint ( string &$string [, string $... ] ) : string
tan ( float $arg ) : float
tanh ( float $arg ) : float
tcpwrap_check ( string $daemon , string $address [, string $user [, bool $nodns = FALSE ]] ) : string
tempnam ( string $dir , string $prefix ) : string
textdomain ( string $text_domain = NULL ) : string
tidy_access_count ( tidy $object ) : tidy
tidy_config_count ( tidy $object ) : tidy
tidy_error_count ( tidy $object ) : tidy
tidy_get_output ( tidy $object ) : tidy
tidy_warning_count ( tidy $object ) : tidy
time ( void ) : int
timezone_abbreviations_list ( ) : array
timezone_identifiers_list ( ) : array
timezone_location_get ( ) : array
timezone_name_from_abbr ( string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]] ) : string
timezone_name_get ( ) : string
timezone_offset_get ( ) : int
timezone_open ( string $timezone ) : DateTimeZone
timezone_transitions_get ( ) : array
timezone_version_get ( void ) : string
time_nanosleep ( int $seconds , int $nanoseconds ) : int
time_sleep_until ( float $timestamp ) : float
tmpfile ( void ) : resource
token_get_all ( string $source [, int $flags = 0 ] ) : string
token_name ( int $token ) : int
touch ( string $filename [, int $time = time() [, int $atime ]] ) : string
trader_acos ( array $real ) : array
trader_ad ( array $high , array $low , array $close , array $volume ) : array
trader_add ( array $real0 , array $real1 ) : array
trader_adosc ( array $high , array $low , array $close , array $volume [, int $fastPeriod [, int $slowPeriod ]] ) : array
trader_adx ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_adxr ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_apo ( array $real [, int $fastPeriod [, int $slowPeriod [, int $mAType ]]] ) : array
trader_aroon ( array $high , array $low [, int $timePeriod ] ) : array
trader_aroonosc ( array $high , array $low [, int $timePeriod ] ) : array
trader_asin ( array $real ) : array
trader_atan ( array $real ) : array
trader_atr ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_avgprice ( array $open , array $high , array $low , array $close ) : array
trader_bbands ( array $real [, int $timePeriod [, float $nbDevUp [, float $nbDevDn [, int $mAType ]]]] ) : array
trader_beta ( array $real0 , array $real1 [, int $timePeriod ] ) : array
trader_bop ( array $open , array $high , array $low , array $close ) : array
trader_cci ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_cdl2crows ( array $open , array $high , array $low , array $close ) : array
trader_cdl3blackcrows ( array $open , array $high , array $low , array $close ) : array
trader_cdl3inside ( array $open , array $high , array $low , array $close ) : array
trader_cdl3linestrike ( array $open , array $high , array $low , array $close ) : array
trader_cdl3outside ( array $open , array $high , array $low , array $close ) : array
trader_cdl3starsinsouth ( array $open , array $high , array $low , array $close ) : array
trader_cdl3whitesoldiers ( array $open , array $high , array $low , array $close ) : array
trader_cdlabandonedbaby ( array $open , array $high , array $low , array $close [, float $penetration ] ) : array
trader_cdladvanceblock ( array $open , array $high , array $low , array $close ) : array
trader_cdlbelthold ( array $open , array $high , array $low , array $close ) : array
trader_cdlbreakaway ( array $open , array $high , array $low , array $close ) : array
trader_cdlclosingmarubozu ( array $open , array $high , array $low , array $close ) : array
trader_cdlconcealbabyswall ( array $open , array $high , array $low , array $close ) : array
trader_cdlcounterattack ( array $open , array $high , array $low , array $close ) : array
trader_cdldarkcloudcover ( array $open , array $high , array $low , array $close [, float $penetration ] ) : array
trader_cdldoji ( array $open , array $high , array $low , array $close ) : array
trader_cdldojistar ( array $open , array $high , array $low , array $close ) : array
trader_cdldragonflydoji ( array $open , array $high , array $low , array $close ) : array
trader_cdlengulfing ( array $open , array $high , array $low , array $close ) : array
trader_cdleveningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] ) : array
trader_cdleveningstar ( array $open , array $high , array $low , array $close [, float $penetration ] ) : array
trader_cdlgapsidesidewhite ( array $open , array $high , array $low , array $close ) : array
trader_cdlgravestonedoji ( array $open , array $high , array $low , array $close ) : array
trader_cdlhammer ( array $open , array $high , array $low , array $close ) : array
trader_cdlhangingman ( array $open , array $high , array $low , array $close ) : array
trader_cdlharami ( array $open , array $high , array $low , array $close ) : array
trader_cdlharamicross ( array $open , array $high , array $low , array $close ) : array
trader_cdlhighwave ( array $open , array $high , array $low , array $close ) : array
trader_cdlhikkake ( array $open , array $high , array $low , array $close ) : array
trader_cdlhikkakemod ( array $open , array $high , array $low , array $close ) : array
trader_cdlhomingpigeon ( array $open , array $high , array $low , array $close ) : array
trader_cdlidentical3crows ( array $open , array $high , array $low , array $close ) : array
trader_cdlinneck ( array $open , array $high , array $low , array $close ) : array
trader_cdlinvertedhammer ( array $open , array $high , array $low , array $close ) : array
trader_cdlkicking ( array $open , array $high , array $low , array $close ) : array
trader_cdlkickingbylength ( array $open , array $high , array $low , array $close ) : array
trader_cdlladderbottom ( array $open , array $high , array $low , array $close ) : array
trader_cdllongleggeddoji ( array $open , array $high , array $low , array $close ) : array
trader_cdllongline ( array $open , array $high , array $low , array $close ) : array
trader_cdlmarubozu ( array $open , array $high , array $low , array $close ) : array
trader_cdlmatchinglow ( array $open , array $high , array $low , array $close ) : array
trader_cdlmathold ( array $open , array $high , array $low , array $close [, float $penetration ] ) : array
trader_cdlmorningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] ) : array
trader_cdlmorningstar ( array $open , array $high , array $low , array $close [, float $penetration ] ) : array
trader_cdlonneck ( array $open , array $high , array $low , array $close ) : array
trader_cdlpiercing ( array $open , array $high , array $low , array $close ) : array
trader_cdlrickshawman ( array $open , array $high , array $low , array $close ) : array
trader_cdlrisefall3methods ( array $open , array $high , array $low , array $close ) : array
trader_cdlseparatinglines ( array $open , array $high , array $low , array $close ) : array
trader_cdlshootingstar ( array $open , array $high , array $low , array $close ) : array
trader_cdlshortline ( array $open , array $high , array $low , array $close ) : array
trader_cdlspinningtop ( array $open , array $high , array $low , array $close ) : array
trader_cdlstalledpattern ( array $open , array $high , array $low , array $close ) : array
trader_cdlsticksandwich ( array $open , array $high , array $low , array $close ) : array
trader_cdltakuri ( array $open , array $high , array $low , array $close ) : array
trader_cdltasukigap ( array $open , array $high , array $low , array $close ) : array
trader_cdlthrusting ( array $open , array $high , array $low , array $close ) : array
trader_cdltristar ( array $open , array $high , array $low , array $close ) : array
trader_cdlunique3river ( array $open , array $high , array $low , array $close ) : array
trader_cdlupsidegap2crows ( array $open , array $high , array $low , array $close ) : array
trader_cdlxsidegap3methods ( array $open , array $high , array $low , array $close ) : array
trader_ceil ( array $real ) : array
trader_cmo ( array $real [, int $timePeriod ] ) : array
trader_correl ( array $real0 , array $real1 [, int $timePeriod ] ) : array
trader_cos ( array $real ) : array
trader_cosh ( array $real ) : array
trader_dema ( array $real [, int $timePeriod ] ) : array
trader_div ( array $real0 , array $real1 ) : array
trader_dx ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_ema ( array $real [, int $timePeriod ] ) : array
trader_errno ( void ) : int
trader_exp ( array $real ) : array
trader_floor ( array $real ) : array
trader_get_compat ( void ) : int
trader_get_unstable_period ( int $functionId ) : int
trader_ht_dcperiod ( array $real ) : array
trader_ht_dcphase ( array $real ) : array
trader_ht_phasor ( array $real ) : array
trader_ht_sine ( array $real ) : array
trader_ht_trendline ( array $real ) : array
trader_ht_trendmode ( array $real ) : array
trader_kama ( array $real [, int $timePeriod ] ) : array
trader_linearreg ( array $real [, int $timePeriod ] ) : array
trader_linearreg_angle ( array $real [, int $timePeriod ] ) : array
trader_linearreg_intercept ( array $real [, int $timePeriod ] ) : array
trader_linearreg_slope ( array $real [, int $timePeriod ] ) : array
trader_ln ( array $real ) : array
trader_log10 ( array $real ) : array
trader_ma ( array $real [, int $timePeriod [, int $mAType ]] ) : array
trader_macd ( array $real [, int $fastPeriod [, int $slowPeriod [, int $signalPeriod ]]] ) : array
trader_macdext ( array $real [, int $fastPeriod [, int $fastMAType [, int $slowPeriod [, int $slowMAType [, int $signalPeriod [, int $signalMAType ]]]]]] ) : array
trader_macdfix ( array $real [, int $signalPeriod ] ) : array
trader_mama ( array $real [, float $fastLimit [, float $slowLimit ]] ) : array
trader_mavp ( array $real , array $periods [, int $minPeriod [, int $maxPeriod [, int $mAType ]]] ) : array
trader_max ( array $real [, int $timePeriod ] ) : array
trader_maxindex ( array $real [, int $timePeriod ] ) : array
trader_medprice ( array $high , array $low ) : array
trader_mfi ( array $high , array $low , array $close , array $volume [, int $timePeriod ] ) : array
trader_midpoint ( array $real [, int $timePeriod ] ) : array
trader_midprice ( array $high , array $low [, int $timePeriod ] ) : array
trader_min ( array $real [, int $timePeriod ] ) : array
trader_minindex ( array $real [, int $timePeriod ] ) : array
trader_minmax ( array $real [, int $timePeriod ] ) : array
trader_minmaxindex ( array $real [, int $timePeriod ] ) : array
trader_minus_di ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_minus_dm ( array $high , array $low [, int $timePeriod ] ) : array
trader_mom ( array $real [, int $timePeriod ] ) : array
trader_mult ( array $real0 , array $real1 ) : array
trader_natr ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_obv ( array $real , array $volume ) : array
trader_plus_di ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_plus_dm ( array $high , array $low [, int $timePeriod ] ) : array
trader_ppo ( array $real [, int $fastPeriod [, int $slowPeriod [, int $mAType ]]] ) : array
trader_roc ( array $real [, int $timePeriod ] ) : array
trader_rocp ( array $real [, int $timePeriod ] ) : array
trader_rocr ( array $real [, int $timePeriod ] ) : array
trader_rocr100 ( array $real [, int $timePeriod ] ) : array
trader_rsi ( array $real [, int $timePeriod ] ) : array
trader_sar ( array $high , array $low [, float $acceleration [, float $maximum ]] ) : array
trader_sarext ( array $high , array $low [, float $startValue [, float $offsetOnReverse [, float $accelerationInitLong [, float $accelerationLong [, float $accelerationMaxLong [, float $accelerationInitShort [, float $accelerationShort [, float $accelerationMaxShort ]]]]]]]] ) : array
trader_set_compat ( int $compatId ) : int
trader_set_unstable_period ( int $functionId , int $timePeriod ) : int
trader_sin ( array $real ) : array
trader_sinh ( array $real ) : array
trader_sma ( array $real [, int $timePeriod ] ) : array
trader_sqrt ( array $real ) : array
trader_stddev ( array $real [, int $timePeriod [, float $nbDev ]] ) : array
trader_stoch ( array $high , array $low , array $close [, int $fastK_Period [, int $slowK_Period [, int $slowK_MAType [, int $slowD_Period [, int $slowD_MAType ]]]]] ) : array
trader_stochf ( array $high , array $low , array $close [, int $fastK_Period [, int $fastD_Period [, int $fastD_MAType ]]] ) : array
trader_stochrsi ( array $real [, int $timePeriod [, int $fastK_Period [, int $fastD_Period [, int $fastD_MAType ]]]] ) : array
trader_sub ( array $real0 , array $real1 ) : array
trader_sum ( array $real [, int $timePeriod ] ) : array
trader_t3 ( array $real [, int $timePeriod [, float $vFactor ]] ) : array
trader_tan ( array $real ) : array
trader_tanh ( array $real ) : array
trader_tema ( array $real [, int $timePeriod ] ) : array
trader_trange ( array $high , array $low , array $close ) : array
trader_trima ( array $real [, int $timePeriod ] ) : array
trader_trix ( array $real [, int $timePeriod ] ) : array
trader_tsf ( array $real [, int $timePeriod ] ) : array
trader_typprice ( array $high , array $low , array $close ) : array
trader_ultosc ( array $high , array $low , array $close [, int $timePeriod1 [, int $timePeriod2 [, int $timePeriod3 ]]] ) : array
trader_var ( array $real [, int $timePeriod [, float $nbDev ]] ) : array
trader_wclprice ( array $high , array $low , array $close ) : array
trader_willr ( array $high , array $low , array $close [, int $timePeriod ] ) : array
trader_wma ( array $real [, int $timePeriod ] ) : array
trait_exists ( string $traitname [, bool $autoload ] ) : string
trigger_error ( string $error_msg [, int $error_type = E_USER_NOTICE ] ) : string
trim ( string $str [, string $character_mask = " \t\n\r\0\x0B" ] ) : string
uasort ( array &$array , callable $value_compare_func ) : array
ucfirst ( string $str ) : string
ucwords ( string $str [, string $delimiters = " \t\r\n\f\v" ] ) : string
udm_add_search_limit ( resource $agent , int $var , string $val ) : resource
udm_alloc_agent ( string $dbaddr [, string $dbmode ] ) : string
udm_alloc_agent_array ( array $databases ) : array
udm_api_version ( void ) : int
udm_cat_list ( resource $agent , string $category ) : resource
udm_cat_path ( resource $agent , string $category ) : resource
udm_check_charset ( resource $agent , string $charset ) : resource
udm_clear_search_limits ( resource $agent ) : resource
udm_crc32 ( resource $agent , string $str ) : resource
udm_errno ( resource $agent ) : resource
udm_error ( resource $agent ) : resource
udm_find ( resource $agent , string $query ) : resource
udm_free_agent ( resource $agent ) : resource
udm_free_ispell_data ( int $agent ) : int
udm_free_res ( resource $res ) : resource
udm_get_doc_count ( resource $agent ) : resource
udm_get_res_field ( resource $res , int $row , int $field ) : resource
udm_get_res_param ( resource $res , int $param ) : resource
udm_hash32 ( resource $agent , string $str ) : resource
udm_load_ispell_data ( resource $agent , int $var , string $val1 , string $val2 , int $flag ) : resource
udm_set_agent_param ( resource $agent , int $var , string $val ) : resource
UI\Draw\Text\Font\fontFamilies ( void ) : array
UI\quit ( void ) : void
UI\run ([ int $flags ] ) : int
uksort ( array &$array , callable $key_compare_func ) : array
umask ([ int $mask ] ) : int
uniqid ([ string $prefix = "" [, bool $more_entropy = FALSE ]] ) : string
unixtojd ([ int $timestamp = time() ] ) : int
unlink ( string $filename [, resource $context ] ) : string
unpack ( string $format , string $data [, int $offset = 0 ] ) : string
unregister_tick_function ( callable $function ) : callable
unserialize ( string $str [, array $options ] ) : string
unset ( mixed $var [, mixed $... ] ) : mixed
untaint ( string &$string [, string $... ] ) : string
uopz_add_function ( string $function , Closure $handler [, int &$flags = ZEND_ACC_PUBLIC ] ) : string [:OR:] ( string $class , string $function , Closure $handler [, int &$flags = ZEND_ACC_PUBLIC [, int &$all = TRUE ]] ) : string
uopz_allow_exit ( bool $allow ) : bool
uopz_backup ( string $function ) : string [:OR:] ( string $class , string $function ) : string
uopz_compose ( string $name , array $classes [, array $methods [, array $properties [, int $flags ]]] ) : string
uopz_copy ( string $function ) : string [:OR:] ( string $class , string $function ) : string
uopz_delete ( string $function ) : string [:OR:] ( string $class , string $function ) : string
uopz_del_function ( string $function ) : string [:OR:] ( string $class , string $function [, int &$all = TRUE ] ) : string
uopz_extend ( string $class , string $parent ) : string
uopz_flags ( string $function [, int $flags = PHP_INT_MAX ] ) : string [:OR:] ( string $class , string $function [, int $flags = PHP_INT_MAX ] ) : string
uopz_function ( string $function , Closure $handler [, int $modifiers ] ) : string [:OR:] ( string $class , string $function , Closure $handler [, int $modifiers ] ) : string
uopz_get_exit_status ( void ) : mixed
uopz_get_hook ( string $function ) : string [:OR:] ( string $class , string $function ) : string
uopz_get_mock ( string $class ) : string
uopz_get_property ( string $class , string $property ) : string [:OR:] ( object $instance , string $property ) : string
uopz_get_return ( string $function ) : string [:OR:] ( string $class , string $function ) : string
uopz_get_static ( string $class , string $function ) : string [:OR:] ( string $function ) : string
uopz_implement ( string $class , string $interface ) : string
uopz_overload ( int $opcode , Callable $callable ) : int
uopz_redefine ( string $constant , mixed $value ) : string [:OR:] ( string $class , string $constant , mixed $value ) : string
uopz_rename ( string $function , string $rename ) : string [:OR:] ( string $class , string $function , string $rename ) : string
uopz_restore ( string $function ) : string [:OR:] ( string $class , string $function ) : string
uopz_set_hook ( string $function , Closure $hook ) : string [:OR:] ( string $class , string $function , Closure $hook ) : string
uopz_set_mock ( string $class , mixed $mock ) : string
uopz_set_property ( string $class , string $property , mixed $value ) : string [:OR:] ( object $instance , string $property , mixed $value ) : string
uopz_set_return ( string $function , mixed $value [, bool $execute = FALSE ] ) : string [:OR:] ( string $class , string $function , mixed $value [, bool $execute = FALSE ] ) : string
uopz_set_static ( string $function , array $static ) : string [:OR:] ( string $class , string $function , array $static ) : string
uopz_undefine ( string $constant ) : string [:OR:] ( string $class , string $constant ) : string
uopz_unset_hook ( string $function ) : string [:OR:] ( string $class , string $function ) : string
uopz_unset_mock ( string $class ) : string
uopz_unset_return ( string $function ) : string [:OR:] ( string $class , string $function ) : string
urldecode ( string $str ) : string
urlencode ( string $str ) : string
user_error ( string $error_msg [, int $error_type = E_USER_NOTICE ] ) : string
use_soap_error_handler ([ bool $handler = TRUE ] ) : bool
usleep ( int $micro_seconds ) : int
usort ( array &$array , callable $value_compare_func ) : array
utf8_decode ( string $data ) : string
utf8_encode ( string $data ) : string
variant_abs ( mixed $val ) : mixed
variant_add ( mixed $left , mixed $right ) : mixed
variant_and ( mixed $left , mixed $right ) : mixed
variant_cast ( variant $variant , int $type ) : variant
variant_cat ( mixed $left , mixed $right ) : mixed
variant_cmp ( mixed $left , mixed $right [, int $lcid [, int $flags ]] ) : mixed
variant_date_from_timestamp ( int $timestamp ) : int
variant_date_to_timestamp ( variant $variant ) : variant
variant_div ( mixed $left , mixed $right ) : mixed
variant_eqv ( mixed $left , mixed $right ) : mixed
variant_fix ( mixed $variant ) : mixed
variant_get_type ( variant $variant ) : variant
variant_idiv ( mixed $left , mixed $right ) : mixed
variant_imp ( mixed $left , mixed $right ) : mixed
variant_int ( mixed $variant ) : mixed
variant_mod ( mixed $left , mixed $right ) : mixed
variant_mul ( mixed $left , mixed $right ) : mixed
variant_neg ( mixed $variant ) : mixed
variant_not ( mixed $variant ) : mixed
variant_or ( mixed $left , mixed $right ) : mixed
variant_pow ( mixed $left , mixed $right ) : mixed
variant_round ( mixed $variant , int $decimals ) : mixed
variant_set ( variant $variant , mixed $value ) : variant
variant_set_type ( variant $variant , int $type ) : variant
variant_sub ( mixed $left , mixed $right ) : mixed
variant_xor ( mixed $left , mixed $right ) : mixed
var_dump ( mixed $expression [, mixed $... ] ) : mixed
var_export ( mixed $expression [, bool $return = FALSE ] ) : mixed
version_compare ( string $version1 , string $version2 ) : string [:OR:] ( string $version1 , string $version2 , string $operator ) : string
vfprintf ( resource $handle , string $format , array $args ) : resource
virtual ( string $filename ) : string
vpopmail_add_alias_domain ( string $domain , string $aliasdomain ) : string
vpopmail_add_alias_domain_ex ( string $olddomain , string $newdomain ) : string
vpopmail_add_domain ( string $domain , string $dir , int $uid , int $gid ) : string
vpopmail_add_domain_ex ( string $domain , string $passwd [, string $quota [, string $bounce [, bool $apop ]]] ) : string
vpopmail_add_user ( string $user , string $domain , string $password [, string $gecos [, bool $apop ]] ) : string
vpopmail_alias_add ( string $user , string $domain , string $alias ) : string
vpopmail_alias_del ( string $user , string $domain ) : string
vpopmail_alias_del_domain ( string $domain ) : string
vpopmail_alias_get ( string $alias , string $domain ) : string
vpopmail_alias_get_all ( string $domain ) : string
vpopmail_auth_user ( string $user , string $domain , string $password [, string $apop ] ) : string
vpopmail_del_domain ( string $domain ) : string
vpopmail_del_domain_ex ( string $domain ) : string
vpopmail_del_user ( string $user , string $domain ) : string
vpopmail_error ( void ) : string
vpopmail_passwd ( string $user , string $domain , string $password [, bool $apop ] ) : string
vpopmail_set_user_quota ( string $user , string $domain , string $quota ) : string
vprintf ( string $format , array $args ) : string
vsprintf ( string $format , array $args ) : string
wddx_add_vars ( resource $packet_id , mixed $var_name [, mixed $... ] ) : resource
wddx_deserialize ( string $packet ) : string
wddx_packet_end ( resource $packet_id ) : resource
wddx_packet_start ([ string $comment ] ) : string
wddx_serialize_value ( mixed $var [, string $comment ] ) : mixed
wddx_serialize_vars ( mixed $var_name [, mixed $... ] ) : mixed
win32_continue_service ( string $servicename [, string $machine ] ) : string
win32_create_service ( array $details [, string $machine ] ) : array
win32_delete_service ( string $servicename [, string $machine ] ) : string
win32_get_last_control_message ( void ) : int
win32_pause_service ( string $servicename [, string $machine ] ) : string
win32_ps_list_procs ( void ) : array
win32_ps_stat_mem ( void ) : array
win32_ps_stat_proc ([ int $pid = 0 ] ) : int
win32_query_service_status ( string $servicename [, string $machine ] ) : string
win32_send_custom_control ( string $servicename , int $control [, string $machine ] ) : string
win32_set_service_exit_code ([ int $exitCode = 1 ] ) : int
win32_set_service_exit_mode ([ bool $gracefulMode = true ] ) : bool
win32_set_service_status ( int $status [, int $checkpoint = 0 ] ) : int
win32_start_service ( string $servicename [, string $machine ] ) : string
win32_start_service_ctrl_dispatcher ( string $name [, bool $gracefulMode = true ] ) : string
win32_stop_service ( string $servicename [, string $machine ] ) : string
wincache_fcache_fileinfo ([ bool $summaryonly = FALSE ] ) : bool
wincache_fcache_meminfo ( void ) : array
wincache_lock ( string $key [, bool $isglobal = FALSE ] ) : string
wincache_ocache_fileinfo ([ bool $summaryonly = FALSE ] ) : bool
wincache_ocache_meminfo ( void ) : array
wincache_refresh_if_changed ([ array $files = NULL ] ) : array
wincache_rplist_fileinfo ([ bool $summaryonly = FALSE ] ) : bool
wincache_rplist_meminfo ( void ) : array
wincache_scache_info ([ bool $summaryonly = FALSE ] ) : bool
wincache_scache_meminfo ( void ) : array
wincache_ucache_add ( string $key , mixed $value [, int $ttl = 0 ] ) : string [:OR:] ( array $values [, mixed $unused = NULL [, int $ttl = 0 ]] ) : string
wincache_ucache_cas ( string $key , int $old_value , int $new_value ) : string
wincache_ucache_clear ( void ) : bool
wincache_ucache_dec ( string $key [, int $dec_by = 1 [, bool &$success ]] ) : string
wincache_ucache_delete ( mixed $key ) : mixed
wincache_ucache_exists ( string $key ) : string
wincache_ucache_get ( mixed $key [, bool &$success ] ) : mixed
wincache_ucache_inc ( string $key [, int $inc_by = 1 [, bool &$success ]] ) : string
wincache_ucache_info ([ bool $summaryonly = FALSE [, string $key = NULL ]] ) : bool
wincache_ucache_meminfo ( void ) : array
wincache_ucache_set ( mixed $key , mixed $value [, int $ttl = 0 ] ) : mixed [:OR:] ( array $values [, mixed $unused = NULL [, int $ttl = 0 ]] ) : mixed
wincache_unlock ( string $key ) : string
wordwrap ( string $str [, int $width = 75 [, string $break = "\n" [, bool $cut = FALSE ]]] ) : string
xattr_get ( string $filename , string $name [, int $flags = 0 ] ) : string
xattr_list ( string $filename [, int $flags = 0 ] ) : string
xattr_remove ( string $filename , string $name [, int $flags = 0 ] ) : string
xattr_set ( string $filename , string $name , string $value [, int $flags = 0 ] ) : string
xattr_supported ( string $filename [, int $flags = 0 ] ) : string
xdiff_file_bdiff ( string $old_file , string $new_file , string $dest ) : string
xdiff_file_bdiff_size ( string $file ) : string
xdiff_file_bpatch ( string $file , string $patch , string $dest ) : string
xdiff_file_diff ( string $old_file , string $new_file , string $dest [, int $context = 3 [, bool $minimal = FALSE ]] ) : string
xdiff_file_diff_binary ( string $old_file , string $new_file , string $dest ) : string
xdiff_file_merge3 ( string $old_file , string $new_file1 , string $new_file2 , string $dest ) : string
xdiff_file_patch ( string $file , string $patch , string $dest [, int $flags = DIFF_PATCH_NORMAL ] ) : string
xdiff_file_patch_binary ( string $file , string $patch , string $dest ) : string
xdiff_file_rabdiff ( string $old_file , string $new_file , string $dest ) : string
xdiff_string_bdiff ( string $old_data , string $new_data ) : string
xdiff_string_bdiff_size ( string $patch ) : string
xdiff_string_bpatch ( string $str , string $patch ) : string
xdiff_string_diff ( string $old_data , string $new_data [, int $context = 3 [, bool $minimal = FALSE ]] ) : string
xdiff_string_diff_binary ( string $old_data , string $new_data ) : string
xdiff_string_merge3 ( string $old_data , string $new_data1 , string $new_data2 [, string &$error ] ) : string
xdiff_string_patch ( string $str , string $patch [, int $flags [, string &$error ]] ) : string
xdiff_string_patch_binary ( string $str , string $patch ) : string
xdiff_string_rabdiff ( string $old_data , string $new_data ) : string
xhprof_disable ( void ) : array
xhprof_enable ([ int $flags = 0 [, array $options ]] ) : int
xhprof_sample_disable ( void ) : array
xhprof_sample_enable ( void ) : void
xmlrpc_decode ( string $xml [, string $encoding = "iso-8859-1" ] ) : string
xmlrpc_decode_request ( string $xml , string &$method [, string $encoding ] ) : string
xmlrpc_encode ( mixed $value ) : mixed
xmlrpc_encode_request ( string $method , mixed $params [, array $output_options ] ) : string
xmlrpc_get_type ( mixed $value ) : mixed
xmlrpc_is_fault ( array $arg ) : array
xmlrpc_parse_method_descriptions ( string $xml ) : string
xmlrpc_server_add_introspection_data ( resource $server , array $desc ) : resource
xmlrpc_server_call_method ( resource $server , string $xml , mixed $user_data [, array $output_options ] ) : resource
xmlrpc_server_create ( void ) : resource
xmlrpc_server_destroy ( resource $server ) : resource
xmlrpc_server_register_introspection_callback ( resource $server , string $function ) : resource
xmlrpc_server_register_method ( resource $server , string $method_name , string $function ) : resource
xmlrpc_set_type ( string &$value , string $type ) : string
xmlwriter_end_attribute ( resource $xmlwriter ) : bool
xmlwriter_end_cdata ( resource $xmlwriter ) : bool
xmlwriter_end_comment ( resource $xmlwriter ) : bool
xmlwriter_end_document ( resource $xmlwriter ) : bool
xmlwriter_end_dtd ( resource $xmlwriter ) : bool
xmlwriter_end_dtd_attlist ( resource $xmlwriter ) : bool
xmlwriter_end_dtd_element ( resource $xmlwriter ) : bool
xmlwriter_end_dtd_entity ( resource $xmlwriter ) : bool
xmlwriter_end_element ( resource $xmlwriter ) : bool
xmlwriter_end_pi ( resource $xmlwriter ) : bool
xmlwriter_flush ( resource $xmlwriter [, bool $empty = TRUE ] ) : bool
xmlwriter_full_end_element ( resource $xmlwriter ) : bool
xmlwriter_open_memory ( void ) : bool
xmlwriter_open_uri ( string $uri ) : string
xmlwriter_output_memory ( resource $xmlwriter [, bool $flush = TRUE ] ) : bool
xmlwriter_set_indent ( resource $xmlwriter , bool $indent ) : bool
xmlwriter_set_indent_string ( resource $xmlwriter , string $indentString ) : string
xmlwriter_start_attribute ( resource $xmlwriter , string $name ) : string
xmlwriter_start_attribute_ns ( resource $xmlwriter , string $prefix , string $name , string $uri ) : string
xmlwriter_start_cdata ( resource $xmlwriter ) : bool
xmlwriter_start_comment ( resource $xmlwriter ) : bool
xmlwriter_start_document ( resource $xmlwriter [, string $version = 1.0 [, string $encoding = NULL [, string $standalone ]]] ) : string
xmlwriter_start_dtd ( resource $xmlwriter , string $qualifiedName [, string $publicId [, string $systemId ]] ) : string
xmlwriter_start_dtd_attlist ( resource $xmlwriter , string $name ) : string
xmlwriter_start_dtd_element ( resource $xmlwriter , string $qualifiedName ) : string
xmlwriter_start_dtd_entity ( resource $xmlwriter , string $name , bool $isparam ) : string
xmlwriter_start_element ( resource $xmlwriter , string $name ) : string
xmlwriter_start_element_ns ( resource $xmlwriter , string $prefix , string $name , string $uri ) : string
xmlwriter_start_pi ( resource $xmlwriter , string $target ) : string
xmlwriter_text ( resource $xmlwriter , string $content ) : string
xmlwriter_write_attribute ( resource $xmlwriter , string $name , string $value ) : string
xmlwriter_write_attribute_ns ( resource $xmlwriter , string $prefix , string $name , string $uri , string $content ) : string
xmlwriter_write_cdata ( resource $xmlwriter , string $content ) : string
xmlwriter_write_comment ( resource $xmlwriter , string $content ) : string
xmlwriter_write_dtd ( resource $xmlwriter , string $name [, string $publicId [, string $systemId [, string $subset ]]] ) : string
xmlwriter_write_dtd_attlist ( resource $xmlwriter , string $name , string $content ) : string
xmlwriter_write_dtd_element ( resource $xmlwriter , string $name , string $content ) : string
xmlwriter_write_dtd_entity ( resource $xmlwriter , string $name , string $content , bool $pe , string $pubid , string $sysid , string $ndataid ) : string
xmlwriter_write_element ( resource $xmlwriter , string $name [, string $content ] ) : string
xmlwriter_write_element_ns ( resource $xmlwriter , string $prefix , string $name , string $uri [, string $content ] ) : string
xmlwriter_write_pi ( resource $xmlwriter , string $target , string $content ) : string
xmlwriter_write_raw ( resource $xmlwriter , string $content ) : string
xml_error_string ( int $code ) : int
xml_get_current_byte_index ( resource $parser ) : resource
xml_get_current_column_number ( resource $parser ) : resource
xml_get_current_line_number ( resource $parser ) : resource
xml_get_error_code ( resource $parser ) : resource
xml_parse ( resource $parser , string $data [, bool $is_final = FALSE ] ) : resource
xml_parser_create ([ string $encoding ] ) : string
xml_parser_create_ns ([ string $encoding [, string $separator = ":" ]] ) : string
xml_parser_free ( resource $parser ) : resource
xml_parser_get_option ( resource $parser , int $option ) : resource
xml_parser_set_option ( resource $parser , int $option , mixed $value ) : resource
xml_parse_into_struct ( resource $parser , string $data , array &$values [, array &$index ] ) : resource
xml_set_character_data_handler ( resource $parser , callable $handler ) : resource
xml_set_default_handler ( resource $parser , callable $handler ) : resource
xml_set_element_handler ( resource $parser , callable $start_element_handler , callable $end_element_handler ) : resource
xml_set_end_namespace_decl_handler ( resource $parser , callable $handler ) : resource
xml_set_external_entity_ref_handler ( resource $parser , callable $handler ) : resource
xml_set_notation_decl_handler ( resource $parser , callable $handler ) : resource
xml_set_object ( resource $parser , object &$object ) : resource
xml_set_processing_instruction_handler ( resource $parser , callable $handler ) : resource
xml_set_start_namespace_decl_handler ( resource $parser , callable $handler ) : resource
xml_set_unparsed_entity_decl_handler ( resource $parser , callable $handler ) : resource
yaml_emit ( mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = NULL ]]] ) : mixed
yaml_emit_file ( string $filename , mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = NULL ]]] ) : string
yaml_parse ( string $input [, int $pos = 0 [, int &$ndocs [, array $callbacks = NULL ]]] ) : string
yaml_parse_file ( string $filename [, int $pos = 0 [, int &$ndocs [, array $callbacks = NULL ]]] ) : string
yaml_parse_url ( string $url [, int $pos = 0 [, int &$ndocs [, array $callbacks = NULL ]]] ) : string
yaz_addinfo ( resource $id ) : resource
yaz_ccl_conf ( resource $id , array $config ) : resource
yaz_ccl_parse ( resource $id , string $query , array &$result ) : resource
yaz_close ( resource $id ) : resource
yaz_connect ( string $zurl [, mixed $options ] ) : string
yaz_database ( resource $id , string $databases ) : resource
yaz_element ( resource $id , string $elementset ) : resource
yaz_errno ( resource $id ) : resource
yaz_error ( resource $id ) : resource
yaz_es ( resource $id , string $type , array $args ) : resource
yaz_es_result ( resource $id ) : resource
yaz_get_option ( resource $id , string $name ) : resource
yaz_hits ( resource $id [, array &$searchresult ] ) : resource
yaz_itemorder ( resource $id , array $args ) : resource
yaz_present ( resource $id ) : resource
yaz_range ( resource $id , int $start , int $number ) : resource
yaz_record ( resource $id , int $pos , string $type ) : resource
yaz_scan ( resource $id , string $type , string $startterm [, array $flags ] ) : resource
yaz_scan_result ( resource $id [, array &$result ] ) : resource
yaz_schema ( resource $id , string $schema ) : resource
yaz_search ( resource $id , string $type , string $query ) : resource
yaz_set_option ( resource $id , string $name , string $value ) : resource [:OR:] ( resource $id , array $options ) : resource
yaz_sort ( resource $id , string $criteria ) : resource
yaz_syntax ( resource $id , string $syntax ) : resource
yaz_wait ([ array &$options ] ) : array
yp_all ( string $domain , string $map , string $callback ) : string
yp_cat ( string $domain , string $map ) : string
yp_errno ( void ) : int
yp_err_string ( int $errorcode ) : int
yp_first ( string $domain , string $map ) : string
yp_get_default_domain ( void ) : string
yp_master ( string $domain , string $map ) : string
yp_match ( string $domain , string $map , string $key ) : string
yp_next ( string $domain , string $map , string $key ) : string
yp_order ( string $domain , string $map ) : string
zend_logo_guid ( void ) : string
zend_thread_id ( void ) : int
zend_version ( void ) : string
zip_close ( resource $zip ) : resource
zip_entry_close ( resource $zip_entry ) : resource
zip_entry_compressedsize ( resource $zip_entry ) : resource
zip_entry_compressionmethod ( resource $zip_entry ) : resource
zip_entry_filesize ( resource $zip_entry ) : resource
zip_entry_name ( resource $zip_entry ) : resource
zip_entry_open ( resource $zip , resource $zip_entry [, string $mode ] ) : resource
zip_entry_read ( resource $zip_entry [, int $length = 1024 ] ) : resource
zip_open ( string $filename ) : string
zip_read ( resource $zip ) : resource
zlib_decode ( string $data [, string $max_decoded_len ] ) : string
zlib_encode ( string $data , int $encoding [, int $level = -1 ] ) : string
zlib_get_coding_type ( void ) : string
zookeeper_dispatch ( void ) : void
__autoload ( string $class ) : string
__halt_compiler ( void ) : void
